@relation 'dataset_corrected_only_comments_and_manually_revised_subset_(only comments and class)-weka.filters.unsupervised.instance.Randomize-S42-weka.filters.unsupervised.instance.RemoveWithValues-S0.0-Clast-Llast-weka.filters.unsupervised.instance.Randomize-S42'

@attribute text string
@attribute is_directive {directive,non-directive}

@data
'This allows the flexibility\nof adding localizations for new localizations at any time.\n',non-directive
' The default-default value for color preferences \n (black, <code>RGB(0,0,0)</code>).\n',non-directive
'@throws IOException\n',non-directive
'@param parent the parent component used for checking or <code>null</code> if none\n ',directive
'A\n<tt>CopyOnWriteArrayList</tt> is preferable to\na synchronized <tt>ArrayList</tt> when the expected number of reads\nand traversals greatly outnumber the number of updates to a list.\n\n',directive
'@exception InterruptedException if the operation detects a request to cancel, \n  using <code>IProgressMonitor.isCanceled()</code>, it should exit by throwing \n  <code>InterruptedException</code>\n\n ',directive
' Layout constant (value <code>0</code>) indicating that\n each field editor is handled as a single component.\n',non-directive
'@return the scale control, or <code>null</code> if no scale field is\n         created yet\n',directive
'<p>\n Note: This content assist subject control may not support prepending a verify\n listener, in which case <code>false</code> will be returned. ',directive
'@since 3.0\n',non-directive
' Convenience API. ',non-directive
'In contrast to\n <code>ProgressMonitorDialog</code> this class only implements\n <code>IProgressMonitor</code>.\n',directive
'@param name the name of the preference\n ',non-directive
'@param value  the new value\n ',non-directive
' The popup priority: &gt; info pop-ups, &lt; standard content assist.\n ',directive
?,non-directive
'@return <code>true</code> if help is available,\n   and <code>false</code> if this wizard is helpless\n',non-directive
'Therefore application developers may\ntake advantage of any number of provider-based implementations\nwithout having to add or rewrite code.\n\n',directive
'A tactic that often works well is to examine a reference queue in\nthe course of performing some other fairly-frequent action.  ',non-directive
'If product defines\n its own way of handling errors, this error dialog may cause UI inconsistency,\n so until it is absolutely necessary, <code>StatusManager</code> should be\n used.\n ',directive
'The\n{@code synchronized} and {@code volatile} constructs, as well as the\n{@code Thread.start()} and {@code Thread.join()} methods, can form\n<i>happens-before</i> relationships. ',directive
?,non-directive
'In the case of ambiguities, the user must\n make the choice.\n\n ',directive
?,non-directive
'The span controls how many cells\n are filled by the control. \n \n',directive
'As the model changes,\nit is the content provider\'s responsibility to respond to changes to the\nmodel by telling the viewer what to change (done by calling add and remove\nmethods on the viewer). ',directive
'<p>\n Returns one of <code>NONE</code>,<code>INFORMATION</code>,\n <code>WARNING</code>, or <code>ERROR</code>.\n ',directive
'@throws BadLocationException if accessing the document failed\n',non-directive
'@param display the <code>Display</code> to hook into.\n',non-directive
'At the end, this is converted to an array.\n\n ',non-directive
' Set the layoutData for the title area. ',non-directive
?,non-directive
' A thread listener is an object that is interested in receiving notifications\n of thread changes.  For example, a thread listener can be used to notify a \n runnable of the thread that will execute it, allowing the runnable to transfer\n thread-local state from the calling thread before control passes to the new thread.\n \n @since 3.1\n',directive
?,non-directive
'\nProvides an information provider add-on for an <tt>ITextViewer</tt>.\nAn information provider presents information for a certain subject in a\nspecific information control. An information control usually is a floating\nwindow.\n<h2>\nPackage Specification</h2>\n<tt>IInformationPresenter</tt> defines the concept of an information provider.\nIt collaborates with content type specific information providers (<tt>IInformationProvider</tt>)\nwhich determine for a certain offset in a text viewer an information subject\nand the information available about this subject.. The package contains\na default implementation of <tt>IInformationPresenter</tt> (<tt>InformationPresenter</tt>).\n',non-directive
?,non-directive
' Removes all contribution nodes known to this manager.\n',non-directive
'Since quick assists can be proposed\nwhere appropriate they are normally not visible in the viewer. ',directive
' Removes the given input change listener from this input change provider.\n ',non-directive
' Set the foreground and background colors of the\n control to the specified values. If the values are\n null than ignore them. \n @param control the control the foreground and/or background color should be set\n \n @param foreground Color the foreground color (maybe <code>null</code>)\n @param background Color the background color (maybe <code>null</code>)\n',directive
?,non-directive
'@since 3.0\n \n',non-directive
' The default-default value for <code>FontData[]</code> preferences.\n',non-directive
'@param display the display used \n ',non-directive
'In \n general, you should use a *Registry class to map IDs onto descriptors, and use a \n ResourceManager to convert the descriptors into real Images/Fonts/etc.\n ',directive
'This could be useful during testing as a placeholder.\n \n',non-directive
' Returns the initial location to use for the shell. Overridden\n to check whether the bounds of the dialog have been stored in\n dialog settings.  If a location has been stored, it is returned.\n \n @param initialSize\n            the initial size of the shell, as returned by\n            <code>getInitialSize</code>.\n @return the initial location of the shell\n \n @since 3.2\n @see #getDialogBoundsSettings()\n @see #getDialogBoundsStrategy()\n',directive
'@param previous the previous input or <code>null</code> if none\n',directive
' Creates a string field editor.\n ',non-directive
' Updates the title bar (title, description, and image) to \n reflect the state of the currently active page in this container.\n <p>\n This method is called by the container itself\n when its wizard page changes and may be called\n by the page at other times to force a title bar \n update.\n </p>\n',directive
'@return the size of the preference page encoded as\n   <code>new Point(width,height)</code>, or \n   <code>(0,0)</code> if the page doesn\'t currently have any UI component\n',directive
'@return the current information control, or <code>null</code> if none available\n',directive
'</p>\n <p>\n Convenience for:\n \n <pre>\n if (monitor.isCanceled())\n \tthrow new InterruptedException();\n </pre>\n \n </p>\n \n ',directive
' <p><code>IWizardContainer2</code> is a supplement to \n <code>IWizardContainer</code> that adds a method for updating the size of \n the wizard shell based on the contents of the current page.</p>\n \n <p>The class <code>WizardDialog</code> provides a fully functional \n implementation of this interface which will meet the needs of\n most clients. ',directive
'@param newMessage\n            the message, or <code>null</code> to clear the message\n',directive
'For example, never call {',directive
'<li>BoundedFifoBuffer - implements a buffer with a fixed size that throws exceptions when full\n',non-directive
' <code>ClosureUtils</code> provides reference implementations and utilities\n for the Closure functor interface. The supplied closures are:\n <ul>\n <li>Invoker - invokes a method on the input object\n <li>For - repeatedly calls a closure for a fixed number of times\n <li>While - repeatedly calls a closure while a predicate is true\n <li>DoWhile - repeatedly calls a closure while a predicate is true\n <li>Chained - chains two or more closures together\n <li>Switch - calls one closure based on one or more predicates\n <li>SwitchMap - calls one closure looked up from a Map\n <li>Transformer - wraps a Transformer as a Closure\n <li>NOP - does nothing\n <li>Exception - always throws an exception\n </ul>\n All the supplied closures are Serializable.\n\n @since Commons Collections 3.0\n @version $Revision: 815034 $ $Date: 2009-09-15 07:54:39 +0200 (Tue, 15 Sep 2009) $\n\n @author Stephen Colebourne\n @author Matt Benson\n',directive
'{',non-directive
'@since 3.3\n',non-directive
'Note: this is a class name, not a file name or path.\n',directive
'Does nothing\n if the wizard has not been created.\n ',directive
'@return the border Color for widgets that display errors.\n ',non-directive
' Identifier for the color used to counter informations For example in\n \'Foo.txt (2 matches)\', the counter information is \'(2 matches)\'.\n \n',non-directive
'@return the value as an int, or the default value\n',non-directive
'@param parent the parent of the field editor\'s control\n ',non-directive
'Convenience API to\n convert primitive types to strings is provided.\n',directive
'The string representation is\n \"font name-style-height\" (for example \"Times New Roman-bold-36\").\n ',directive
'The framework includes abstract subclasses for composing images (<tt>CompositeImageDescriptor</tt>)\nas well as a ready-made concrete subclass for loading images from files\n(<tt>FileImageDescriptor</tt>).\n',directive
'Programs can be configured to output logging\n                      for some levels while ignoring output for others.\n   ',non-directive
?,non-directive
?,non-directive
' Image registry key for warning image (value\n <code>\"dialog_warning_image\"</code>).\n \n @deprecated use\n             org.eclipse.swt.widgets.Display.getSystemImage(SWT.ICON_WARNING)\n',directive
'This API includes a framework whereby different\ndrivers can be installed dynamically to access different data sources.\n',non-directive
'@param value the new value, or <code>null</code> meaning the empty string\n',directive
' The AbstractColumnLayout is a {',directive
'\n\nProvides the classes necessary to create an applet and the classes an applet\nuses to communicate with its applet context.\n',directive
' Informs this field editor\'s listener, if it has one, about a change to\n the value (<code>VALUE</code> property) provided that the old and new\n values are different.\n \n @param oldValue\n            the old value\n @param newValue\n            the new value\n',non-directive
'These objects\n will be compared, so hashCode(...) and equals(...) must return something \n meaningful.\n \n',directive
'@link #showInformationControl(Rectangle)}.\n ',directive
'@link BrowserInformationControl}\n is not available and this input is passed to a {',directive
' Returns the error message that will be displayed when and if \n an error occurs.\n\n @return the error message, or <code>null</code> if none\n',directive
' Returns whether the dialog should be opened before the operation is run.\n ',non-directive
' Display the given error message. ',non-directive
'@param listener a property change listener, or <code>null</code>\n  to remove\n',directive
'@param buttons\n            The buttons in the button bar; must not be <code>null</code>.\n',directive
' Create a PixelConverter which will convert device-independent units to\n pixels using the specified font.\n \n @param font\n            the font that should be used for pixel conversions.\n',directive
'<p>\n This method should not be use for normal page\n sequencing (back, next) which is handled by the \n container itself. ',directive
'@exception NumberFormatException\n                if the string value does not contain a parsable number.\n ',directive
'@link #getCount(Object)} on <code>a</code> would return 2, while\n calling {',directive
'@param title\n            the dialog\'s title, or <code>null</code> if none\n ',directive
'The agent options are passed as a single string,\nany additional parsing should be performed by the agent itself. \n\n',directive
'These include method invokation, returning a constant,\n cloning and returning the string value.\n\n ',directive
'It differs from \n the various JFace *Registry classes, which also map symbolic IDs onto resources. ',directive
'The attributes and operations of an MXBean use only\n        <em>JMX open types</em> which include basic data types, \n        {',directive
'@link #getNumber(Map,Object)}.\n\n ',non-directive
' Creates a string field editor of unlimited width.\n Use the method <code>setTextLimit</code> to limit the text.\n \n @param name the name of the preference this field editor works on\n @param labelText the label text of the field editor\n @param parent the parent of the field editor\'s control\n',non-directive
' Gets a list based on an iterator.\n ',non-directive
?,non-directive
'This offers several benefits over creating GridData normal way:\n \n <ul>\n ',directive
' <i>(Violation)</i>\n Remove all elements represented in the given collection,\n respecting cardinality.  That is, if the given collection\n <code>coll</code> contains <code>n</code> copies of a given object,\n the bag will have <code>n</code> fewer copies, assuming the bag\n had at least <code>n</code> copies to begin with.\n\n <P>The {@link Collection#removeAll(Collection)} method specifies\n that cardinality should <i>not</i> be respected; this method should\n remove <i>all</i> occurrences of every object contained in the \n given collection.\n\n @param coll  the collection to remove\n @return <code>true</code> if this call changed the collection\n',directive
?,non-directive
?,non-directive
'<h2>Related Documentation</h2>\n\nFor overviews, tutorials, examples, guides, and tool documentation, please see:\n<ul>\n  ',non-directive
?,non-directive
'@param predicate  the predicate to switch on\n ',non-directive
'In all\ncases that time-outs are used, the time-out specifies the minimum time\nthat the method should wait before indicating that it\ntimed-out.  ',directive
'<li>Growth - grows the list instead of erroring when set/add used with index beyond the list size</li>\n',directive
'Progress should be reported to the given progress monitor.\n ',directive
'@throws IllegalStateException if the dialog already has a tray open\n ',directive
'@param parent\n            the parent shell of the dialog, or <code>null</code> if none\n ',directive
'<LI> <I>Logger</I>: The main entity on which applications make \n                logging calls. ',directive
?,non-directive
' Gets a Closure that always throws an exception.\n ',non-directive
?,non-directive
' A preference manager maintains a hierarchy of preference nodes and\n associated preference pages.\n',non-directive
' The Back button has been pressed.\n',non-directive
'<p>The \"Concurrent\" prefix used with some classes in this package is a\nshorthand indicating several differences from similar \"synchronized\"\nclasses. ',directive
' Load the FontRegistry using the ClassLoader from the PlatformUI\n plug-in\n <p>\n This method should only be called from the UI thread. ',directive
'@return <code>true</code> while code from {',directive
'@link #getCount(Object)} on that object must\n be <code>&gt;= n</code> for all <code>n</code> in <code>coll</code>.\n ',directive
'<LI><code>Driver</code> interface -- provides the API for registering\n             and connecting drivers based on JDBC technology (\"JDBC drivers\"); \n             generally used only by the <code>DriverManager</code> class\n\t ',directive
' Returns the container of this wizard.\n\n ',non-directive
' Returns the font in JFace\'s font registry with the given symbolic font\n name. Convenience method equivalent to\n \n <pre>\n JFaceResources.getFontRegistry().get(symbolicName)\n </pre>\n \n If an error occurs, return the default font.\n \n @param symbolicName\n            the symbolic font name\n @return the font\n',directive
' The Cancel button control.\n',non-directive
'It has methods for converting between SWT\nkey events and the internal representation, and vice versa.  ',directive
' Button height in dialog units (value 14).\n \n @deprecated This constant is no longer in use.\n The button heights are now determined by the layout.\n',non-directive
'</ul>\n\n\n',non-directive
'<p>\n The dialog store is used to record state between\n wizard invocations (for example, radio button selections,\n last directory, etc.).\n ',non-directive
'@param parent the parent of the field editor\'s control\n',non-directive
'\n\nProvides the RMI package. RMI is Remote Method Invocation.  It is a\nmechanism that enables an object on one Java virtual machine to invoke\nmethods on an object in another Java virtual machine.  Any object that\ncan be invoked this way must implement the Remote interface. When such\nan object is invoked, its arguments are ``marshalled\'\' and sent from the\nlocal virtual machine to the remote one, where the arguments are\n``unmarshalled.\'\'  When the method terminates, the results are\nmarshalled from the remote machine and sent to the caller\'s virtual\nmachine.  If the method invocation results in an exception being\nthrown, the exception is indicated to caller.\n\n<!--\n<h2>Package Specification</h2>\n\n##### FILL IN ANY SPECS NEEDED BY JAVA COMPATIBILITY KIT #####\n<ul>\n  <li><a href=\"\">##### REFER TO ANY FRAMEMAKER SPECIFICATION HERE #####</a>\n</ul>\n\n<h2>Related Documentation</h2>\n\nFor overviews, tutorials, examples, guides, and tool documentation, please see:\n<ul>\n  <li><a href=\"\">##### REFER TO NON-SPEC DOCUMENTATION HERE #####</a>\n</ul>\n-->\n\n@since JDK1.1\n',directive
'BigInteger is analogous to Java\'s primitive integer types except that it\nprovides arbitrary precision, hence operations on BigIntegers do not overflow\nor lose precision.  ',non-directive
'@param text the text widget to adapt\n',non-directive
?,non-directive
'\n\nProvides classes that are fundamental to the design of the Java\nprogramming language. The most important classes are <code>Object</code>,\nwhich is the root of the class hierarchy, and <code>Class</code>, instances of\nwhich represent classes at run time.\n<p>\nFrequently it is necessary to represent a value of primitive type as\nif it were an object. The wrapper classes <code>Boolean</code>,\n<code>Character</code>, <code>Integer</code>, <code>Long</code>, <code>Float</code>, and\n<code>Double</code> serve this purpose. An object of type <code>Double</code>,\nfor example, contains a field whose type is double, representing that\nvalue in such a way that a reference to it can be stored in a variable\nof reference type. These classes also provide a number of methods for\nconverting among primitive values, as well as supporting such\nstandard methods as equals and hashCode.  The <code>Void</code> class is a\nnon-instantiable class that holds a reference to a <code>Class</code> object\nrepresening the primitive type void.\n<p>\nThe class <code>Math</code> provides commonly used mathematical functions such\nas sine, cosine, and square root. The classes <code>String</code> and\n<code>StringBuffer</code> similarly provide commonly used operations on\ncharacter strings.\n<p>\nClasses <code>ClassLoader</code>, <code>Process</code>, <code>Runtime</code>,\n<code>SecurityManager</code>, and <code>System</code> provide \"system operations\"\nthat manage the dynamic loading of classes, creation of external processes,\nhost environment inquiries such as the time of day, and enforcement of\nsecurity policies.\n<p>\nClass <code>Throwable</code> encompasses objects that may be thrown by the\nthrow statement (&sect;14.16). Subclasses of <code>Throwable</code> represent errors\nand exceptions.\n<p>\n<h2>Package Specification</h2>\n\n\n<a name=\"charenc\"></a>\n<h3>Character Encodings</h3>\n\nThe specification of the {@link java.nio.charset.Charset\njava.nio.charset.Charset} class describes the naming conventions for character\nencodings as well as the set of standard encodings that must be supported by\nevery implementation of the Java platform.\n\n\n<!--\n<ul>\n  <li><a href=\"\">##### REFER TO ANY FRAMEMAKER SPECIFICATION HERE #####</a>\n</ul>\n\n<h2>Related Documentation</h2>\n\nFor overviews, tutorials, examples, guides, and tool documentation, please see:\n<ul>\n  <li><a href=\"\">##### REFER TO NON-SPEC DOCUMENTATION HERE #####</a>\n</ul>\n-->\n\n@since JDK1.0\n',directive
'@param parent\n            the parent shell of the dialog, or <code>null</code> if none\n ',directive
'@link Transformer} is more appropriate.\n ',non-directive
' Create the combo box field editor.\n \n @param name the name of the preference this field editor works on\n @param labelText the label text of the field editor\n @param entryNamesAndValues the names (labels) and underlying values to populate the combo widget.  These should be\n arranged as: { {name1, value1}, {name2, value2}, ...}\n @param parent the parent composite\n',directive
'<P>\nThe manifest of the agent JAR file must contain the attribute <code>Premain-Class</code>. ',directive
'No property change events are reported by changing default\n values.\n ',directive
' Notifies any selection changed listeners that the selected page\n has changed.\n Only listeners registered at the time this method is called are notified.\n\n @param event a selection changed event\n\n @see IPageChangedListener#pageChanged\n \n @since 3.1\n',directive
' Shows the error message set via <code>setErrorMessage</code>.\n',directive
' Performs any actions appropriate in response to the user \n having pressed the Cancel button, or refuse if canceling\n now is not permitted.\n\n ',non-directive
' <b>NOTE:</b> As no shell has been specified this method will\n not open any blocked notification until all other modal shells\n have been closed.\n \n',directive
'@link java.util.concurrent.Callable}, the\nresult-bearing analog of {',directive
'@return <code>true</code> if any of the managed popups have the focus, <code>false</code> otherwise\n',non-directive
'Note that the window will have no visual\n representation (no widgets) until it is told to open. ',directive
'@param information the information to show\n ',non-directive
'Long-running operations are typically presented at the UI via a modal dialog\n showing a progress indicator and a Cancel button.\n ',directive
'If the listener is not registered, this\n call has no effect.\n\n ',directive
'Example: <code>Times New Roman-bold-36</code>.\n ',directive
' Validates the input.\n <p>\n The default implementation of this framework method delegates the request\n to the supplied input validator object; if it finds the input invalid,\n the error message is displayed in the dialog\'s message line. This hook\n method is called whenever the text changes in the input field.\n </p>\n',directive
'@author Arron Bates\n ',non-directive
' Release the page managed by this node, and any SWT resources\n held onto by this node (Images, Fonts, etc).  \n\n ',non-directive
' Sets the range of valid values for this field.\n \n',non-directive
'<p>\nYou may also consider using \n{',directive
'@deprecated As of 3.2, replaced by Platform UI\'s field assist support *\n',directive
?,non-directive
' Constructs an <code>LineIndexOutOfBoundsException</code> with no detail message.\n',non-directive
' Undoes everything that was done by a previous call to create(...), given\n the object that was returned by create(...).\n \n',non-directive
'Otherwise\n <code>null</code> is returned.\n \n',directive
' Determines whether extra horizontal or vertical space should be allocated to\n this control\'s column when the layout resizes. If any control in the column\n is set to grab horizontal then the whole column will grab horizontal space.\n If any control in the row is set to grab vertical then the whole row will grab\n vertical space.\n \n @param horizontal true if the control\'s column should grow horizontally\n @param vertical true if the control\'s row should grow vertically\n @return this\n',directive
' The Next button has been pressed.\n',non-directive
' Creates a new path field editor \n',non-directive
' Lightweight descriptor for an SWT color. Each ColorDescriptor will create a particular SWT \n Color on demand. This object will be compared so hashCode(...) and equals(...) must \n return meaningful values.\n \n @since 3.1\n',directive
' Sets the default value for the string-valued preference with the\n given name. \n <p>\n Note that the current value of the preference is affected if\n the preference\'s current value was its old default value, in which\n case it changes to the new default value. If the preference\'s current\n is different from its old default value, its current value is\n unaffected. No property change events are reported by changing default\n values.\n </p>\n\n @param name the name of the preference\n @param defaultObject the new default value for the preference\n',directive
'<li><p>The agent class must implement a public static <code>agentmain</code> method. ',directive
'<li><tt>TemplatePreferencePage</tt> allows\nthe user to access the templates within a <tt>TemplateStore.</tt></li>\n</ul>\n',non-directive
?,non-directive
?,non-directive
'DeviceResourceDescriptors\n are managed by a ResourceRegistry.\n \n',non-directive
'Also includes classes for compressing and decompressing\ndata using the DEFLATE compression algorithm, which is used by the\nZIP and GZIP file formats. ',non-directive
'It\n cannot be changed or replaced by \"global\" error handling facility (\n <code>org.eclipse.ui.statushandler.StatusManager</code>). ',directive
'@exception NumberFormatException if the <code>String</code> does not\n   contain a parsable integer\n',directive
'If the value is a <code>String</code> and it equals \'true\' ignoring case\n then <code>true</code> is returned, otherwise <code>false</code>.\n ',non-directive
'If an SWT image was allocated, it is disposed.\n ',directive
'To create a resource manager on a particular display, \n use <code>new LocalResourceManager(JFaceResources.getResources(myDisplay))</code>.\n ',directive
'@return the node that was removed, or <code>null</code> if there was no\n         node at the given path\n',directive
' Gets a new Properties object initialised with the values from a Map.\n A null input will return an empty properties object.\n\n @param map  the map to convert to a Properties object, may not be null\n @return the properties object\n',directive
'@since 1.4\n\n\n',non-directive
' The button bar; <code>null</code> until dialog is layed out.\n',non-directive
?,non-directive
' Create a new Closure that calls another closure based on the\n result of the specified predicate.\n \n @see org.apache.commons.collections.functors.IfClosure\n \n @param predicate  the validating predicate\n @param trueClosure  the closure called if the predicate is true\n @return the <code>if</code> closure\n @throws IllegalArgumentException if the predicate is null\n @throws IllegalArgumentException if the closure is null\n @since Commons Collections 3.2\n',directive
' Instructs the GridLayout to ignore this control when performing layouts. \n \n',non-directive
' Clear the error message. Restore the previously displayed message if\n there is one, if not restore the title label.\n  \n',directive
'@link java.util.Map Map} implementation will also implement\n{',non-directive
'<strong>Must only be called when the information control is instanceof {',directive
' Create a new Transformer that calls each transformer in turn, passing the \n result into the next transformer.\n \n @see org.apache.commons.collections.functors.ChainedTransformer\n \n @param transformers  an array of transformers to chain\n @return the transformer\n @throws IllegalArgumentException if the transformers array is null\n @throws IllegalArgumentException if any transformer in the array is null\n',directive
' <p>\n <b>You can only add the {',directive
?,non-directive
'@return whether the mouse cursor is allowed to leave the subject area without closing the hover\n',non-directive
'@throws BadLocationException if accessing the document failed\n',non-directive
'A standard file \n dialog appears when the user presses the change button.\n',non-directive
'@param sequence a read-write list of preference nodes\n  (element type: <code>IPreferenceNode</code>)\n  in the given order\n ',directive
'Equivalent to <code>String.valueOf(value.floatValue())</code>.\n\n ',directive
?,non-directive
?,non-directive
' Minimal interface to a page change provider. Used for dialogs which can\n switch between multiple pages.\n \n @since 3.1\n',directive
' A field editor for an integer type preference.\n',non-directive
'@param replacer the information control replacer for this manager, or\n            <code>null</code> if no information control replacing should\n            take place\n',directive
'The default-default values for the primitive types are as follows:\n <ul>\n \t',directive
'@link ITextSelection#isEmpty()}, which returns\n <code>true</code> only for invalid selections.\n \n',directive
' Returns the cause of this throwable or <code>null</code> if the\n cause is nonexistent or unknown. \n \n @return the cause or <code>null</code>\n @since 3.1\n',non-directive
'It uses the default partitioning.\n',directive
' Create a new Closure that calls one of two closures depending \n on the specified predicate.\n \n',directive
'@param value the value to be converted\n ',non-directive
'@return <code>true</code> if the iterator has a previous element\n',non-directive
'This method replaces an existing image descriptor associated with the \n given key, but fails if there is a real image associated with it.\n\n ',directive
'@since 3.1\n',non-directive
'If there is already a processor registered for this type, the new processor\n is registered instead of the old one.\n\n ',directive
?,non-directive
'<li><code>MessageDialog.WARNING</code> for a dialog with a\n            warning image</li>\n            </ul>\n ',directive
' Sets whether JFace dialogs that support help control should\n show the control by default. If set to <code>false</code>, \n help control can still be shown on a per-dialog basis.\n \n @param helpAvailable <code>true</code> to show the help\n control, <code>false</code> otherwise.\n @since 3.2\n',directive
'<li>Typed - ensures that only elements that are of a specific type can be added\n',directive
'If the region containing the position is replaced,\n the position is placed at the same location inside the replacement text, but\n always inside the replacement text.\n\n ',directive
' PixelConverter performs various conversions from device-independent units\n (such as DLUs or characters) to pixels. It can be associated with a control or\n a font. In the case of a control, the font used by the control at the time\n the PixelConverter is created is used for the pixel calculations. In the case\n of a specific font, the supplied font is used for the calculations.\n \n The control and/or font must not be disposed at the time the PixelConverter\n is created.\n \n @since 3.5\n',directive
' Thrown to indicate that an attempt to create or modify a {@link Range} failed because it would\n have resulted in an illegal range. A range is illegal if its length is &lt;= 0 or if its start\n line is &lt; 0.\n\n @since 3.2\n',non-directive
'A size\n        of 0 has special semantics defined by GridLayout. \n ',directive
'<li>Synchronized - synchronizes method access for multi-threaded environments\n',directive
'@see Dialog#getDialogBoundsStrategy()\n',non-directive
' Creates a new path field editor \n',non-directive
'<p>\n A wizard selection page should present a list of wizard nodes \n corresponding to other wizards. ',directive
'<li> An object is <em>softly reachable</em> if it is not strongly reachable but\ncan be reached by traversing a soft reference.\n\n',directive
'@param parentRegistry global registry \n',non-directive
'<p>\n Note: Trays may not be supported with all custom layouts on the dialog\'s\n Shell. ',directive
'@link org.eclipse.jface.text.information.IInformationProvider}s use to encode the information they provide.\n ',directive
'@return the string to display, or <code>null</code> if null was passed\n         in\n \n ',directive
'The class must define a <code>run</code> method that takes a progress monitor.\n ',directive
'The values are in the\n same order as the keys.\n \n',directive
'@param parent\n            the parent composite to contain the buttons\n',non-directive
' Sets the annotation model.\n\n @param model the annotation model, possibly <code>null</code>\n @see IVerticalRulerColumn#setModel(IAnnotationModel)\n',non-directive
'<p>\n',non-directive
'@param hIndent distance to move to the right (negative values move left)\n ',non-directive
'<code>getCurrentPage</code> returns the\n current page; <code>showPage</code> programmatically changes the\n the current page. ',non-directive
'@return the value as an RGB color value\n ',non-directive
'If <code>getImage(Object)</code> returns <code>null</code>, a default image is used.\n   ',directive
'@link org.apache.commons.collections.Put Put} and\n{',non-directive
'the computed hues are not equidistant,\n but adaptively distributed on the color wheel.\n ',directive
'</p>\n \n ',non-directive
' <p>Does not modify the reciever.</p>\n \n ',directive
'\nProvides a framework for rule based text scanning\nand uses the framework to provide rule-driven default implementations of\n<tt>IPresentationDamager</tt>, <tt>IPresentationRepairer</tt> and <tt>IDocumentPartitioner</tt>.\n<h2>\nPackage Specification</h2>\n<tt>RuleBasedScanner</tt> is a document-based scanner controlled by <tt>IRule</tt>\nobjects. When evaluated an <tt>IRule</tt> always returns an <tt>IToken</tt>.\nThe package provides a set of rules whereby <tt>PatternRule</tt> is the\nmost important one. <tt>PatternRule</tt> defines a pattern-configurable\nrule.\n',non-directive
'</p>\n <p>\n Note that the preferred way of re-initializing a preference to its\n default value is to call <code>setToDefault</code>.\n ',directive
'Convenience method equivalent to\n \n <pre>\n JFaceResources.getFontRegistry().get(JFaceResources.BANNER_FONT)\n </pre>\n \n ',directive
?,non-directive
' Vertical margin in dialog units (value 7).\n',non-directive
'@param newValue the new value, or <code>null</code>\n',directive
'@version $Revision: 814997 $ $Date: 2009-09-15 07:29:56 +0200 (Tue, 15 Sep 2009) $\n\n ',non-directive
'@param tableTree\n            the control\n \n ',non-directive
'However,\n the value the parents return from this method is ignored.\n\n ',directive
'@param prefStore\n            The prefStore to set. ',non-directive
' Checks if the given parent is the current parent of the\n supplied control; throws an (unchecked) exception if they\n are not correctly related.\n\n @param control the control\n @param parent the parent control\n',non-directive
'An existing viewer may be retargeted by giving\nit a different object as input; the viewer is responsible for informing\nthe content provider of these kinds of wholesale changes (<tt>IContentProvider.inputChanged</tt>).\n',directive
'<p>\n The color at a given <code>index</code> has the hue returned by\n {',directive
' The label for skip buttons.\n',non-directive
'@param button\n            The button to use; must not be <code>null</code>.\n',directive
'@author Arun Mammen Thomas\n ',non-directive
'</p>\n\n ',non-directive
'@link\njava.util.concurrent.SynchronousQueue}, {',directive
'<li>Predicated - ensures that only elements that are valid according to a predicate can be added\n',directive
'<P>\n<b>NOTE:</b> Many of the new features are optional; consequently, there is \nsome variation in drivers and the features they support. ',directive
'\n<p>\nThis package contains implementations of the\n{',non-directive
' A position updater that never deletes a position. If the region containing\n the position is deleted, the position is moved to the beginning/end (falling\n together) of the change. If the region containing the position is replaced,\n the position is placed at the same location inside the replacement text, but\n always inside the replacement text.\n\n @since 3.1\n',directive
'@param dlus\n            the number of horizontal dialog units\n ',non-directive
'The currently displayed message is saved\n and will be redisplayed when the error message is set to\n <code>null</code>.\n \n',directive
' Finds and returns the contribution node at the given path.\n\n ',non-directive
?,non-directive
' Creates a new object and saves in it the current enable/disable state of\n the given control and its descendents; the controls that are saved are\n also disabled.\n \n',directive
' Shortens the given text <code>textValue</code> so that its width in\n pixels does not exceed the width of the given control. ',non-directive
?,non-directive
?,non-directive
'No event is fired in\n the case where <code>setColorValue(RGB)</code> is invoked.\n \n',directive
'\n The field editor preference page implementation of a <code>PreferencePage</code>\n method loads all the field editors with their default values.\n',non-directive
?,non-directive
'<p>Note: None of the classes in this package maintain global state.\n<br>&nbsp;\n',directive
'Public equivalent to\n <code>setSelectedNodePreference</code>.\n \n',directive
'</dd>\n<dt><code>Can-Set-Native-Method-Prefix</code></dt>\n',non-directive
' Sets the parent ruler - the delegating column must call this method as soon as it creates its\n control.\n\n @param parentRuler the parent ruler\n',directive
'<li>Invoker - returns the result of a method call on the input object\n ',directive
' Defines a simple key value pair.\n ',non-directive
' A dialog to display one or more errors to the user, as contained in an\n <code>IStatus</code> object. If an error contains additional detailed\n information then a Details button is automatically supplied, which shows or\n hides an error details viewer when pressed by the user.\n \n <p>\n This dialog should be considered being a \"local\" way of error handling. It\n cannot be changed or replaced by \"global\" error handling facility (\n <code>org.eclipse.ui.statushandler.StatusManager</code>). If product defines\n its own way of handling errors, this error dialog may cause UI inconsistency,\n so until it is absolutely necessary, <code>StatusManager</code> should be\n used.\n </p>\n \n @see org.eclipse.core.runtime.IStatus\n',directive
'<li><p>The manifest of the agent JAR must contain the attribute <code>Agent-Class</code>. \n      ',directive
' Sets whether ModalContext is running in debug mode.\n \n @param debugMode\n            <code>true</code> for debug mode, and <code>false</code>\n            for normal mode (the default)\n',directive
'A size\n        of 0 has special semantics defined by GridLayout.\n ',directive
'<p>The dialog framework consists of an abstract base class (<tt>Dialog</tt>),\nalong with more concrete dialog subclasses for displaying messages (<tt>MessageDialog</tt>),\nsoliciting text input (<tt>InputDialog</tt>), and displaying progress during\na long-running operation (<tt>ProgressMonitorDialog</tt>).\n',directive
'@see IRunnableContext#run\n',non-directive
' Removes the subnode of this preference node with the given node id.\n\n ',non-directive
'The data types being transmitted between the JMX connector\nserver and the connector client are JMX\n{',directive
?,non-directive
?,non-directive
'<LI>Pooled connections -- allowing connections to be used and reused\n  ',non-directive
'<li><a href=\n    \"{@docRoot}/../technotes/guides/security/crypto/HowToImplAProvider.html\">\n    <b>How to Implement a Provider for the\n    Java<FONT SIZE=-2><SUP>TM</SUP></FONT> Cryptography Architecture\n    </b></a></li>\n</ul>\n\n',non-directive
' Abstract base class for all field editors.\n <p>\n A field editor presents the value of a preference to the end \n user. The value is loaded from a preference store; if\n modified by the end user, the value is validated and eventually\n stored back to the preference store. A field editor reports\n an event when the value, or the validity of the value, changes.\n </p>\n <p>\n Field editors should be used in conjunction with a field \n editor preference page (<code>FieldEditorPreferencePage</code>)\n which coordinates everything and provides the message line\n which display messages emanating from the editor.\n </p>\n <p>\n This package contains ready-to-use field editors for various\n types of preferences:\n <ul>\n   <li><code>BooleanFieldEditor</code> - booleans</li>\n   <li><code>IntegerFieldEditor</code> - integers</li>\n   <li><code>StringFieldEditor</code> - text strings</li>\n   <li><code>RadioGroupFieldEditor</code> - enumerations</li>\n   <li><code>ColorFieldEditor</code> - RGB colors</li>\n   <li><code>FontFieldEditor</code> - fonts</li>\n   <li><code>DirectoryFieldEditor</code> - directories</li>\n   <li><code>FileFieldEditor</code> - files</li>\n   <li><code>PathEditor</code> - paths</li>\n </ul>\n </p>\n',directive
'@param title\n            the dialog\'s title, or <code>null</code> if none\n ',directive
' Copies the given RowLayout instance\n \n @param layout\n            layout to copy\n @return a new RowLayout\n',non-directive
'Overridden\n to check whether the bounds of the dialog have been stored in\n dialog settings.  ',directive
?,non-directive
'@return the closure\n ',non-directive
'@param wizardContainer the wizard container, or <code>null</code> \n',directive
' Validation strategy constant (value <code>1</code>) indicating that\n the editor should perform validation only when the text widget \n loses focus.\n\n @see #setValidateStrategy\n',directive
' Null-safe check if the specified map is empty.\n <p>\n Null returns true.\n\n @param map  the map to check, may be null\n @return true if empty or null\n @since Commons Collections 3.2\n',directive
'@link\njava.lang.ref.ReferenceQueue#poll ReferenceQueue.poll}</code> method simply\nchecks an internal data structure, this check will add little overhead to the\nhashtable access methods.\n\n\n',non-directive
?,non-directive
' Returns the predecessor of the given page.\n <p>\n This method is typically called by a wizard page\n </p>\n\n @param page the page\n @return the previous page, or <code>null</code> if none\n',directive
'In the event\n object, the property name is the name of the preference, and the\n old and new values are wrapped as objects.\n ',directive
'@param value the new current value of the preference\n',non-directive
'By default do nothing.\n ',directive
'@since 3.3\n',non-directive
'@param element must be an instance of <code>IPreferenceNode</code>.\n ',directive
'@param persistLocation\n            A boolean indicating whether the location should be persisted\n            upon close of the dialog. ',non-directive
' @param listener the proposal listener\n',non-directive
' Returns the font registry for JFace itself. ',non-directive
' Button id for a \"Cancel\" button (value 1).\n',non-directive
'@since 2.0\n',non-directive
'@link ColorDescriptor#createFrom(Color)}\n \n ',directive
' Sets the margins for layouts created with this factory. The margins\n specify the number of pixels of horizontal and vertical margin that will\n be placed along the left, right, top, and bottom edges of the layout.\n Note that thes margins will be added to the ones specified by\n {@link #margins(int, int)}.\n \n <code><pre>\n     // Construct a GridLayout whose left, right, top, and bottom \n     // margin sizes are 10, 5, 0, and 15 respectively\n      \n     Rectangle margins = Geometry.createDiffRectangle(10,5,0,15);\n     GridLayoutFactory.fillDefaults().extendedMargins(margins).applyTo(composite1);\n </pre></code>\n \n @param differenceRect rectangle which, when added to the client area of the\n        layout, returns the outer area of the layout. The x and y values of\n        the rectangle correspond to the position of the bounds of the \n        layout with respect to the client area. They should be negative. \n        The width and height correspond to the relative size of the bounds\n        of the layout with respect to the client area, and should be positive. \n @return this\n @see #spacing(Point)\n @see #spacing(int, int)\n \n @since 3.3\n',directive
'The logging information\n           used by field service engineers may be considerably more complex and\n           verbose than that required by system administrators.  ',directive
'<p>\n This method is provided on this interface to simplify the implementation \n of decorators. ',directive
' Set the composite that is showing the page.\n @param pageContainer Composite\n \n @since 3.1\n',non-directive
'@param iterator2  the first iterators to use, not null\n ',non-directive
'If not <code>null</code>, the OK button is disabled.\n \n',directive
' Gets a list iterator over the end part of an object array.\n\n ',non-directive
' Convenience API. ',non-directive
'The central goal of the logging APIs is to support maintaining and servicing\nsoftware at customer sites. \n\n',non-directive
'The static methods on this class handle the conversion between\n the SWT objects and their string representations.\n ',directive
'@param newErrorMessage\n            the newErrorMessage to display or <code>null</code>\n',directive
'<li>PriorityBuffer - provides for removal based on a comparator ordering\n',non-directive
' Sets whether or not context help is available for this dialog. This\n can affect whether or not the dialog will display additional help\n mechanisms such as a help control in the button bar.\n \n @param helpAvailable whether or not context help is available for the dialog\n',directive
' Computes the correct dialog size for the current page and resizes its\n shell if nessessary. ',directive
'@return the next line\n ',non-directive
'@since 3.5\n',non-directive
'</p>\n <p>\n Returns <code>null</code> if the image data could not be created.\n ',directive
'If\n <code>createButton</code> was never called with this parameter, or if\n <code>createButton</code> is overridden, <code>getCancelButton</code>\n will return <code>null</code>.\n \n',directive
' {@inheritDoc}\n \n ',non-directive
'If none are valid\n return the first one regardless. ',directive
'That is, if the given collection\n <code>coll</code> contains <code>n</code> copies of a given object,\n the bag will have <code>n</code> fewer copies, assuming the bag\n had at least <code>n</code> copies to begin with.\n\n ',directive
' Returns the selected range.\n\n ',non-directive
' Returns the image in JFace\'s image registry with the given key, or\n <code>null</code> if none. ',directive
'<li>Map - returns an object from a supplied Map\n ',non-directive
' Checks to see if there are more entries still to be iterated.\n\n @return <code>true</code> if the iterator has more elements\n',non-directive
' Creates a RowLayoutFactory that creates RowLayouts with the default SWT\n values.\n \n <p>\n Initial values are:\n </p>\n \n <ul>\n <li>margins(0,0)</li>\n <li>extendedMargins(3,3,3,3)</li>\n <li>wrap(true)</li>\n <li>pack(true)</li>\n <li>fill(false)</li>\n <li>justify(false)</li>\n <li>spacing(3)</li>\n </ul>\n \n @return a RowLayoutFactory that creates RowLayouts as though created with\n         their default constructor\n @see #fillDefaults\n',directive
' Get the specified {',non-directive
'@return a combination iterator over the iterators\n ',non-directive
'\n The field editor preference page implementation of this \n <code>PreferencePage</code> method saves all field editors by\n calling <code>FieldEditor.store</code>. ',directive
'@param newMessage\n            the message, or <code>null</code> to clear the message\n ',directive
' Returns the successor of the given page.\n <p>\n This method is typically called by a wizard page\n </p>\n\n @param page the page\n @return the next page, or <code>null</code> if none\n',directive
'</UL>\n',non-directive
'<p>\n The generated layout data is the same as what would be generated by \n GridLayoutFactory.generateLayout, except that the span is configurable\n </p>  \n \n ',directive
' Returns the descriptor for JFace\'s dialog font. ',non-directive
'<li>\nimage registries (<tt>ImageRegistry</tt>) - for hanging on to the SWT image\nobjects needed by an application</li>\n\n',non-directive
' Extends {@link org.eclipse.jface.text.contentassist.IContextInformationPresenter} to\n allow to install a content assistant on the given\n {@linkplain org.eclipse.jface.contentassist.IContentAssistSubjectControl content assist subject control}.\n\n @since 3.0\n @deprecated As of 3.2, replaced by Platform UI\'s field assist support\n',directive
'@link #uniqueSet()} then increment its\n count as reported by {',non-directive
'<li>MapBackedSet - a set formed by decorating a Map\n</ul>\n',non-directive
'@param cause cause of the exception (or null if none)\n',directive
?,non-directive
'@param style either <code>GRID</code> or <code>FLAT</code>\n',non-directive
'@param value the value to be converted\n ',non-directive
' Notifies any page changing listeners that the currently selected dialog\n page is changing. Only listeners registered at the time this method is\n called are notified.\n \n @param event\n            a selection changing event\n \n @see IPageChangingListener#handlePageChanging(PageChangingEvent)\n @since 3.3\n',directive
'<li><a href=\"../../../technotes/guides/collections/reference.html\"><b>\n       Collections Framework Annotated Outline</b></a>\n</ul>\n\n',non-directive
?,non-directive
?,non-directive
?,non-directive
' Creates a new information control replacer.\n\n @param creator the default information control creator\n',non-directive
?,non-directive
' Returns the number of pixels corresponding to the given number of\n horizontal dialog units.\n \n @param dlus\n            the number of horizontal dialog units\n @return the number of pixels\n',non-directive
'@throws MissingResourceException Thrown if a resource is missing\n',directive
' A mutator for the state of the toggle button. This method will update the\n button, if it exists.\n \n @param toggleState\n            The desired state of the toggle button (<code>true</code>\n            means the toggle should be selected).\n',directive
'</p>\n<p>\nAll the real work in this package is carried out by the\n<code>BindingManager</code>, and most work with bindings can be carried out\ndirectly with it.  ',non-directive
'Has no effect if an identical listener is\n already registered.\n \n',directive
' Returns whether this dialog page is in a valid state.\n \n @return <code>true</code> if the page is in a valid state,\n   and <code>false</code> if invalid\n',non-directive
'The button will\n automatically get updated with the new text, if it exists.\n \n',directive
'<p>\n Note that field editors can support only a single listener.\n ',directive
' The label for hide details buttons.\n',non-directive
'<li>\n<tt>IWizard</tt> - a wizard consisting of several wizard pages</li>\n\n',non-directive
' Returns the image associated with the given key in this registry, \n or <code>null</code> if none.\n \n @param key the key\n @return the image, or <code>null</code> if none\n',non-directive
' A blockage has occured. ',non-directive
'@return the closure\n',non-directive
'This method is equivalent to\n </code>setValue(store, name, new FontData[]{value})</code>.\n ',directive
'<li>Call generateLayout</li>\n </ol>\n ',directive
'@return the wizard\n',non-directive
'@link #length() length})\n ',directive
' ControlAnimator provides a simple implementation to display or hide a control\n at the bottom of the parent composite. Other animations will be written as\n subclasses of this class. <p>\n Instances of this class can be created using an AnimatorFactory.\n \n @since 3.2\n',directive
'\nProvides a framework for viewers, which are model-based\ncontent adapters for SWT widgets.\n<h2>\nPackage Specification</h2>\nA viewer is a model-based adapter on an SWT widget.&nbsp; Each viewer has\nfour parts:\n<blockquote>\n<li>\nan <b>input</b> - the object that serves as the viewer\'s model</li>\n\n<li>\na <b>widget</b> - the SWT control through which the viewer\'s model is displayed</li>\n\n<li>\na <b>content provider</b> - mediates between the model and viewer</li>\n\n<li>\na <b>label provider</b> - maps model objects to displayable labels containing\ntext and/or an image</li>\n</blockquote>\nThis package contains the viewer framework. The viewer framework is an\nindependent JFace module. Using it requires a knowledge of SWT, but does\nnot require familiarity with any of the other JFace modules. The framework\nconsists of abstract base classes for viewers (<tt>Viewer</tt>, <tt>StructuredViewer</tt>,\n<tt>AbstractTreeViewer</tt>) together with concrete viewer classes (<tt>ListViewer</tt>,\n<tt>TreeViewer</tt>,\n<tt>TableViewer</tt>,\n<tt>TableTreeViewer</tt>, <tt>CheckboxTreeViewer</tt>,\nand <tt>CheckboxTableViewer</tt>),\nand various lesser support classes. The concrete structured viewer classes\nare ready-to-use and have built-in support for drag-and-drop, filtering\n(<tt>IViewerFilter</tt> and <tt>ViewerFilter</tt>), and sorting (<tt>IViewerSorter</tt>\nand <tt>ViewerSorter</tt>); these classes may also be subclassed further\nif required.\n<p>In general terms, creating a viewer involves the following steps:\n<ul>\n<li>\ninstantiating a viewer on some pre-existing SWT widget,</li>\n\n<li>\nsetting the viewer\'s content provider (an object implementing <tt>IContentProvider</tt>),</li>\n\n<li>\nsetting the viewer\'s label provider (an object implementing\n<tt>ILabelProvider</tt>),</li>\n\n<li>\nand, finally, setting the viewer\'s input.</li>\n</ul>\nOnce a viewer\'s input is set, the viewer becomes active. As the model changes,\nit is the content provider\'s responsibility to respond to changes to the\nmodel by telling the viewer what to change (done by calling add and remove\nmethods on the viewer). An existing viewer may be retargeted by giving\nit a different object as input; the viewer is responsible for informing\nthe content provider of these kinds of wholesale changes (<tt>IContentProvider.inputChanged</tt>).\nAlso, each viewer registers with its label provider for notification of\nchanges that would affect what the viewer displays (see <tt>ILabelProviderListener.stateChanged</tt>).\n<p>Note: None of the classes in this package maintain global state.\n<br>&nbsp;\n',directive
'</p>\n \n ',non-directive
'Also causes the container to refresh its layout.\n \n',directive
'\nProvides a framework for viewers that handle deferred contents. \n<h2>\nPackage Specification</h2>\n<p>The deferred viewers are viewers that can handle concurrent updates from a \n  variety of Threads.<br>\n  &nbsp; \n',directive
?,non-directive
' A local registry that shares its resources with some global registry.\n ',non-directive
' Returns the Restore Defaults button.\n \n',non-directive
'@since   1.5\n\n',non-directive
'@param style either <code>GRID</code> or <code>FLAT</code>\n',non-directive
'@link UnsupportedOperationException} for\n the {',non-directive
'@return <code>true</code> if this page is complete, and\n  <code>false</code> otherwise\n',non-directive
'@see PopupDialog#getDialogSettings()\n ',non-directive
'The following snippet shows an example template for\nan instance check in Java:<br>\n<pre>if (${name} instanceof ${type}) {\n&nbsp;&nbsp;&nbsp; ${type} ${new_name} = (${type})${name};\n&nbsp;&nbsp;&nbsp; ${cursor}\n}\n</pre>\nIn this template, the variables (<tt>name,type, ...</tt>) are resolved\nwhen inserted into java source and changing one variable instance will\nalso change the other. ',non-directive
'If any control in the column\n is set to grab horizontal then the whole column will grab horizontal space.\n ',directive
?,non-directive
'<p>\n A valid RGB color value representation is a string of the form\n <code><it>red</it>,<it>green</it></code>,<it>blue</it></code> where\n <code><it>red</it></code>, <it>green</it></code>, and \n <code><it>blue</it></code> are valid ints.\n ',directive
?,non-directive
'@return a new image descriptor\n',non-directive
' The blockage has been cleared. ',directive
'<p>\n <i>NOTE: This interface violates the {',directive
'@link Tree} control you want the {',directive
'<li><b>jarsigner</b>\n    (<a href=\"{@docRoot}/../technotes/tools/solaris/jarsigner.html\">\n      for Solaris/Linux</a>)\n    (<a href=\"{@docRoot}/../technotes/tools/windows/jarsigner.html\">\n      for Windows</a>)\n    </li>\n\n</ul>\n\n',non-directive
?,non-directive
'In the JFace provided dialogs this\n            will be an <code>IDialogPage</code>.\n',directive
'<p>\nIt is recommended to name the platform-specific attributes with\na vendor-specific prefix such as the vendor\'s name to\navoid collisions of the attribute name between the future extension\nto the standard management interface and the platform extension.\n',directive
' Sets the default value for the float-valued preference with the\n given name. \n <p>\n Note that the current value of the preference is affected if\n the preference\'s current value was its old default value, in which\n case it changes to the new default value. If the preference\'s current\n is different from its old default value, its current value is\n unaffected. No property change events are reported by changing default\n values.\n </p>\n\n @param name the name of the preference\n @param value the new default value for the preference\n',directive
'<p>\n A valid point representation is a string of the form\n <code><it>x</it>,<it>y</it></code> where\n <code><it>x</it></code> and <code><it>y</it></code>\n are valid ints.\n ',directive
'In particular,\nmultiple <tt>Condition</tt> objects may be associated with a single\n<tt>Lock</tt>.  ',directive
' Create a new Closure that uses the input object as a key to find the\n closure to call. \n <p>\n The Map consists of object keys and Closure values. A closure \n is called if the input object equals the key. If there is no match, the\n default closure is called. The default closure is set in the map\n using a null key.\n \n @see org.apache.commons.collections.functors.SwitchClosure\n \n @param objectsAndClosures  a map of objects to closures\n @return the closure\n @throws IllegalArgumentException if the map is null\n @throws IllegalArgumentException if the map is empty\n @throws IllegalArgumentException if any closure in the map is null\n',directive
'This consists of simple logging of common problems that can be fixed \n          or tracked locally, such as running out of resources, security failures,\n          and simple configuration errors.\n        \n',directive
?,non-directive
' Image registry key for info message image (value\n <code>\"dialog_messasge_warning_image\"</code>).\n \n',non-directive
' Return whether or not we should apply the workaround where we take focus\n for the default button or if that should be determined by the dialog. By\n default only return true if the custom area is a label or CLabel that\n cannot take focus.\n \n @return boolean\n',directive
' Creates a new RowLayout and attaches it to the given composite. Does not\n create the rowData of any of the controls in the composite.\n \n @param c\n            composite whose layout will be set\n @see #create\n @see RowLayoutFactory\n',non-directive
'<li>\nfont registries (<tt>FontRegistry</tt>) - for hanging on to the SWT font\nobjects needed by an application</li>\n\n',non-directive
' Returns an enumeration of all preferences known to this store which have\n current values other than their default value.\n \n',non-directive
'</p>\n',non-directive
'@param value the new default value of the preference\n',non-directive
' Returns the stored representation of the given array of FontData objects.\n The stored representation has the form FontData;FontData;\n Only includes the non-null entries.\n \n @param fontData the array of FontData objects\n @return the stored representation of the FontData objects\n @since 3.0\n',directive
' Returns whether this wizard needs Previous and Next buttons.\n <p>\n The result of this method is typically used by the container.\n </p>\n\n @return <code>true</code> if Previous and Next buttons are required,\n   and <code>false</code> if none are needed\n',directive
'The error dialog will only be displayed if there is at least\n one child status matching the mask.\n \n',directive
'@link org.eclipse.jface.text.contentassist.IContentAssistant} to\n allow to install a content assistant on the given\n {',non-directive
' Convenience API. Converts the long <code>value</code> to a string and\n adds the pair <code>key/value</code> to this dialog settings.\n \n @param key\n            the key.\n @param value\n            the value to be associated with the <code>key</code>\n',non-directive
' Gets a double from a Map in a null-safe manner.\n ',non-directive
'@param name\n            the name of the preference this field editor works on\n ',non-directive
' Checks with the given progress monitor and throws\n <code>InterruptedException</code> if it has been canceled.\n <p>\n Code in a long-running operation should call this method regularly so\n that a request to cancel will be honored.\n </p>\n <p>\n Convenience for:\n \n <pre>\n if (monitor.isCanceled())\n \tthrow new InterruptedException();\n </pre>\n \n </p>\n \n @param monitor\n            the progress monitor\n @exception InterruptedException\n                if cancelling the operation has been requested\n @see IProgressMonitor#isCanceled()\n',directive
'Implementations should funnel all preference\n changes through this method.\n ',directive
'@param defaultValue  return if the value is null or if the\n     conversion fails\n ',non-directive
'@author <a href=\"mailto:bloritsch@apache.org\">Berin Loritsch</a>\n ',non-directive
'Convenience method equivalent to\n \n <pre>\n JFaceResources.getFontRegistry().get(JFaceResources.TEXT_FONT)\n </pre>\n \n ',directive
'@return an immutable version of the iterator\n',non-directive
?,non-directive
' Sets the margins for layouts created with this factory. The margins\n specify the number of pixels of horizontal and vertical margin that will\n be placed along the left/right and top/bottom edges of the layout. Note\n that these margins will be added to the ones specified by\n {@link #extendedMargins(int, int, int, int)}.\n \n @param width\n            margin width (pixels)\n @param height\n            margin height (pixels)\n @return this\n @see #spacing(int)\n',directive
' Sets the default value of the preference with the given name\n in the given preference store.\n\n @param store the preference store\n @param name the name of the preference\n @param value the new default value of the preference\n',non-directive
' Convert the given value into an array of SWT font data objects.\n \n',non-directive
'<LI>Standard mappings for SQL types to classes and interfaces in the \n      Java programming language\n  <UL>\n\t ',non-directive
'@param store the preference store, or <code>null</code> if none\n ',directive
'When the agent is started after VM startup the <code>premain</code>\nmethod is not invoked.\n\n\n',directive
'@return the value in the Map as a Float, <code>null</code> if null map input\n',non-directive
'@return a copy of the given FontData\n ',non-directive
'This\npackage includes a few small standardized extensible frameworks, as\nwell as some classes that provide useful functionality and are\notherwise tedious or difficult to implement.  ',non-directive
' Gets a list iterator over an object array.\n\n @param array  the array over which to iterate\n @return  a list iterator over the array\n @throws NullPointerException if array is null\n',non-directive
'Overrides\n characters in the center of the original string with an ellipsis (\"...\")\n if necessary. ',directive
' Show the new message in the message text and update the image. Base the\n background color on whether or not there are errors.\n \n @param newMessage\n            The new value for the message\n @param newType\n            One of the IMessageProvider constants. If newType is\n            IMessageProvider.NONE show the title.\n @see IMessageProvider\n',directive
'Has no affect if the\n listener is not registered.\n \n',directive
'@link\njava.util.concurrent.locks.ReentrantReadWriteLock}, is provided, since\nit covers most standard usage contexts. ',directive
'<p>Note: None of the classes in this package maintain global state.\n<br>&nbsp;\n',directive
' Button id for a \"Finish\" button (value 16).\n',non-directive
'Note that this method\n does not save the preference store itself; it just stores the\n values back into the preference store.\n\n ',directive
'@throws LineIndexOutOfBoundsException if <code>-delta</code> &gt;= {',directive
'<li><tt><big><strong>org.eclipse.jface.text.templates</strong></big></tt></li>\n  ',directive
' Fill specifies whether the controls in a row should be all the same\n height for horizontal layouts, or the same width for vertical layouts.\n \n',non-directive
'@param comparator  the comparator to use, may be null for natural order\n ',directive
'<li><a href=\n    \"{@docRoot}/../technotes/guides/security/crypto/HowToImplAProvider.html\"><b>\n    How to Implement a Provider for the Java Cryptography Architecture\n    </b></a></li>\n  ',non-directive
'@param parentShell\n            the parent shell, or <code>null</code> to create a top-level\n            shell\n',directive
'The advantage of this implementation is that the shell is accessable\n once the container is created even though this page\'s control may not \n yet be created.\n',directive
'@param map  the map to use\n ',non-directive
'\nProvides a content assist add-on for implementors of <tt>IContentAssistSubjectControl</tt>.\nContent assist supports the user in writing&nbsp; by proposing context\nsensitive completions at a given position. A completion can also\nbe a incomplete in itself and content assist provides means to deal with\nnested completions.\n<h2>\nPackage Specification</h2>\n<tt>ISubjectControlContentAssistant</tt> defines the concept of the content assist add-on.\nIt collaborates with content type specific completion processors (<tt>ISubjectControlContentAssistProcessor</tt>)\nin order to generate completion proposals (<tt>ICompletionProposal</tt>)\nvalid at the current document position. The package provides a default\nimplementation <tt>SubjectControlContentAssistant</tt> which completely defines and implements\nthe UI and the control flow for content assist.\n<br>\n<br>\n<strong>Deprecated, as of 3.2, replaced by Platform UI\'s field assist support</strong>\n',directive
'If newType is\n            IMessageProvider.NONE show the title.\n ',directive
'The methods of all classes in {@code java.util.concurrent} and its\nsubpackages extend these guarantees to higher-level\nsynchronization. ',directive
' Returns an array of colors with hues evenly distributed on the hue wheel defined by the <a\n href=\"http://en.wikipedia.org/wiki/HSV_color_space\">HSB color space</a>. The returned array\n has size <code>steps</code>. The distance <var>d</var> between two successive colors is\n in [120&#176;,&nbsp;180&#176;].\n <p>\n The color at a given <code>index</code> has the hue returned by\n {@linkplain #computeHue(int) computeHue(index)}; i.e. the computed hues are not equidistant,\n but adaptively distributed on the color wheel.\n </p>\n <p>\n The first six colors returned correspond to the following {@link SWT} color constants:\n {@link SWT#COLOR_RED red}, {@link SWT#COLOR_GREEN green}, {@link SWT#COLOR_BLUE blue},\n {@link SWT#COLOR_YELLOW yellow}, {@link SWT#COLOR_CYAN cyan},\n {@link SWT#COLOR_MAGENTA magenta}.\n </p>\n\n @param steps the requested size, must be &gt;= 2\n @return an array of <code>steps</code> colors evenly distributed on the color wheel\n',directive
?,non-directive
'@author <a href=\"mailto:ggregory@seagullsw.com\">Gary Gregory</a>\n',non-directive
'<li><a href=\"\">##### REFER TO ANY FRAMEMAKER SPECIFICATION HERE #####</a>\n</ul>\n\n',non-directive
'<li>A write to a {@code volatile} field <i>happens-before</i> every\n  subsequent read of that same field. ',directive
' Adds an image to decorated field to be shown in the message area.\n \n @param image\n            desired image to be shown in the ImageAndMessageArea\n',directive
'Selections of a revision can currently happen in\n following ways - note that this list may be changed in the future:\n <ul>\n ',directive
'\n\nProvides classes that are fundamental to the design of the Java\nprogramming language. ',non-directive
'Failure to do this may result in an {',directive
'<LI><code>Date</code> class -- mapping for SQL <code>DATE</code> \n\t  ',non-directive
' Deallocates anything that was allocated by createFont, given a font\n that was allocated by an equal FontDescriptor.\n \n',non-directive
?,non-directive
'@param oldValue the old value object, or <code>null</code>\n ',directive
'The resource will remain allocated for at least the lifetime\n of this resource manager. ',directive
'@link GC} for all model (document) lines in\n <code>visibleModelLines</code>.\n\n ',non-directive
' Clears any adjusted ranges, restoring the original range.\n',non-directive
'@param defaultValue  what to return if the value is null or if the\n     conversion fails\n  ',non-directive
'@param dialogTitle\n            the dialog title, or <code>null</code> if none\n ',directive
'When many threads are expected to access a given collection,\na <tt>ConcurrentHashMap</tt> is normally preferable to\na synchronized <tt>HashMap</tt>, and a\n<tt>ConcurrentSkipListMap</tt> is normally preferable\nto a synchronized <tt>TreeMap</tt>. ',directive
' The <code>WizardSelectionPage</code> implementation of \n this <code>IWizardPage</code> method returns the first page \n of the currently selected wizard if there is one.\n',non-directive
'Returns the default-default value (<code>FONTDATA_ARRAY_DEFAULT_DEFAULT</code>) \n is no default preference with the given name, or if the default \n value cannot be treated as font data.\n\n ',directive
'@link org.eclipse.jface.text.contentassist.IContextInformationPresenter} to\n allow to install a content assistant on the given\n {',non-directive
'@author James Carman\n',non-directive
' Creates a new abstract preference page with the given title and image.\n\n @param title the title of this preference page\n @param image the image for this preference page,\n  or <code>null</code> if none\n',non-directive
'<br>\n<strong>Deprecated, as of 3.2, replaced by Platform UI\'s field assist support</strong>\n',directive
'<li>Actions prior to calling {@code CyclicBarrier.await}\n  <i>happen-before</i> actions performed by the barrier action, and\n  actions performed by the barrier action <i>happen-before</i> actions\n  subsequent to a successful return from the corresponding {@code await}\n  in other threads.\n\n',directive
'@link org.eclipse.jface.text.IInformationControlCreator}\n must create an information control expecting information in the same format the configured\n {',directive
'There are no modeling restrictions on what the agent <code>premain</code> method may do.\n',directive
'@return the wizard node, or <code>null</code> if no node is selected\n',directive
'<p>\n This image descriptor will be used to generate an image for a page with\n no image of its own; the image will be computed once and cached.\n ',directive
' The BufferOverflowException is used when the buffer\'s capacity has been\n exceeded.\n\n @since Commons Collections 2.1\n @version $Revision: 956279 $ $Date: 2010-06-19 21:47:48 +0200 (Sat, 19 Jun 2010) $\n\n @author Avalon\n @author <a href=\"mailto:bloritsch@apache.org\">Berin Loritsch</a>\n @author <a href=\"mailto:jefft@apache.org\">Jeff Turner</a>\n @author Paul Jack\n @author Stephen Colebourne\n',non-directive
'@link ILabelProvider}, or <code>null</code>\n \tif no visual feedback should be shown\n',directive
'@param transformer1  the first transformer\n ',non-directive
' Creates a new empty dialog page.\n',non-directive
?,non-directive
?,non-directive
' Return the layout for the composite that contains\n the pages.\n ',non-directive
'@see org.apache.commons.collections.functors.ChainedTransformer\n \n ',non-directive
'@param increment\n            a value greater than 0.\n ',directive
' @return the current information control, or <code>null</code> if none available\n',non-directive
'@param newErrorMessage\n            the errorMessage to display or <code>null</code>\n',directive
'@return <code>true</code> if a progress monitor is required,\n   and <code>false</code> if none is needed\n',non-directive
'@return the list of fonts that have been found on this system\n ',non-directive
' Installs this presenter for the given context information.\n\n ',non-directive
' The tray dialog\'s default layout is a modified version of the default\n <code>Window</code> layout that can accomodate a tray, however it still\n conforms to the description of the <code>Window</code> default layout.\n ',non-directive
' Creates a new content assistant. The content assistant is not automatically activated,\n overlays the completion proposals with context information list if necessary, and\n shows the context information above the location at which it was activated. If auto\n activation will be enabled, without further configuration steps, this content assistant\n is activated after a 500 ms delay. It uses the default partitioning.\n',directive
' Apply the data to the receiver. By default do nothing.\n @param data\n @since 3.1\n',non-directive
'@deprecated use setErrorMessage(String) instead\n',directive
?,non-directive
'Only listeners registered at the time this method is called are notified.\n\n ',directive
'The quick assist assistant implementation in\nthis package can show the quick assists that are available on the current line.\n',directive
'@param falseTransformer  the transformer called if the predicate is false\n ',directive
' Sets the title for this dialog.\n \n',non-directive
' Button id for a \"Deselect All\" button (value 19).\n',non-directive
'@see IPageChangingListener\n ',non-directive
'@param foreground Color the foreground color (maybe <code>null</code>)\n ',directive
'This method will update the\n button, if it exists.\n \n',directive
' Checks whether the text input field contains a valid value or not.\n\n @return <code>true</code> if the field value is valid,\n   and <code>false</code> if invalid\n',non-directive
'@since 3.4\n',non-directive
' Adds the given field editor to this page.\n\n ',non-directive
'@param end the new end\n ',non-directive
?,non-directive
'<p>\nWhen these are in place for a UDT, calling the methods\n<code>ResultSet.getObject</code> or <code>CallableStatement.getObject</code> \non that UDT will automatically retrieve the custom mapping for it. ',directive
'However, clients are also free to implement this \n interface if <code>WizardDialog</code> does not suit their needs.\n ',directive
'Returns the default-default value (<code>0</code>) if there\n is no preference with the given name, or if the current value \n cannot be treated as an integter.\n\n ',directive
'This method fails if the value does not represent a long.\n\n ',non-directive
'@link #lazySortedMap(SortedMap,Transformer)}\n  ',non-directive
'Returns the default-default value (<code>0.0</code>) if there\n is no default preference with the given name, or if the default \n value cannot be treated as a double.\n\n ',directive
'<a name=\"MemoryVisibility\">\n<h2> Memory Consistency Properties </h2>\n\n<a href=\"http://java.sun.com/docs/books/jls/third_edition/html/memory.html\">\nChapter 17 of the Java Language Specification</a> defines the\n<i>happens-before</i> relation on memory operations such as reads and\nwrites of shared variables.  ',directive
'<li>Synchronized - synchronizes method access for multi-threaded environments\n',directive
' <i>(Violation)</i>\n Returns <code>true</code> if the bag contains all elements in\n the given collection, respecting cardinality.  That is, if the\n given collection <code>coll</code> contains <code>n</code> copies\n of a given object, calling {@link #getCount(Object)} on that object must\n be <code>&gt;= n</code> for all <code>n</code> in <code>coll</code>.\n <p>\n The {@link Collection#containsAll(Collection)} method specifies\n that cardinality should <i>not</i> be respected; this method should\n return true if the bag contains at least one of every object contained\n in the given collection.\n \n @param coll  the collection to check against\n @return <code>true</code> if the Bag contains all the collection\n',directive
' Creates a path field editor.\n \n',non-directive
' Converts the given float object to a string.\n ',non-directive
'@return the symbolic font name\n',non-directive
'@link Iterator#next()} method will return the lesser of\n <code>A.next()</code> and <code>B.next()</code>.\n ',non-directive
' Return the currently displayed color.\n \n @return <code>RGB</code>\n',non-directive
' Returns the number of lines touched by <code>selection</code>. Note that for linear\n selections, this is the number of contained delimiters plus 1.\n \n @param selection the selection\n @return the number of lines touched by <code>selection</code>\n @throws BadLocationException if accessing the document failed\n',directive
?,non-directive
' Gets an iterator that provides an ordered iteration over the elements\n contained in an array of {@link Iterator}s.\n <p>\n Given two ordered {@link Iterator}s <code>A</code> and <code>B</code>,\n the {@link Iterator#next()} method will return the lesser of\n <code>A.next()</code> and <code>B.next()</code> and so on.\n <p>\n The comparator is optional. If null is specified then natural order is used.\n\n @param comparator  the comparator to use, may be null for natural order\n @param iterators  the iterators to use, not null or empty or contain nulls\n @return a combination iterator over the iterators\n @throws NullPointerException if iterators array is null or contains a null\n',directive
'@since 3.3\n',non-directive
' Initialize the progress bar.\n \n @param max\n            The maximum value.\n',non-directive
?,non-directive
?,non-directive
'@link LineIndexOutOfBoundsException} being\n thrown.\n ',directive
' Sets the hover later returned by {',non-directive
' Initialize the progress bar to be animated.\n',non-directive
'@throws UnsupportedOperationException if the dialog does not support trays,\n            for example if it uses a custom layout.\n',directive
'@throws IllegalArgumentException\n             if type is not one of HORIZONTAL or VERTICAL\n',directive
?,non-directive
' A delayed input change listener that forwards delayed input changes to an information control replacer.\n\n @since 3.4\n',non-directive
'In particular:\n\n<ul>\n\n  ',non-directive
' Sets the wizard page that would typically be shown \n if the user was to press the Back button.\n <p>\n This method is called by the container.\n </p>\n\n @param page the previous wizard page\n',directive
' Creates an empty font registry.\n \n @param display\n            the <code>Display</code>\n @param cleanOnDisplayDisposal\n            whether all fonts allocated by this <code>FontRegistry</code>\n            should be disposed when the display is disposed\n @since 3.1\n',directive
?,non-directive
?,non-directive
'@link java.util.Iterator Iterator} interface.\n',non-directive
' Gets an iterator that provides an iterator view of the given enumeration.\n\n ',non-directive
'An error message overrides the current\n message until the error message is cleared. ',directive
'If the value is a <code>String</code> and it equals \'true\' ignoring case\n then <code>true</code> is returned, otherwise <code>false</code>.\n ',non-directive
'@param parent the parent control\n ',non-directive
'If the listener is already\n registered with the viewer this call moves the listener to the beginning\n of the list.\n ',directive
'@since 3.3\n',non-directive
' Returns the control responsible for displaying this field editor\'s label.\n This method can be used to set a tooltip for a\n <code>BooleanFieldEditor</code>. Note that the normal pattern of\n <code>getLabelControl(parent).setToolTipText(tooltipText)</code> does not\n work for boolean field editors, as it can lead to duplicate text (see bug\n 259952).\n \n @param parent\n            the parent composite\n @return the control responsible for displaying the label\n \n @since 3.5\n',directive
'@param display the Display\n',non-directive
'No info text is shown if <code>getText(Object)</code> returns <code>null</code>.\n   ',directive
'Returns the default-default value (<code>0L</code>) if there\n is no default preference with the given name, or if the default \n value cannot be treated as a long.\n\n ',directive
?,non-directive
' The standard implementation of the {@link org.eclipse.jface.contentassist.ISubjectControlContentAssistant} interface.\n Usually, clients instantiate this class and configure it before using it.\n\n @since 3.0\n @deprecated As of 3.2, replaced by Platform UI\'s field assist support *\n',directive
' Extends {@link org.eclipse.jface.text.contentassist.IContentAssistant} to\n allow to install a content assistant on the given\n {@linkplain org.eclipse.jface.contentassist.IContentAssistSubjectControl content assist subject control}.\n\n @since 3.0\n @deprecated As of 3.2, replaced by Platform UI\'s field assist support\n',directive
'@return the Set of unique Bag elements\n',non-directive
?,non-directive
?,non-directive
'<code>open</code> is non-blocking.\n \n',directive
' The BufferUnderflowException is used when the buffer is already empty.\n <p>\n NOTE: From version 3.0, this exception extends NoSuchElementException.\n\n @since Commons Collections 2.1\n @version $Revision: 956279 $ $Date: 2010-06-19 21:47:48 +0200 (Sat, 19 Jun 2010) $\n\n @author Avalon\n @author Berin Loritsch\n @author Jeff Turner\n @author Paul Jack\n @author Stephen Colebourne\n',directive
'</p>\n <p>\n If there is more than one modal dialog is open the second one should be\n parented off of the shell of the first one otherwise it is possible that the\n OS will give focus to the first dialog potentially blocking the UI.\n ',directive
'@link java.util.concurrent.LinkedBlockingDeque}\nprovides an implementation.\n\n\n',directive
'Positive values move toward the lower-right, negative\n values move toward the upper-left.\n \n',directive
'@throws DataFormatException thrown if request string could not seperated\n',non-directive
'<li>An unlock ({@code synchronized} block or method exit) of a\n  monitor <i>happens-before</i> every subsequent lock ({@code synchronized}\n  block or method entry) of that same monitor. ',directive
'@since 3.0\n',non-directive
?,non-directive
'The typical usage is to establish the defaults for all known preferences\n and then restore previously stored values for preferences whose values \n were different from their defaults. ',directive
'A\nweakly consistent iterator is thread-safe, but does not necessarily\nfreeze the collection while iterating, so it may (or may not) reflect\nany updates since the iterator was created.\n\n',directive
'<li>pack(true)</li>\n ',non-directive
'@param parentShell\n            the parent shell of the dialog, or <code>null</code> if none\n ',non-directive
' Button id for a \"Skip\" button (value 5).\n',non-directive
'There is normally no need to call this method since\n <code>setValue</code> and <code>setToDefault</code> report such\n events in due course. ',directive
'The font\'s name is used as font family, a <code>sans-serif</code> default font family is\n appended for the case that the given font name is not available.\n ',directive
' @param display the display the color is from\n @return the border Color for widgets that display errors.\n @see SWT#COLOR_WIDGET_DARK_SHADOW\n @see Display#getSystemColor(int)\n',directive
'@return the name of this page\n',non-directive
'</p>\n <p>\n Clients who need a preference store may implement this interface or \n instantiate the standard implementation <code>PreferenceStore</code>.\n ',directive
'@throws FunctorException (runtime) if the factory cannot create an object\n',non-directive
'<li>Actions taken by the asynchronous computation represented by a\n  {@code Future} <i>happen-before</i> actions subsequent to the\n  retrieval of the result via {@code Future.get()} in another thread.\n\n  ',directive
?,non-directive
' Called just after the operation is run. Default behaviour is to decrement\n the nesting depth, and close the dialog.\n \n @since 3.0\n',directive
' Sets the length of this range, keeping {@link #end()} constant.\n\n @param length the new length, must be &gt; 0 and &lt;= {@link #end()}\n @throws LineIndexOutOfBoundsException if <code>length</code> &lt;= 0\n',directive
'@param descriptor the ImageDescriptor\n ',non-directive
' Makes the given page visible.\n <p>\n This method should not be use for normal page\n sequencing (back, next) which is handled by the \n container itself. It may, however, be used to\n move to another page in response to some custom\n action such as double clicking in a list.\n </p>\n\n @param page the page to show\n @see #getCurrentPage\n',directive
' Set the value to be used for Scale.setMinumum(int) and update the\n scale.\n \n',non-directive
'\n\nProvides classes and interfaces for obtaining reflective\ninformation about classes and objects.  Reflection allows\nprogrammatic access to information about the fields, methods\nand constructors of loaded classes, and the use of reflected fields,\nmethods, and constructors to operate on their underlying\ncounterparts, within security restrictions.\n<p>\n<code>AccessibleObject</code> allows supression of access checks if\nthe necessary <code>ReflectPermission</code> is available.\n<p>\n<code>Array</code> provides static methods to dynamically create and\naccess arrays.\n<p>\nClasses in this package, along with <code>java.lang.Class</code>\naccommodate applications such as debuggers, interpreters, object\ninspectors, class browsers, and services such as Object Serialization\nand JavaBeans that need access to either the public members of a\ntarget object (based on its runtime class) or the members declared by\na given class.\n\n<!--\n<h2>Package Specification</h2>\n\n##### FILL IN ANY SPECS NEEDED BY JAVA COMPATIBILITY KIT #####\n<ul>\n  <li><a href=\"\">##### REFER TO ANY FRAMEMAKER SPECIFICATION HERE #####</a>\n</ul>\n\n<h2>Related Documentation</h2>\n\nFor overviews, tutorials, examples, guides, and tool documentation, please see:\n<ul>\n  <li><a href=\"\">##### REFER TO NON-SPEC DOCUMENTATION HERE #####</a>\n</ul>\n-->\n\n@since JDK1.1\n',directive
'</p>\n ',non-directive
'Creates the described font on demand.\n ',non-directive
'@param message\n            the message to show in this dialog, or <code>null</code> to\n            indicate that the error\'s message should be shown as the\n            primary message\n ',directive
' Creates a Closure that will invoke a specific method on the closure\'s\n input object by reflection.\n\n @see org.apache.commons.collections.functors.InvokerTransformer\n @see org.apache.commons.collections.functors.TransformerClosure\n \n @param methodName  the name of the method\n @return the <code>invoker</code> closure\n @throws IllegalArgumentException if the method name is null\n',directive
'An instance of one of\nthese subclasses encapsulates a single reference to a particular object, called\nthe <em>referent</em>.  ',directive
'@link org.apache.commons.collections.Predicate Predicate},\n{',non-directive
' PixelConverter performs various conversions from device-independent units\n (such as DLUs or characters) to pixels. ',non-directive
' Sets the title image to be shown in the title area of this dialog.\n \n',non-directive
' Returns the preference page in which this field editor\n appears.\n\n @return the preference page, or <code>null</code> if none\n @deprecated use #getPage()\n',non-directive
?,non-directive
'@link Iterator}s\n one after another.\n\n ',directive
' Hides any open pop-ups.\n',non-directive
' Callback to signal this content assistant that the presentation of the context information has been stopped.\n @since 2.1\n',directive
'Other than using the field to manage \nthe decorations themselves, clients are expected to interact \ndirectly with the control.  \n',non-directive
' A field editor for a color type preference.\n',non-directive
'@throws LineIndexOutOfBoundsException if the parameters violate the invariant of\n         {',directive
'<p>\n All characters that have codes less than or equal to <code>\'&#92;u0020\'</code> \n (the space character) are considered to be a white space.\n ',directive
'@return a combination iterator over the iterators\n ',non-directive
' Controls whether the wizard needs Previous and Next buttons even if it\n currently contains only one page.\n <p>\n This flag should be set on wizards where the first wizard page adds\n follow-on wizard pages based on user input.\n </p>\n \n @param b\n            <code>true</code> to always show Next and Previous buttons,\n            and <code>false</code> to suppress Next and Previous buttons\n            for single page wizards\n',directive
'@return a text edit describing the operation needed to delete <code>selection</code>\n ',non-directive
'Returns the default-default value (<code>POINT_DEFAULT_DEFAULT</code>) \n is no default preference with the given name, or if the default \n value cannot be treated as a point.\n\n ',directive
'A standard directory\n dialog appears when the user presses the change button.\n',non-directive
?,non-directive
'@return the preference store , or <code>null</code> if none\n',directive
?,non-directive
' Create a new Closure that calls one of the closures depending \n on the predicates.\n <p>\n The closure at array location 0 is called if the predicate at array \n location 0 returned true. Each predicate is evaluated\n until one returns true.\n \n @see org.apache.commons.collections.functors.SwitchClosure\n \n @param predicates  an array of predicates to check, not null\n @param closures  an array of closures to call, not null\n @return the <code>switch</code> closure\n @throws IllegalArgumentException if the either array is null\n @throws IllegalArgumentException if any element in the arrays is null\n @throws IllegalArgumentException if the arrays are different sizes\n',directive
' Pre-order traversal means visit the root first,\n then the children.\n',non-directive
?,non-directive
'@return the top level control or <code>null</code>\n',directive
'Convenience method equivalent to\n \n <pre>\n JFaceResources.getImageRegistry().get(key)\n </pre>\n \n ',directive
' Creates a new exception.\n',non-directive
'@link java.lang.ref.Reference}</code> class.  ',non-directive
'@param minHeight\n            the minimum page height\n ',non-directive
' Enables the content assistant\'s auto insertion mode. If enabled,\n the content assistant inserts a proposal automatically if it is\n the only proposal. In the case of ambiguities, the user must\n make the choice.\n\n @param enabled indicates whether auto insertion is enabled or not\n @since 2.0\n',directive
'<p>\n The ability to change this allows the same field editor object\n to be reused for different preferences.\n ',directive
?,non-directive
'</p>\n <p>\n Field editors should be used in conjunction with a field \n editor preference page (<code>FieldEditorPreferencePage</code>)\n which coordinates everything and provides the message line\n which display messages emanating from the editor.\n ',directive
?,non-directive
?,non-directive
' The cancel button has been pressed.\n \n @since 3.0\n',non-directive
?,non-directive
'</OL>\n\n',non-directive
'@param font the font to use\n ',non-directive
'@param parent - the composite to parent the page\n \n ',non-directive
'@link #create(DeviceResourceDescriptor)}. \n ',non-directive
'\n<p>\nThis package contains implementations of collection and map related key/value classes.\nThese are usually used in maps, however they can be used as data holders in any collection.\n<p>\nThe following key/value designs are included:\n<ul>\n<li>Map Entry - various map entry implementations\n<li>KeyValue - a key and value pair, without map entry semantics\n<li>MultiKey - a holder of multiple keys tied together\n</ul>\n</pre>\n',non-directive
'@return the cancel button or <code>null</code>\n \n ',directive
'@param listener\n            a page changing listener\n ',non-directive
' Finds and returns the preference node directly\n below the top at the given path.\n\n ',non-directive
' Sets the parent ruler - the delegating column must call this method as soon as it creates its\n control.\n\n ',directive
'\n<p>\nThis package contains implementations of the\n{@link java.util.List List} interface.\n</p>\n<p>\nThe following implementations are provided in the package:\n<ul>\n<li>TreeList - a list that is optimised for insertions and removals at any index in the list</li>\n<li>CursorableLinkedList - a list that can be modified while the listIterator (cursor) is being used</li>\n<li>NodeCachingLinkedList - a linked list that caches the storage nodes for a performance gain</li>\n</ul>\n</p>\n<p>\nThe following decorators are provided in the package:\n<ul>\n<li>Synchronized - synchronizes method access for multi-threaded environments</li>\n<li>Unmodifiable - ensures the collection cannot be altered</li>\n<li>Predicated - ensures that only elements that are valid according to a predicate can be added</li>\n<li>Typed - ensures that only elements that are of a specific type can be added</li>\n<li>Transformed - transforms each element added</li>\n<li>FixedSize - ensures that the size of the list cannot change</li>\n<li>Lazy - creates objects in the list on demand</li>\n<li>Growth - grows the list instead of erroring when set/add used with index beyond the list size</li>\n<li>SetUnique - a list that avoids duplicate entries like a Set</li>\n</ul>\n</p>\n',directive
?,non-directive
'<p>\n A <code>Transformer</code> converts the input object to the output object.\n ',non-directive
?,non-directive
?,non-directive
'@link java.util.concurrent.locks.ReadWriteLock} interface\nsimilarly defines locks that may be shared among readers but are\nexclusive to writers.  ',directive
' Create a new Transformer that calls one of two transformers depending \n on the specified predicate.\n \n',directive
' Creates a boolean field editor in the default style.\n \n',non-directive
' Returns the progress monitor to use for operations run in this progress\n dialog.\n \n',non-directive
'@throws DeviceResourceException if the resource does not exist yet and cannot\n be created for any reason.\n \n',directive
'Paths represent directories or libraries\n                        (commonly referred to as JAR or zip libraries on\n                        many platforms). \t\t\t\n                        ',non-directive
'A visual feedback can be configured via {',directive
'</p></li> \n      \n  ',non-directive
'More than one agent may use the same <i>jarpath</i>.\n',directive
'If auto\n activation will be enabled, without further configuration steps, this content assistant\n is activated after a 500 ms delay. ',directive
'@return the next page, or <code>null</code> if none\n',directive
'<li>Typed - ensures that only elements that are of a specific type can be added</li>\n',directive
'The JVM first attempts to\ninvoke the following method on the agent class:\n\n<blockquote>\n<code>public static void\npremain(String agentArgs, Instrumentation inst);\n</code>\n</blockquote>\n\n<P>\nIf the agent class does not implement this method then the JVM will attempt to invoke:\n\n<blockquote>\n<code>public static void\npremain(String agentArgs);\n</code>\n</blockquote>\n\n<P>\nThe agent class may also have an <code>agentmain</code> method for use when the agent is started \nafter VM startup. ',directive
' Sets the margins for layouts created with this factory. The margins are\n the distance between the outer cells and the edge of the layout.\n \n @param margins\n            margin size (pixels)\n @return this\n @see #spacing(int)\n',directive
' Disposes the SWT resources allocated by this\n dialog page.\n',directive
'Restore the previously displayed message if\n there is one, if not restore the title label.\n  \n',directive
'If either hint is set to SWT.DEFAULT, the\n control\'s preferred size is used.\n \n',directive
' Updates this dialog\'s controls to reflect the current page.\n',non-directive
'<p>\n The class <code>WizardDialog</code> provides a fully functional \n implementation of this interface which will meet the needs of\n most clients. ',directive
'@param writer\n            a Writer specifying the stream the settings are written in.\n ',non-directive
'Note: GridLayout treats a minimum size of 0\n as an undocumented special value, so the smallest possible minimum size \n is a size of 1. ',directive
?,non-directive
' Saves the current enable/disable state of the given control and its\n descendents in the returned object except for the given list of exception\n cases; the controls that are saved are also disabled.\n \n',directive
'@throws IllegalArgumentException Thrown if preferenceStore or\n property are <code>null</code>.\n',directive
' Gets a short from a Map in a null-safe manner.\n <p>\n The short is obtained from the results of {@link #getNumber(Map,Object)}.\n\n @param map  the map to use\n @param key  the key to look up\n @return the value in the Map as a short, <code>0</code> if null map input\n',non-directive
'@since 2.0\n ',non-directive
' Create the progress monitor part in the receiver.\n \n @param composite\n @param pmlayout\n @return ProgressMonitorPart\n',non-directive
'@param title\n            the title of this dialog page, or <code>null</code> if none\n ',directive
' {@inheritDoc}\n \n @since 3.5\n',directive
?,non-directive
'@param preferencePageContainer the preference page container, or <code>null</code> \n',directive
'Positive\n for added lines, negative for deleted lines.\n',non-directive
?,non-directive
?,non-directive
'\n\nProvides for system input and output through data streams,\nserialization and the file system.\n\nUnless otherwise noted, passing a null argument to a constructor\nor method in any class or interface in this package will cause a\n<tt>NullPointerException</tt> to be thrown.\n\n<h2>Package Specification</h2>\n<ul>\n  <li><a href=\"../../../platform/serialization/spec/serialTOC.html\"> Java Object Serialization Specification </a>\n</ul>\n\n<h2>Related Documentation</h2>\n\nFor overviews, tutorials, examples, guides, and tool documentation,\nplease see:\n<ul>\n  <li><a href=\"../../../technotes/guides/serialization\">Serialization Enhancements</a>\n</ul>\n\n@since JDK1.0\n',directive
'@return the <code>Color</code> or <code>null</code>\n',directive
'@link #predicatedSortedMap(SortedMap,Predicate,Predicate)}\n  ',non-directive
' Constant for a regular message (value 0).\n ',non-directive
'<li>Construct an MXBean proxy instance that\n        forwards the method calls to a given \n        {',directive
' Returns the descriptor for JFace\'s text font. Convenience method\n equivalent to\n \n <pre>\n JFaceResources.getFontRegistry().getDescriptor(JFaceResources.TEXT_FONT)\n </pre>\n \n @return the font descriptor (never null)\n @since 3.3\n',directive
' Returns the container of this page.\n\n @return the preference page container, or <code>null</code> if this\n   page has yet to be added to a container\n',non-directive
'<li>Predicated - ensures that only elements that are valid according to a predicate can be added\n',directive
' Returns the resource bundle for JFace itself. ',non-directive
' Returns the current information control, or <code>null</code> if none.\n\n ',directive
'A variety of Handler subclasses exist for this purpose. ',directive
'@return <code>true</code> if the node was removed,\n  and <code>false</code> otherwise\n',non-directive
'@return the layout data, might <b>not</b> null\n ',directive
'@param closure  the closure to call repeatedly, not null\n ',directive
'Default implementation is tight to\n default implementation of {',directive
'@return the <code>switch</code> closure\n ',non-directive
'The ordering is that of the iterator()\n method on the collection.\n \n',non-directive
'@param takeFocus <code>true</code> iff the replacing information control should take focus\n',non-directive
' Returns JFace\'s text font. ',non-directive
' Show the receiver as showing an error.\n @since 3.4\n',directive
'@return The preference key; this value may be <code>null</code> if no\n         preference is being used.\n',directive
'Values other than <code>true</code> are considered <code>false</code>.\n                        ',non-directive
'<li><tt><big><strong>org.eclipse.ui.editors.templates</strong></big></tt></li>\n</ul>\n',directive
' Convenience API. Converts the int <code>value</code> to a string and\n adds the pair <code>key/value</code> to this dialog settings.\n \n @param key\n            the key.\n @param value\n            the value to be associated with the <code>key</code>\n',non-directive
' Gets a double from a Map in a null-safe manner.\n <p>\n The double is obtained from the results of {@link #getNumber(Map,Object)}.\n\n @param map  the map to use\n @param key  the key to look up\n @return the value in the Map as a double, <code>0.0</code> if null map input\n',non-directive
'</p>\n\n ',non-directive
'If you specified a mask to filter the displaying of these\n children, the error dialog will only be displayed if there is at least\n one child status matching the mask.\n',directive
'\n\nProvides classes and interface for RMI distributed\ngarbage-collection (DGC).  When the RMI server returns an object to\nits client (caller of the remote method), it tracks the remote\nobject\'s usage in the client. When there are no more references to the\nremote object on the client, or if the reference\'s ``lease\'\' expires and\nnot renewed, the server garbage-collects the remote object.\n\n<!--\n<h2>Package Specification</h2>\n\n##### FILL IN ANY SPECS NEEDED BY JAVA COMPATIBILITY KIT #####\n<ul>\n  <li><a href=\"\">##### REFER TO ANY FRAMEMAKER SPECIFICATION HERE #####</a>\n</ul>\n\n<h2>Related Documentation</h2>\n\nFor overviews, tutorials, examples, guides, and tool documentation, please see:\n<ul>\n  <li><a href=\"\">##### REFER TO NON-SPEC DOCUMENTATION HERE #####</a>\n</ul>\n-->\n\n@since JDK1.1\n',directive
' Sets or clears the error message for this page.\n \n @param newMessage\n            the message, or <code>null</code> to clear the error message\n',directive
' Creates a scale field editor with particular scale values.\n \n',non-directive
' Creates a Closure that will invoke a specific method on the closure\'s\n input object by reflection.\n\n ',directive
' Sets the message for this page with an indication of what type of message\n it is.\n <p>\n The valid message types are one of <code>NONE</code>,\n <code>INFORMATION</code>,<code>WARNING</code>, or\n <code>ERROR</code>.\n </p>\n <p>\n Note that for backward compatibility, a message of type\n <code>ERROR</code> is different than an error message (set using\n <code>setErrorMessage</code>). An error message overrides the current\n message until the error message is cleared. This method replaces the\n current message and does not affect the error message.\n </p>\n \n @param newMessage\n            the message, or <code>null</code> to clear the message\n @param newType\n            the message type\n @since 2.0\n',directive
' Moves the progress indicator by the given amount of work units\n ',non-directive
'@since 3.4\n',non-directive
'The given string\n is inserted as header information.\n \n',non-directive
?,non-directive
'Normal clients should instead call #setValue.\n ',directive
'<LI><code>Blob</code> interface -- mapping for SQL <code>BLOB</code> \n\t ',non-directive
'@param source\n            the page change provider\n ',non-directive
'@param background the background color, <code>null</code> for the platform\'s list\n        background\n',directive
' Implements <code>IProgressMonitor.isCanceled</code>.\n ',non-directive
'@param selection the selection\n ',non-directive
' Converts the given int value to a string.\n ',non-directive
'This class\n also supports lazy creation of the node\'s preference page.\n',directive
' @param display the display the color is from\n @return the default color to use for displaying errors.\n @see ColorRegistry#get(String)\n @see JFacePreferences#ERROR_COLOR\n',directive
' The <code>WizardDialog</code> implementation of this\n <code>Window</code> method calls call <code>IWizard.addPages</code>\n to allow the current wizard to add extra pages, then\n <code>super.createContents</code> to create the controls. It then calls\n <code>IWizard.createPageControls</code> to allow the wizard to\n pre-create their page controls prior to opening, so that the wizard opens\n to the correct size. And finally it shows the first page.\n',directive
'@param input the delayed input, or <code>null</code> to request cancellation\n',directive
'@param titleImage\n            Image or <code>null</code>\n',directive
?,non-directive
?,non-directive
' Return the label for the image.\n',non-directive
' Store the default preference for the field\n being edited\n',non-directive
'\n Construct a new <code>BufferOverflowException</code>.\n \n',non-directive
' Creates a boolean field editor in the given style.\n \n',non-directive
'@see #swtDefaults\n',non-directive
'@param contentAssistSubjectControl the content assist subject control whose\n           document is used to compute the possible contexts\n ',non-directive
'The\n title of the preference page is used for the node label. ',directive
' Extends {',directive
'try {\n       // Assuming the RuntimeMXBean has been registered in mbs\n       ObjectName oname = new ObjectName(ManagementFactory.RUNTIME_MXBEAN_NAME);\n    \n       // Get standard attribute \"VmVendor\"\n       String vendor = (String) mbs.getAttribute(oname, \"VmVendor\");\n\n       // Check if this MXBean contains Sun\'s extension\n       if (mbs.isInstanceOf(oname, \"com.sun.management.RuntimeMXBean\")) {\n           // Get platform-specific attribute \"Bar\"\n           BarType bar = (String) mbs.getAttribute(oname, \"Bar\");\n       }\n   } catch (....) {\n       // Catch the exceptions thrown by ObjectName constructor\n       // and MBeanServer methods\n       ...\n   ',directive
' Initializes this field editor with the default preference value\n from the preference store.\n',non-directive
'<li>NOP - returns the input object, which should be immutable\n ',directive
' Returns the original (before applying diff information) line range of this change region.\n\n ',directive
'The minimum size is set to the smallest possible\n minimum size supported by SWT. ',directive
?,non-directive
' Sets the default value of the preference with the given name\n in the given preference store. As FontDatas are stored as \n arrays this method is only provided for backwards compatibility.\n Use <code>setDefault(IPreferenceStore, String, FontData[])</code>\n instead.\n\n @param store the preference store\n @param name the name of the preference\n @param value the new default value of the preference\n',directive
'If the values are\n null than ignore them. \n ',directive
'String is in the form FontData;FontData; in order that\n multiple FontDatas can be defined.\n ',directive
'@author Stephen Colebourne\n',non-directive
' The TreeColumnLayout is the {@link Layout} used to maintain {@link TreeColumn} sizes in a \n {@link Tree}.\n \n <p>\n <b>You can only add the {@link Layout} to a container whose <i>only</i>\n child is the {@link Tree} control you want the {@link Layout} applied to.\n Don\'t assign the layout directly the {@link Tree}</b>\n </p>\n \n @since 3.3\n',directive
'@param map the <code>Map</code> to populate.\n ',non-directive
' Notifies any selection changed listeners that the selected page\n has changed.\n ',non-directive
'@return <code>RGB</code>\n',non-directive
'</p>\n<p>\n<code>SWTKeySupport</code> is a static class that provides the link between SWT\nand these internal representations.  ',directive
'The\nscheme must then be defined before it can be used.\n',directive
'The width and height hints override the\n control\'s preferred size. ',directive
'The used RGB\n weights come from http://www.poynton.com/notes/colour_and_gamma/ColorFAQ.html#RTFToC9.\n\n ',directive
'@return the value in the Map as an int, <code>0</code> if null map input\n',non-directive
?,non-directive
' Create a new Transformer that calls two transformers, passing the result of\n the first into the second.\n \n',directive
'@link #length()}\n',directive
?,non-directive
'@return IPreferencePage\n \n ',non-directive
'The resouble bundle is\n obtained from\n <code>ResourceBundle.getBundle(\"org.eclipse.jface.jface_nls\")</code>.\n ',directive
' Add the listeners to the tree viewer.\n ',non-directive
'@exception DataFormatException if the given value does not represent\n\tfont data\n',non-directive
'SWT.DEFAULT indicates that the control\'s preferred size should be used. ',directive
'@see org.eclipse.jface.window.Window#getInitialLocation(org.eclipse.swt.graphics.Point)\n',non-directive
'@throws NullPointerException if iterator parameter is null\n ',non-directive
'</p>\n',non-directive
'@deprecated As of 3.2, replaced by Platform UI\'s field assist support\n',directive
'The given size takes precedence over computed\n sizes.\n \n',directive
' Returns the initial size to use for the shell. Overridden\n to check whether a size has been stored in dialog settings.\n If a size has been stored, it is returned.\n \n @return the initial size of the shell\n \n @since 3.2\n @see #getDialogBoundsSettings()\n @see #getDialogBoundsStrategy()\n',directive
' Clear out the cached color for name. This is generally\n done when the color preferences changed and any cached colors\n may be disposed. Users of the colors in this class should add a IPropertyChangeListener\n to detect when any of these colors change.\n @param colorName name of the color\n \n @deprecated JFaceColors no longer maintains a cache of colors.  This job \n is now handled by the ColorRegistry.\n',directive
'For example, a\nhashtable that uses weak references to implement weak keys could poll its\nreference queue each time the table is accessed.  ',non-directive
'@param creator the default information control creator\n',non-directive
?,non-directive
' Returns the error message that will be displayed when and if \n an error occurs.\n\n ',non-directive
'Note that the normal pattern of\n <code>getLabelControl(parent).setToolTipText(tooltipText)</code> does not\n work for boolean field editors, as it can lead to duplicate text (see bug\n 259952).\n \n',directive
?,non-directive
?,non-directive
' Creates a new content assistant. ',non-directive
'@since JDK1.1\n',non-directive
'@return the color descriptor associated with the given symbolic color\n         name or an unspecified sentinel.\n',directive
' Starting button id reserved for internal use by JFace (value 256). ',directive
' The label for back buttons.\n',non-directive
'A tray can be opened\n in any <code>TrayDialog</code>.\n ',directive
' Adds <code>nCopies</code> copies of the specified object to the Bag.\n ',non-directive
'<p>\n A property change event is reported whenever the mapping from a symbolic\n name to a color changes. ',directive
?,non-directive
'One of SWT.BEGINNING, SWT.CENTER, SWT.END, or SWT.FILL.\n ',directive
'Return\n <code>null</code> if one cannot be found.\n \n',directive
' Adds (or replaces) a color to this color registry under the given \n symbolic name.\n <p>\n A property change event is reported whenever the mapping from a symbolic\n name to a color changes. The source of the event is this registry; the\n property name is the symbolic color name.\n </p>\n \n @param symbolicName the symbolic color name\n @param colorData an <code>RGB</code> object\n',non-directive
'<p>\n A field editor presents the value of a preference to the end \n user. ',non-directive
'@param descriptor identifier for the image to dispose\n',non-directive
'If the region containing\n the position is deleted, the position is moved to the beginning/end (falling\n together) of the change. ',directive
'Equivalent to <code>String.valueOf(value.booleanValue())</code>.\n\n ',directive
?,non-directive
' Button id for a \"Proceed\" button (value 10).\n',non-directive
'<li>Federal Information Processing Standards Publication (FIPS PUB) 186:\n    Digital Signature Standard (DSS)</li>\n</ul>\n\n',non-directive
'<code>Hunk</code>s are separated by\n one or more unchanged lines.\n\n ',non-directive
' Returns the modal nesting level.\n <p>\n The modal nesting level increases by one each time the\n <code>ModalContext.run</code> method is called within the dynamic scope\n of another call to <code>ModalContext.run</code>.\n </p>\n \n @return the modal nesting level, or <code>0</code> if this method is\n         called outside the dynamic scope of any invocation of\n         <code>ModalContext.run</code>\n',directive
' Return whether or not we should apply the workaround where we take focus\n for the default button or if that should be determined by the dialog. ',directive
'@since 1.6\n',non-directive
'@return the font descriptor (never null)\n \n ',directive
'\nProvides persistence support for templates.\n<h3>Packages</h3>\n<ul>\n  <li><tt><big><strong>org.eclipse.jface.text.templates</strong></big></tt></li>\n  <li><tt><big><strong>org.eclipse.ui.workbench.texteditor.templates</strong></big></tt></li>\n  <li><tt><big><strong>org.eclipse.ui.editors.templates</strong></big></tt></li>\n</ul>\n<h3>Introduction</h3>\nTemplates are shortcuts for frequently used fragments of text such as\ncode patterns or complex text entities. They may contain variables\nwhich are only resolved at the time when the template is inserted\nwithin a context. Together with linked mode, inserting a template can\ncreate a on-the-fly edit mask within a text viewer.<br>\n<br>\nTemplates are specified as text, variables are defined using the <tt>${variable}</tt>\nnotation known from\nAnt, for example. The following snippet shows an example template for\nan instance check in Java:<br>\n<pre>if (${name} instanceof ${type}) {\n&nbsp;&nbsp;&nbsp; ${type} ${new_name} = (${type})${name};\n&nbsp;&nbsp;&nbsp; ${cursor}\n}\n</pre>\nIn this template, the variables (<tt>name,type, ...</tt>) are resolved\nwhen inserted into java source and changing one variable instance will\nalso change the other. When leaving linked mode, the caret is placed at\nthe <tt>cursor</tt> variable.<br>\n<br>\nTemplate functionality can be added to a custom text editor by offering\n<tt>TemplateProposal</tt>s as content assist choices, which is\nsimplified by using a subclass of <tt>TemplateCompletionProcessor</tt>. User template management can be\noffered by including a <tt>TemplatePreferencePage</tt> which uses a <tt>TemplateStore</tt> and <tt>ContextTypeRegistry</tt> as the\nunderlying model to store templates. The <tt>org.eclipse.ui.editors.templates</tt>\nextension point can be used to allow other plug-ins to contribute\ntemplates to an editor. This is accomplished by using the <tt>ContributionTemplateStore</tt> and <tt>ContributionContextTypeRegistry</tt>\nsubclasses of the above types.<br>\n<br>\nTemplate variables are resolved by a <tt>TemplateVariableResolver.</tt> <tt>GlobalTemplateVariables</tt> offers\nsome default variables such as date, user, and selection, but advanced\nfeatures such as resolving to language constructs can be performed in\nsubclasses.<br>\n<h4>Classes</h4>\n<ul>\n  <li><tt>Template</tt> a template consists of name, context\ntype identifier, and a pattern.</li>\n  <li><tt>TemplateTranslator</tt> and <tt>TemplateBuffer</tt> are used to\nparse the template grammar and don\'t need to be used usually.</li>\n  <li>A <tt>TemplateProposal </tt>can be\noffered in content assist, possibly created by a subclass of <tt>TemplateCompletionProcessor.</tt></li>\n  <li><tt>TemplateStore</tt> and <tt>ContextTypeRegistry</tt> manage a\nset of templates within a plug-in and offer ways to store them in the\npreferences or externally in XML streams via a <tt>TemplateReaderWriter</tt>.<br></li>\n  <li><tt>ContributionTemplateStore</tt> and <tt>ContributionContextTypeRegistry</tt>\nadd awareness for the  <tt>org.eclipse.ui.editors.templates</tt>\nextension point.</li>\n  <li><tt>TemplatePreferencePage</tt> allows\nthe user to access the templates within a <tt>TemplateStore.</tt></li>\n</ul>\n<ul>\n</ul>\n<h4>Example</h4>\nSee the Template Editor Example in the <strong>org.eclipse.ui.examples.javaeditor</strong> project.<br>\n',directive
?,non-directive
'This is the usual way to convert a Color into\n a ColorDescriptor. ',non-directive
'<P>\nClasses, interfaces, methods, fields, constructors, and exceptions \nhave the following \"since\" tags that indicate when they were introduced \ninto the Java platform. ',non-directive
'Similarly, if the agent is started sometime after the VM has started, then\nthe <code>Agent-Class</code> attribute specifies the name of the agent class\n(the value of <code>Premain-Class</code> attribute is ignored).\n\n',directive
'@param line the line at which the hunk starts, must be &gt;= 0\n ',directive
'<p>\n If the content has not been created beforehand, calling this\n method triggers the creation of the wizard and caches it so that\n the identical wizard object is returned on subsequent calls.\n ',directive
'@link javax.management.ObjectName ObjectName}. \n',non-directive
'@param sectionName the name of the section in the settings.\n',non-directive
'<li>Synchronized - synchronizes method access for multi-threaded environments\n',directive
'@param style\n            the style, either <code>DEFAULT</code> or\n            <code>SEPARATE_LABEL</code>\n ',directive
'@return the number of pixels\n',non-directive
'Returns the default-default value (<code>FONTDATA_ARRAY_DEFAULT_DEFAULT</code>) \n if there is no preference with the given name, or if the current value \n cannot be treated as font data.\n\n ',directive
'\n\nProvides interfaces for generating RSA (Rivest, Shamir and\nAdleman AsymmetricCipher algorithm)\nkeys as defined in the RSA Laboratory Technical Note\nPKCS#1, and DSA (Digital Signature\nAlgorithm) keys as defined in NIST\'s FIPS-186.\n<P>\nNote that these interfaces are intended only for key\nimplementations whose key material is accessible and \navailable. These interfaces are not intended for key \nimplementations whose key material resides in \ninaccessible, protected storage (such as in a \nhardware device). \n<P>\nFor more developer information on how to use these \ninterfaces, including information on how to design \n<code>Key</code> classes for hardware devices, please refer\nto these cryptographic provider developer guides:\n<ul>\n  <li><a href=\n    \"{@docRoot}/../technotes/guides/security/crypto/HowToImplAProvider.html\">\n    <b>How to Implement a Provider for the\n    Java<FONT SIZE=-2><SUP>TM</SUP></FONT> Cryptography Architecture\n    </b></a></li>\n</ul>\n\n<h2>Package Specification</h2>\n\n<ul>\n  <li>PKCS #1: RSA Encryption Standard, Version 1.5, November 1993 </li>\n  <li>Federal Information Processing Standards Publication (FIPS PUB) 186:\n    Digital Signature Standard (DSS) </li>\n</ul>\n\n<h2>Related Documentation</h2>\n\nFor further documentation, please see:\n<ul>\n  <li>\n    <a href=\n      \"{@docRoot}/../technotes/guides/security/crypto/CryptoSpec.html\">\n      <b>Java<FONT SIZE=-2><SUP>TM</SUP></FONT>\n      Cryptography Architecture API Specification and Reference\n      </b></a></li>\n</ul>\n\n@since JDK1.1\n',directive
'@exception NumberFormatException\n                if the string value does not contain a parsable number.\n ',directive
'@return the previous page, or <code>null</code> if none\n',directive
'The number of changed lines in this hunk, must be &gt;= 0. ',directive
'@param parent the composite used as a parent for the basic controls;\n\tthe parent\'s layout must be a <code>GridLayout</code>\n ',directive
'Never null.\n ',directive
'@return  the value in the map as a number, or defaultValue if the\n    original value is null, the map is null or the number conversion\n    fails\n',non-directive
'@return the title of this dialog page, \n  or <code>null</code> if none\n',directive
' Set the manager for the preferences.\n ',non-directive
'If null is passed the part uses its default layout.\n ',directive
'Show the blockage when there is \n no longer any modal shells in the UI and forward any actions \n to blockingMonitor. \n \n',non-directive
'<!--\n<h2>Related Documentation</h2>\n\nFor overviews, tutorials, examples, guides, and tool documentation, please see:\n<ul>\n  ',non-directive
'@param key  the key to look up\n ',non-directive
'<p>\n The {',directive
'@link\njava.util.concurrent.DelayQueue}. ',directive
'@return the font descriptor (never null)\n ',directive
' <p>\n This class is the abstract superclass of all dialog trays. A tray can be opened\n in any <code>TrayDialog</code>.\n </p>\n \n @see org.eclipse.jface.dialogs.TrayDialog\n @since 3.2\n',directive
?,non-directive
'<h2>Synchronizers</h2>\n\nFour classes aid common special-purpose synchronization idioms.\n',directive
'@param parent\n            the parent composite\n ',non-directive
' An interface to a storage mechanism for making dialog settings persistent.\n The store manages a collection of key/value pairs. The keys must be strings\n and the values can be either, strings or array of strings. Convenience API to\n convert primitive types to strings is provided.\n',directive
?,non-directive
' Creates a local registry that wraps the given global registry. Anything\n allocated by this registry will be automatically cleaned up with the given\n control is disposed. Note that registries created in this way should not\n be used to allocate any resource that must outlive the given control.\n \n @param parentRegistry global registry that handles resource allocation\n @param owner control whose disposal will trigger cleanup of everything \n in the registry.\n',directive
'Does not attach GridData to the control. ',directive
' Reads the supplied string and returns its corresponding\n FontData. If it cannot be read then the default FontData\n will be returned.\n \n @param fontDataValue the string value for the font data  \n @return the font data\n',non-directive
' Gets an array based on an iterator.\n <p>\n As the wrapped Iterator is traversed, an ArrayList of its values is\n created. At the end, this is converted to an array.\n\n @param iterator  the iterator to use, not null\n @return an array of the iterator contents\n @throws NullPointerException if iterator parameter is null\n',non-directive
'@see org.eclipse.swt.widgets.Scale#setPageIncrement(int)\n',non-directive
'@param trueClosure  the closure called if the predicate is true\n ',directive
'@param selection the selection to replace\n ',non-directive
'<p>\n This is a shortcut for <code>setMessage(newMesasge, NONE)</code>\n </p>\n \n ',non-directive
' Sets the image for this dialog.\n \n @param image\n            the image.\n',non-directive
' Get the change control. Create it in parent if required.\n @param parent\n @return Button\n',directive
'The\n resulting start line must be &gt;= 0.\n\n ',directive
'The package\ncontains a default implementation of <tt>IPresentationReconciler </tt>(<tt>PresentationReconciler</tt>).\n',non-directive
'If none are valid return the first one regardless.\n ',directive
'Thus\n this method must be called each time a field editor\n is constructed.\n ',directive
'A completion can also\nbe a incomplete in itself and content assist provides means to deal with\nnested completions.\n',non-directive
' A field editor for a boolean type preference.\n',non-directive
' Message type constant used to display a warning icon with the message.\n \n',non-directive
?,non-directive
'@see #swtDefaults()\n',non-directive
' Returns the value, an array of strings, of the given key in this dialog\n settings.\n \n @param key\n            the key\n @return the array of string, or <code>null</code> if none\n',non-directive
'@param dflt the default value\n ',non-directive
'<li><a href=\"\">##### REFER TO NON-SPEC DOCUMENTATION HERE #####</a>\n</ul>\n',non-directive
'<p>\n This is a framework hook method for sublcasses to do special things when\n the Apply button has been pressed.\n ',directive
'@link NumberFormat#parse(String)} on the system default formatter\n returning <code>null</code> if the conversion fails.\n ',non-directive
' Notifies that the selected page has changed.\n \n',non-directive
'Note that the returned ColorDescriptor depends on the\n original Color, and disposing the Color will invalidate the ColorDescriptor.\n \n',directive
'@link #fixedSizeSortedMap(SortedMap)}\n  ',non-directive
'If the preference\'s current\n is different from its old default value, its current value is\n unaffected. ',directive
' Creates a GridLayoutFactory that creates GridLayouts with no margins and \n default dialog spacing.\n \n',non-directive
'Subclasses of <code>Throwable</code> represent errors\nand exceptions.\n',directive
' A utility class for dealing with preferences whose values are\n common SWT objects (color, points, rectangles, and font data).\n The static methods on this class handle the conversion between\n the SWT objects and their string representations.\n <p>\n Usage:\n <pre>\n IPreferenceStore store = ...;\n PreferenceConverter.setValue(store, \"bg\", new RGB(127,127,127));\n ...\n RBG bgColor = PreferenceConverter.getValue(store, \"bg\");\n </pre>\n </p>\n <p>\n This class contains static methods and fields only and cannot \n be instantiated.\n </p>\n Note: touching this class has the side effect of creating a display (static initializer).\n @noinstantiate This class is not intended to be instantiated by clients.\n',directive
'Has\n no affect if the listener is not registered.\n \n',directive
'@param store the preference store\n ',non-directive
'This causes the color selection\n dialog to appear and wait for user input.\n \n',directive
'<p>\n May return <code>null</code> if the control\n has not been created yet.\n ',directive
' Converts the given long value to a string.\n Equivalent to <code>String.valueOf(value)</code>.\n\n @param value the long value\n @return the string representing the given long\n',non-directive
' Set the current color value and update the control.\n \n',non-directive
?,non-directive
'@param parent the parent of the field editor\'s control\n',non-directive
'\n <p>\n The order here is important. ',directive
'@return the value coverted to int, or throws\n         <code>NumberFormatException</code> if none\n \n ',directive
' This class provides a convenient shorthand for creating and initialising\n RowData. This offers several benefits over creating RowData the normal way:\n \n <ul>\n <li>The same factory can be used many times to create several RowData\n instances</li>\n <li>The setters on RowDataFactory all return \"this\", allowing them to be\n chained</li>\n </ul>\n \n @since 3.5\n',non-directive
'If a registered reference becomes unreachable itself, then\nit will never be enqueued.  ',directive
' Sets the dialog settings for this wizard.\n <p>\n The dialog settings is used to record state between wizard invocations\n (for example, radio button selection, last import directory, etc.)\n </p>\n \n @param settings\n            the dialog settings, or <code>null</code> if none\n @see #getDialogSettings\n  \n',directive
'Reflection allows\nprogrammatic access to information about the fields, methods\nand constructors of loaded classes, and the use of reflected fields,\nmethods, and constructors to operate on their underlying\ncounterparts, within security restrictions.\n',directive
'@param subjectArea the subject area\n ',non-directive
'These paths are searched by the\n                        bootstrap class loader after the platform specific\n                        mechanisms of locating a class have failed.\n                        ',directive
'-->\n\n',non-directive
' The <code>TitleAreaDialog</code> implementation of this\n <code>Window</code> methods returns an initial size which is at least\n some reasonable minimum.\n \n',directive
'@see Display#getSystemColor(int)\n',non-directive
'<li>grab(false, false)</li>\n ',non-directive
'If a menu action will be provided that allows the\n            user to control this feature and the user hasn\'t changed that\n            setting, then this flag is used as initial default for the\n            menu. ',directive
'@link\njava.util.concurrent.PriorityBlockingQueue}, and {',directive
'The\n{',non-directive
' Returns whether this dialog page is in a valid state.\n \n',non-directive
'For example <tt>java.util.Hashtable</tt> and\n<tt>Collections.synchronizedMap(new HashMap())</tt> are\nsynchronized. ',directive
'RBG bgColor = PreferenceConverter.getValue(store, \"bg\");\n </pre>\n </p>\n <p>\n This class contains static methods and fields only and cannot \n be instantiated.\n ',non-directive
'The string representation is\n that of asString(FontData) seperated by \';\'\n \n ',directive
' Sets the current value of the preference with the given name\n in the given preference store. This method also sets the corresponding\n key in the JFace font registry to the value and fires a \n property change event to listeners on the preference store.\n \n <p>\n Note that this API does not update any other settings that may\n be dependant upon it. Only the value in the preference store \n and in the font registry is updated.\n </p> \n @param store the preference store\n @param name the name of the preference\n @param value the new current value of the preference\n \n @see #putValue(IPreferenceStore, String, FontData[])\n',directive
'@param strategy either <code>VALIDATE_ON_KEY_STROKE</code> to perform\n  on the fly checking (the default), or <code>VALIDATE_ON_FOCUS_LOST</code> to\n  perform validation only after the text has been typed in\n ',directive
'The receiver is shortened to only include\n <code>remaining</code> lines after the split.\n\n ',directive
'@deprecated use {',directive
'If the message line currently displays an error,\n the message is stored and will be shown after a call to clearErrorMessage\n <p>\n Shortcut for <code>setMessage(newMessage, NONE)</code>\n </p>\n \n ',directive
?,non-directive
'@link java.util.concurrent.Exchanger} allows\ntwo threads to exchange objects at a rendezvous point, and is useful\nin several pipeline designs.\n\n',directive
' When the message is normal a CLabel is used but an errors replaces the\n message area with a non editable text that can take focus for use by screen\n readers.\n \n',directive
'@return IPreferencePage\n ',non-directive
' Returns this field editor\'s current value as an integer.\n\n ',non-directive
'If no predicates evaluate to true, the default\n closure is called. ',directive
' Vertical spacing (in pixels) between cells in the layouts inside popup\n dialogs (value is 1).\n',directive
'The\n            bounds can only be persisted if the dialog settings for\n            persisting the bounds are also specified. ',directive
'@param settings\n            the dialog settings, or <code>null</code> if none\n ',directive
'@throws LineIndexOutOfBoundsException if <code>end</code> &lt;= {',directive
' A layout for a container which includes several pages, like a notebook,\n wizard, or preference dialog. The size computed by this layout is the\n maximum width and height of all pages currently inserted into the\n container.\n',directive
' Returns the error message label.\n \n @return the error message label\n @deprecated use setErrorMessage(String) instead\n',directive
'@param key\n            the key.\n ',non-directive
' Manages SWT resources for a particular device.\n  \n <p>\n IMPORTANT: in most cases clients should use a <code>LocalResourceManager</code> instead of a\n <code>DeviceResourceManager</code>. To create a resource manager on a particular display, \n use <code>new LocalResourceManager(JFaceResources.getResources(myDisplay))</code>.\n <code>DeviceResourceManager</code> should only be used directly when managing\n resources for a device other than a Display (such as a printer).  \n </p>\n \n @see LocalResourceManager\n \n @since 3.1\n',directive
'@link #replace(ISelection, String)}\n to the underlying document and adapts the selection accordingly.\n \n',non-directive
' Fills this field editor\'s basic controls into the given parent. \n\n @param parent the composite used as a parent for the basic controls;\n\tthe parent\'s layout must be a <code>GridLayout</code>\n @param numColumns the number of columns\n',directive
'@param value The font data.\n ',non-directive
?,non-directive
' Returns the default dialog margins, in pixels\n \n ',non-directive
' Returns the default dialog margins, in pixels\n \n @return the default dialog margins, in pixels\n',non-directive
'@link #setSelection(ISelection)} will set the current sticky revision on the ruler.\n ',directive
'@return the preference page container, or <code>null</code> if this\n   page has yet to be added to a container\n',directive
'Subject to change without notice.\n',non-directive
'@deprecated use\n             org.eclipse.swt.widgets.Display.getSystemImage(SWT.ICON_WARNING)\n',directive
'<li><i>Indirect access via {',non-directive
'<LI>Ability to programmatically update <code>BLOB</code>,\n      <code>CLOB</code>, <code>ARRAY</code>, and <code>REF</code> values.\n  ',non-directive
' Sets the margins for layouts created with this factory. The margins\n are the distance between the outer cells and the edge of the layout.\n \n @param margins margin size (pixels)\n @return this\n @see #spacing(Point)\n @see #spacing(int, int)\n',directive
'\n<p>Provides support for bindings between commands and keys.</p>\n\n<h2>Package Specification</h2>\n<p>\nThis just a key-specific implementation of the generic bindings and trigger\nsupport.  ',directive
'<p>\n The size of the map can vary, but it can never exceed a preset \n maximum number of elements. ',directive
?,non-directive
?,non-directive
' Sets the current value of the preference with the given name back\n to its default value.\n <p>\n Note that the preferred way of re-initializing a preference to the\n appropriate default value is to call <code>setToDefault</code>.\n This is implemented by removing the named value from the store, \n thereby exposing the default value.\n </p>\n\n @param name the name of the preference\n',directive
'If the preference\'s current\n is different from its old default value, its current value is\n unaffected. ',directive
'The agent class must implement a \npublic static <code>premain</code> method similar in principle to the <code>main</code> application \nentry point.  ',directive
?,non-directive
' Returns the position category.\n\n ',non-directive
' <p>\n IMPORTANT: in most cases clients should use a <code>LocalResourceManager</code> instead of a\n <code>DeviceResourceManager</code>. ',directive
' Sets the current value of the preference with the given name\n in the given preference store.\n\n ',non-directive
'<p>\n Use the methods <code>load(InputStream)</code> and\n <code>save(InputStream)</code> to load and store this preference store.\n ',directive
'@param start the new start, must be &gt;= 0\n ',directive
?,non-directive
'@link java.util.concurrent.RunnableFuture} is\na Future that possesses a <tt>run</tt> method that upon execution,\nsets its results.\n\n',directive
' Sets the margins for layouts created with this factory. The margins\n specify the number of pixels of horizontal and vertical margin that will\n be placed along the left/right and top/bottom edges of the layout. Note\n that thes margins will be added to the ones specified by\n {@link #extendedMargins(int, int, int, int)}.\n \n @param width\n            margin width (pixels)\n @param height\n            margin height (pixels)\n @return this\n @see #spacing(Point)\n * @see #spacing(int, int)\n',directive
'</p>\n\n ',non-directive
' Button id for a \"Select types\" button (value 20).\n',non-directive
'@throws NullPointerException if array is null\n',non-directive
?,non-directive
' Create a new instance of the receiver.\n \n',non-directive
'If it cannot do\n this it saves the first one.\n',directive
' The value of the preference when the user wishes to prompted for an\n answer every time the question is to be asked.\n',non-directive
'@see #open(int, Shell, String, String, int)\n',non-directive
' Notifies of the pressing of the Help button.\n <p>\n The default implementation of this framework method calls\n <code>performHelp</code> on the currently active page.\n </p>\n',directive
'\n\n<p> Utility classes commonly useful in concurrent programming.  This\npackage includes a few small standardized extensible frameworks, as\nwell as some classes that provide useful functionality and are\notherwise tedious or difficult to implement.  Here are brief\ndescriptions of the main components. See also the <tt>locks</tt> and\n<tt>atomic</tt> packages.\n\n<h2>Executors</h2>\n\n<b>Interfaces.</b> {@link java.util.concurrent.Executor} is a simple\nstandardized interface for defining custom thread-like subsystems,\nincluding thread pools, asynchronous IO, and lightweight task\nframeworks.  Depending on which concrete Executor class is being used,\ntasks may execute in a newly created thread, an existing\ntask-execution thread, or the thread calling <tt>execute()</tt>, and\nmay execute sequentially or concurrently.  {@link\njava.util.concurrent.ExecutorService} provides a more complete\nasynchronous task execution framework.  An ExecutorService manages\nqueuing and scheduling of tasks, and allows controlled shutdown.  The\n{@link java.util.concurrent.ScheduledExecutorService} subinterface\nand associated interfaces add support for delayed and periodic task execution.\nExecutorServices provide methods arranging asynchronous execution of\nany function expressed as {@link java.util.concurrent.Callable}, the\nresult-bearing analog of {@link java.lang.Runnable}.  A {@link\njava.util.concurrent.Future} returns the results of a function, allows\ndetermination of whether execution has completed, and provides a means to\ncancel execution.  A {@link java.util.concurrent.RunnableFuture} is\na Future that possesses a <tt>run</tt> method that upon execution,\nsets its results.\n\n<p>\n\n<b>Implementations.</b> Classes {@link\njava.util.concurrent.ThreadPoolExecutor} and {@link\njava.util.concurrent.ScheduledThreadPoolExecutor} provide tunable,\nflexible thread pools. The {@link java.util.concurrent.Executors}\nclass provides factory methods for the most common kinds and\nconfigurations of Executors, as well as a few utility methods for\nusing them. Other utilities based on Executors include the concrete\nclass {@link java.util.concurrent.FutureTask} providing a common\nextensible implementation of Futures, and {@link\njava.util.concurrent.ExecutorCompletionService}, that assists in\ncoordinating the processing of groups of asynchronous tasks.\n\n<h2>Queues</h2>\n\nThe java.util.concurrent {@link\njava.util.concurrent.ConcurrentLinkedQueue} class supplies an\nefficient scalable thread-safe non-blocking FIFO queue.  Five\nimplementations in java.util.concurrent support the extended {@link\njava.util.concurrent.BlockingQueue} interface, that defines blocking\nversions of put and take: {@link\njava.util.concurrent.LinkedBlockingQueue}, {@link\njava.util.concurrent.ArrayBlockingQueue}, {@link\njava.util.concurrent.SynchronousQueue}, {@link\njava.util.concurrent.PriorityBlockingQueue}, and {@link\njava.util.concurrent.DelayQueue}. The different classes cover the most\ncommon usage contexts for producer-consumer, messaging, parallel\ntasking, and related concurrent designs. The {@link\njava.util.concurrent.BlockingDeque} interface extends\n<tt>BlockingQueue</tt> to support both FIFO and LIFO (stack-based)\noperations. Class {@link java.util.concurrent.LinkedBlockingDeque}\nprovides an implementation.\n\n\n<h2>Timing</h2>\n\nThe {@link java.util.concurrent.TimeUnit} class provides multiple\ngranularities (including nanoseconds) for specifying and controlling\ntime-out based operations.  Most classes in the package contain\noperations based on time-outs in addition to indefinite waits.  In all\ncases that time-outs are used, the time-out specifies the minimum time\nthat the method should wait before indicating that it\ntimed-out.  Implementations make a &quot;best effort&quot; to detect\ntime-outs as soon as possible after they occur.  However, an indefinite\namount of time may elapse between a time-out being detected and a\nthread actually executing again after that time-out.  All methods\nthat accept timeout parameters treat values less than or equal to\nzero to mean not to wait at all.  To wait \"forever\", you can use\na value of <tt>Long.MAX_VALUE</tt>.\n\n<h2>Synchronizers</h2>\n\nFour classes aid common special-purpose synchronization idioms.\n{@link java.util.concurrent.Semaphore} is a classic concurrency tool.\n{@link java.util.concurrent.CountDownLatch} is a very simple yet very\ncommon utility for blocking until a given number of signals, events,\nor conditions hold.  A {@link java.util.concurrent.CyclicBarrier} is a\nresettable multiway synchronization point useful in some styles of\nparallel programming. An {@link java.util.concurrent.Exchanger} allows\ntwo threads to exchange objects at a rendezvous point, and is useful\nin several pipeline designs.\n\n<h2>Concurrent Collections</h2>\n\nBesides Queues, this package supplies Collection implementations\ndesigned for use in multithreaded contexts:\n{@link java.util.concurrent.ConcurrentHashMap},\n{@link java.util.concurrent.ConcurrentSkipListMap},\n{@link java.util.concurrent.ConcurrentSkipListSet},\n{@link java.util.concurrent.CopyOnWriteArrayList}, and\n{@link java.util.concurrent.CopyOnWriteArraySet}.\nWhen many threads are expected to access a given collection,\na <tt>ConcurrentHashMap</tt> is normally preferable to\na synchronized <tt>HashMap</tt>, and a\n<tt>ConcurrentSkipListMap</tt> is normally preferable\nto a synchronized <tt>TreeMap</tt>. A\n<tt>CopyOnWriteArrayList</tt> is preferable to\na synchronized <tt>ArrayList</tt> when the expected number of reads\nand traversals greatly outnumber the number of updates to a list.\n\n<p>The \"Concurrent\" prefix used with some classes in this package is a\nshorthand indicating several differences from similar \"synchronized\"\nclasses. For example <tt>java.util.Hashtable</tt> and\n<tt>Collections.synchronizedMap(new HashMap())</tt> are\nsynchronized. But {@link java.util.concurrent.ConcurrentHashMap} is\n\"concurrent\".  A concurrent collection is thread-safe, but not\ngoverned by a single exclusion lock. In the particular case of\nConcurrentHashMap, it safely permits any number of concurrent reads as\nwell as a tunable number of concurrent writes.  \"Synchronized\" classes\ncan be useful when you need to prevent all access to a collection via\na single lock, at the expense of poorer scalability. In other cases in\nwhich multiple threads are expected to access a common collection,\n\"concurrent\" versions are normally preferable. And unsynchronized\ncollections are preferable when either collections are unshared, or\nare accessible only when holding other locks.\n\n<p> Most concurrent Collection implementations (including most Queues)\nalso differ from the usual java.util conventions in that their Iterators\nprovide <em>weakly consistent</em> rather than fast-fail traversal. A\nweakly consistent iterator is thread-safe, but does not necessarily\nfreeze the collection while iterating, so it may (or may not) reflect\nany updates since the iterator was created.\n\n<a name=\"MemoryVisibility\">\n<h2> Memory Consistency Properties </h2>\n\n<a href=\"http://java.sun.com/docs/books/jls/third_edition/html/memory.html\">\nChapter 17 of the Java Language Specification</a> defines the\n<i>happens-before</i> relation on memory operations such as reads and\nwrites of shared variables.  The results of a write by one thread are\nguaranteed to be visible to a read by another thread only if the write\noperation <i>happens-before</i> the read operation.  The\n{@code synchronized} and {@code volatile} constructs, as well as the\n{@code Thread.start()} and {@code Thread.join()} methods, can form\n<i>happens-before</i> relationships. In particular:\n\n<ul>\n  <li>Each action in a thread <i>happens-before</i> every action in that\n  thread that comes later in the program\'s order.\n\n  <li>An unlock ({@code synchronized} block or method exit) of a\n  monitor <i>happens-before</i> every subsequent lock ({@code synchronized}\n  block or method entry) of that same monitor. And because\n  the <i>happens-before</i> relation is transitive, all actions\n  of a thread prior to unlocking <i>happen-before</i> all actions\n  subsequent to any thread locking that monitor.\n\n  <li>A write to a {@code volatile} field <i>happens-before</i> every\n  subsequent read of that same field. Writes and reads of\n  {@code volatile} fields have similar memory consistency effects\n  as entering and exiting monitors, but do <em>not</em> entail\n  mutual exclusion locking.\n\n  <li>A call to {@code start} on a thread <i>happens-before</i> any action in the\n  started thread.\n\n  <li>All actions in a thread <i>happen-before</i> any other thread\n  successfully returns from a {@code join} on that thread.\n\n</ul>\n\n\nThe methods of all classes in {@code java.util.concurrent} and its\nsubpackages extend these guarantees to higher-level\nsynchronization. In particular:\n\n<ul>\n\n  <li>Actions in a thread prior to placing an object into any concurrent\n  collection <i>happen-before</i> actions subsequent to the access or\n  removal of that element from the collection in another thread.\n\n  <li>Actions in a thread prior to the submission of a {@code Runnable}\n  to an {@code Executor} <i>happen-before</i> its execution begins.\n  Similarly for {@code Callables} submitted to an {@code ExecutorService}.\n\n  <li>Actions taken by the asynchronous computation represented by a\n  {@code Future} <i>happen-before</i> actions subsequent to the\n  retrieval of the result via {@code Future.get()} in another thread.\n\n  <li>Actions prior to \"releasing\" synchronizer methods such as\n  {@code Lock.unlock}, {@code Semaphore.release}, and\n  {@code CountDownLatch.countDown} <i>happen-before</i> actions\n  subsequent to a successful \"acquiring\" method such as\n  {@code Lock.lock}, {@code Semaphore.acquire},\n  {@code Condition.await}, and {@code CountDownLatch.await} on the\n  same synchronizer object in another thread.\n\n  <li>For each pair of threads that successfully exchange objects via\n  an {@code Exchanger}, actions prior to the {@code exchange()}\n  in each thread <i>happen-before</i> those subsequent to the\n  corresponding {@code exchange()} in another thread.\n\n  <li>Actions prior to calling {@code CyclicBarrier.await}\n  <i>happen-before</i> actions performed by the barrier action, and\n  actions performed by the barrier action <i>happen-before</i> actions\n  subsequent to a successful return from the corresponding {@code await}\n  in other threads.\n\n</ul>\n\n@since 1.5\n\n',directive
'These proposals appear when the defined\nassist keystroke is invoked.  ',directive
?,non-directive
'<p>\n This method is called by the container itself\n when its wizard page changes and may be called\n by the page at other times to force a message \n update.\n ',directive
'Has no effect if an identical listener is not registered.\n \n',directive
'<p>Actions (<tt>IAction</tt>) are commands which can be triggered from\nthe UI, like the ones found in menus, toolbars, and buttons. ',non-directive
?,non-directive
'<li>HORIZONTAL: Position the controls horizontally from left to right</li>\n ',non-directive
'Users that wish to ensure a reasonable default value should\n use {',directive
'@since 3.1 \n\n ',non-directive
'This may \n           include logging information generated by the target application\n           as well as logging information generated by lower-level libraries.          \n           ',directive
' Image registry key for disabled menu image.\n \n',non-directive
' Image registry key for error message image (value\n <code>\"dialog_title_error_image\"</code>).\n',non-directive
?,non-directive
'If necessary, the resource will be deallocated \n automatically when the resource manager is disposed.</p>\n \n <p>The resources returned from this method are reference counted and may be shared \n internally with other resource managers. ',directive
' Performs any actions appropriate in response to the user \n having pressed the Finish button, or refuse if finishing\n now is not permitted.\n\n Normally this method is only called on the container\'s\n current wizard. However if the current wizard is a nested wizard\n this method will also be called on all wizards in its parent chain.\n Such parents may use this notification to save state etc. However,\n the value the parents return from this method is ignored.\n\n @return <code>true</code> to indicate the finish request\n   was accepted, and <code>false</code> to indicate\n   that the finish request was refused\n',directive
' Sets the layout data on the given control. Creates a new RowData instance\n and assigns it to the control by calling control.setLayoutData.\n \n @param control\n            control whose layout data will be initialised\n',directive
'\n <p>\n GridDataFactory instances are created using one of the static methods on this class. \n ',directive
'@param data contents of the image\n ',non-directive
'@link IInformationControlExtension3}!</strong>\n\n ',directive
'<h2>\nPackage Specification</h2>\nLong-running operations must be dealt with specially in order to keep the\nUI helpful and responsive. ',directive
'\n Gap between label and control.\n',directive
' Indicates whether the Cancel button is to be shown.\n',non-directive
?,non-directive
' Height of button bar in dialog units (value 25).\n',non-directive
'<p>\n This method is called just before the wizard becomes visible, to give the \n wizard the opportunity to add any lazily created pages.\n ',directive
'The ordering is that of the iterator() method on the entryset \n collection of the map.\n \n',non-directive
'@param store\n            the preference store\n ',non-directive
' Creates a list field editor.\n \n',non-directive
'@param predicates  an array of predicates to check, not null\n ',non-directive
?,non-directive
'<li>pack(true)</li>\n ',non-directive
'If you are not on the UI\n thread then wrap the call with a\n <code>PlatformUI.getWorkbench().getDisplay().synchExec()</code> in order to\n guarantee the correct result. ',directive
'@link #start()}\n',directive
' Set this field to <code>false</code> to prevent the page from changing.\n   \n',directive
'Clear the\n extra information and resume.\n',directive
?,non-directive
'@link java.util.concurrent.locks.AbstractQueuedSynchronizer}\nclass serves as a useful superclass for defining locks and other\nsynchronizers that rely on queuing blocked threads.  ',directive
' Gets from a Map in a null-safe manner.\n\n @param map  the map to use\n @param key  the key to look up\n @return the value in the Map, <code>null</code> if null map input\n',non-directive
' Delegates the painting of the quick diff colors to this painter. The painter will draw the\n color boxes onto the passed {@link GC} for all model (document) lines in\n <code>visibleModelLines</code>.\n\n @param gc the {@link GC} to draw onto\n @param visibleLines the lines (in document offsets) that are currently (perhaps only\n        partially) visible\n',directive
'\nProvides persistence support for templates.\n',non-directive
' Converts the given value into a double.\n ',non-directive
?,non-directive
'  Looks up the given key in the given map, converting the result into\n  an integer, using the default value if the the conversion fails.\n\n  ',non-directive
'@param labelText the label text of the field editor\n ',non-directive
'The keys must be strings\n and the values can be either, strings or array of strings. ',directive
?,non-directive
' Release the page managed by this node, and any SWT resources\n held onto by this node (Images, Fonts, etc).  \n\n Note that nodes are reused so this is not a call to dispose the\n node itself.\n',directive
'@see org.apache.commons.collections.functors.InvokerTransformer\n ',directive
' Initialize the progress bar.\n \n',non-directive
'As with Handlers, additional Formatters \n                          may be developed by third parties.\n',directive
'The different classes cover the most\ncommon usage contexts for producer-consumer, messaging, parallel\ntasking, and related concurrent designs. ',directive
' Gets the current key, which is the key returned by the last call\n to <code>next()</code>.\n\n @return the current key\n @throws IllegalStateException if <code>next()</code> has not yet been called\n',directive
' @param element must be an instance of <code>IPreferenceNode</code>.\n @see org.eclipse.jface.viewers.ILabelProvider#getText(java.lang.Object)\n',directive
'@param entryNamesAndValues the names (labels) and underlying values to populate the combo widget.  ',non-directive
' Returns a GridDataFactory initialized with heuristicly generated defaults for the given control.\n To be precise, this method picks the default values that GridLayoutFactory.generateLayout\n would have assigned to the control. Does not attach GridData to the control. Callers must\n additionally call applyTo(theControl) if they wish to use the generated values.\n \n <p>\n This method is intended for situations where generateLayout is generating layout data\n for a particular control that is not quite right for the desired layout.\n This allows callers to start with the generated values and tweak one or two settings\n before applying the GridData to the control.\n </p> \n \n @see GridLayoutFactory#generateLayout(org.eclipse.swt.widgets.Composite)\n @param theControl \n @return a GridLayoutFactory initialized with defaults that GridLayoutFactory would have \n @since 3.3\n',directive
' Sets the value associated with the current key (optional operation).\n\n @param value  the new value\n @return the previous value\n @throws UnsupportedOperationException if setValue is not supported by the map\n @throws IllegalStateException if <code>next()</code> has not yet been called\n @throws IllegalStateException if <code>remove()</code> has been called since the\n  last call to <code>next()</code>\n',directive
'@link Hunk}s, grouping\n contiguous blocks of lines that are changed (added, deleted).\n\n ',non-directive
?,non-directive
' GridLayoutFactory creates and initializes grid layouts. There are two ways to use GridLayoutFactory.\n Normally, it is used as a shorthand for writing \"new GridLayout()\" and initializing a bunch \n of fields. In this case the main benefit is a more concise syntax and the ability to create more\n than one identical GridLayout from the same factory. Changing a property of the factory will affect\n future layouts created by the factory, but has no effect on layouts that have already been created.\n \n <p>\n GridLayoutFactory can also generate grid data for all the controls in a layout. This is done with\n the generateLayout method. To use this feature:\n </p>\n \n <ol>\n <li>Create the composite</li>\n <li>Create all the controls in the composite</li>\n <li>Call generateLayout</li>\n </ol>\n \n <p>\n The order here is important. generateLayout must be called after all the child controls have\n been created. generateLayout will not change any layout data that has already been attached\n to a child control and it will not recurse into nested composites. \n </p>\n\n @since 3.2\n',directive
' <p>\n Populates a Map using the supplied <code>Transformer</code>s to transform the collection\n values into keys and values.\n </p>\n @param map the <code>Map</code> to populate.\n @param collection the <code>Collection</code> to use as input values for the map.\n @param keyTransformer the <code>Transformer</code> used to transform the collection value into a key value\n @param valueTransformer the <code>Transformer</code> used to transform the collection value into a value\n @throws NullPointerException if the map, collection or transformers are null\n',non-directive
'Additional Handlers\n                 may be developed by third parties and delivered on top of the core platform.\n   ',directive
'This factory will generate GridData that is equivalent to \n \"new GridData()\".\n \n',directive
' Returns the wizard\'s shell if the wizard is visible. ',non-directive
'The x coordinate indicates the number of\n columns spanned, and the y coordinate indicates the number of rows.\n ',directive
'Does nothing if that page is already current.\n \n',directive
'When an object wants to invoke a method on a remote\nobject, it must first lookup the remote object using its name.  ',directive
'If the future extension to the standard management interface defines\na new attribute for a management interface and the attribute name\nis happened to be same as some vendor-specific attribute\'s name,\nthe applications accessing that vendor-specific attribute would have\nto be modified to cope with versioning and compatibility issues.\n\n',non-directive
'@param newTitle\n            the window title for the container\n',non-directive
?,non-directive
' Returns the wizard page that would to be shown if the user was to\n press the Back button.\n\n @return the previous wizard page, or <code>null</code> if none\n',non-directive
?,non-directive
?,non-directive
'@return the modal nesting level, or <code>0</code> if this method is\n         called outside the dynamic scope of any invocation of\n         <code>ModalContext.run</code>\n',directive
' Opens an error dialog to display the given error. ',non-directive
'Returns the default-default value (<code>RECTANGLE_DEFAULT_DEFAULT</code>) \n is no default preference with the given name, or if the default \n value cannot be treated as a rectangle.\n\n ',directive
'The runnable\n can be subsequently canceled by a call to <code>cancelDisposeExec</code>.\n \n',directive
'@return the created title area composite.\n',non-directive
'<li>Call the methods in the MXBean directly within the same \n    Java virtual machine.\n',directive
?,non-directive
'@param value the new default value of the preference\n',non-directive
' Convenience API. ',non-directive
'This switch may be used multiple times on the same command-line, \nthus creating multiple agents.\n',directive
' A dialog is a specialized window used for narrow-focused communication with\n the user.\n <p>\n Dialogs are usually modal. Consequently, it is generally bad practice to open\n a dialog without a parent. A modal dialog without a parent is not prevented\n from disappearing behind the application\'s other windows, making it very\n confusing for the user.\n </p>\n <p>\n If there is more than one modal dialog is open the second one should be\n parented off of the shell of the first one otherwise it is possible that the\n OS will give focus to the first dialog potentially blocking the UI.\n </p>\n',directive
' Creates a Closure that will call the closure repeatedly until the \n predicate returns false.\n\n ',directive
'@link DefaultInformationControl}.\n\n ',directive
' Sets the minimum size for the control. The control will not be permitted\n to shrink below this size. Note: GridLayout treats a minimum size of 0\n as an undocumented special value, so the smallest possible minimum size \n is a size of 1. A minimum size of SWT.DEFAULT indicates that the result\n of computeSize(int, int, boolean) should be used as the control\'s minimum\n size.\n \n \n @param minX minimum a value of 1 or more is a horizontal size of the control (pixels). \n        SWT.DEFAULT indicates that the control\'s preferred size should be used. A size\n        of 0 has special semantics defined by GridLayout. \n @param minY minimum a value of 1 or more is a vertical size of the control (pixels). SWT.DEFAULT\n        indicates that the control\'s preferred size should be used. A size\n        of 0 has special semantics defined by GridLayout.\n @return this\n',directive
'Overridden\n to check whether a size has been stored in dialog settings.\n ',directive
?,non-directive
'@return the image, or <code>null</code> if none\n',directive
' Defines a functor interface implemented by classes that transform one\n object into another.\n <p>\n A <code>Transformer</code> converts the input object to the output object.\n The input object should be left unchanged.\n Transformers are typically used for type conversions, or extracting data\n from an object.\n <p>\n Standard implementations of common transformers are provided by\n {@link TransformerUtils}. These include method invokation, returning a constant,\n cloning and returning the string value.\n\n @param <I> the input type to the transformer\n @param <O> the output type from the transformer\n\n @since Commons Collections 1.0\n @version $Revision: 814997 $ $Date: 2009-09-15 07:29:56 +0200 (Tue, 15 Sep 2009) $\n\n @author James Strachan\n @author Stephen Colebourne\n',directive
?,non-directive
'@exception InterruptedException\n                if cancelling the operation has been requested\n ',directive
'<p>\n Given two ordered {',non-directive
' Removes the verify key listener from this content assist subject control\'s\n list of verify key listeners. If the listener is not registered, this\n call has no effect.\n\n @param verifyKeyListener the listener to be removed\n',directive
' Creates a FontDescriptor that describes an existing font. ',non-directive
'They should never be disposed outside of the \n ResourceManager framework, or it will cause exceptions in other code that shares\n them. ',directive
' Vertical spacing (in pixels) between cells in the layouts inside popup\n dialogs (value is 1).\n',directive
'When such\nan object is invoked, its arguments are ``marshalled\'\' and sent from the\nlocal virtual machine to the remote one, where the arguments are\n``unmarshalled.\'\'  When the method terminates, the results are\nmarshalled from the remote machine and sent to the caller\'s virtual\nmachine.  ',directive
'@return the preference page\n',non-directive
'These should be\n arranged as: { {name1, value1}, {name2, value2}, ...}\n ',directive
'The input object should be left unchanged.\n ',directive
'@since 3.0\n',non-directive
'Note that for linear\n selections, this is the number of contained delimiters plus 1.\n \n',directive
'@return the descriptor, or <code>null</code> if none\n ',directive
'A request to cancel the operation should be honored and acknowledged \n by throwing <code>InterruptedException</code>.\n\n ',directive
' Sets the current value of the double-valued preference with the\n given name.\n ',non-directive
'@throws LineIndexOutOfBoundsException if <code>start</code> &lt; 0\n',directive
'Note that each call returns a new SWT image data object.\n ',directive
'<p>\n This method does not fire a property change event and \n should only be used for setting internal preferences \n that are not meant to be processed by listeners.\n ',directive
'@param labelText the label text of the field editor\n ',non-directive
'@param map  the map to use\n ',non-directive
?,non-directive
' Sets the margins for layouts created with this factory. The margins\n specify the number of pixels of horizontal and vertical margin that will\n be placed along the left, right, top, and bottom edges of the layout.\n Note that these margins will be added to the ones specified by\n {@link #margins(int, int)}.\n \n @param left\n            left margin size (pixels)\n @param right\n            right margin size (pixels)\n @param top\n            top margin size (pixels)\n @param bottom\n            bottom margin size (pixels)\n @return this\n @see #spacing(int)\n \n @since 3.3\n',directive
' Event object describing an <code>IDialogPage</code> in the midst of changing.\n \n',non-directive
'<p>\n This method is called by the container itself\n when its wizard page changes and may be called\n by the page at other times to force a button state\n update.\n ',directive
' Returns whether the given status object should be displayed.\n \n',non-directive
'@link TableLayout} which\n only sets initial sizes.\n \n',directive
'All JFace windows, including dialogs, are instances\nof the abstract class <tt>Window</tt> or a subclass. ',directive
' Sets the current value of the preference with the given name\n in the given preference store. ',non-directive
' The difference in lines compared to the corresponding line range in the original. ',non-directive
'@link Tree}</b>\n </p>\n \n ',directive
'@param parent\n            the parent shell, or <code>null</code> to create a top-level\n            shell\n',directive
'<li>Switch - calls one closure based on one or more predicates\n ',directive
'@since 3.1\n',non-directive
'@param <V>\n ',non-directive
?,non-directive
' If supported, inserts the verify key listener at the beginning of this content assist\n subject\'s list of verify key listeners. If the listener is already\n registered with the viewer this call moves the listener to the beginning\n of the list.\n <p>\n Note: This content assist subject control may not support prepending a verify\n listener, in which case <code>false</code> will be returned. However,\n {@link #appendVerifyKeyListener(VerifyKeyListener)} might work.\n </p>\n\n @param verifyKeyListener the listener to be inserted\n @return <code>true</code> if the listener was added\n',directive
'</p>\n<p>\n<tt>ControlDecoration</tt> can be used to decorate an arbitrary control with \nan image that communicates information about the control\'s content.  ',non-directive
'<h4>Example</h4>\nSee the Template Editor Example in the <strong>org.eclipse.ui.examples.javaeditor</strong> project.<br>\n',directive
' Sets the default value for the string-valued preference with the\n given name. \n ',non-directive
'If it is\n <code>null</code> there will be no preview area,\n ',directive
'@return the value in the Map as a Boolean, <code>null</code> if null map input\n',non-directive
' A standard implementation of an IProgressMonitor. It consists\n of a label displaying the task and subtask name, and a\n progress indicator to show progress. In contrast to\n <code>ProgressMonitorDialog</code> this class only implements\n <code>IProgressMonitor</code>.\n',directive
' Cancels a runnable that was previously scheduled with <code>disposeExec</code>.\n ',non-directive
' Layout constant (value <code>0</code>) indicating that\n each field editor is handled as a single component.\n',non-directive
'If the parent\n shell is <code>null</code> the behavior will be the same as\n IDialogBlockedHandler#showBlocked(IProgressMonitor, IStatus, String)\n \n ',directive
' Creates a new change region for the given revision and line range.\n\n @param revision the revision of the new region\n @param lines the line range of the new region\n @throws IndexOutOfBoundsException if the line range is not well-formed\n',non-directive
'The concrete structured viewer classes\nare ready-to-use and have built-in support for drag-and-drop, filtering\n(<tt>IViewerFilter</tt> and <tt>ViewerFilter</tt>), and sorting (<tt>IViewerSorter</tt>\nand <tt>ViewerSorter</tt>); these classes may also be subclassed further\nif required.\n',directive
'\n\nProvides the API for accessing and processing data stored in a \ndata source (usually a relational database) using the \nJava<sup><font size=-2>TM</font></sup> programming language. \nThis API includes a framework whereby different\ndrivers can be installed dynamically to access different data sources.\nAlthough the JDBC<sup><font size=-2>TM</font></sup> API is mainly geared \nto passing SQL statements to a database, it provides for reading and\nwriting data from any data source with a tabular format.\nThe reader/writer facility, available through the \n<code>javax.sql.RowSet</code> group of interfaces, can be customized to\nuse and update data from a spread sheet, flat file, or any other tabular \ndata source.\n<P>\n<h2>What the JDBC<sup><font size=-2>TM</font></sup> 4.0 API Includes</h2>\nThe JDBC<sup><font size=-2>TM</font></sup> 4.0 API includes both\nthe <code>java.sql</code> package, referred to as the JDBC core API,\nand the <code>javax.sql</code> package, referred to as the JDBC Optional\nPackage API. This complete JDBC API\nis included in the Java<sup><font size=-2>TM</font></sup>  \nStandard Edition (Java SE<sup><font size=-2>TM</font></sup>), version 6.  \nThe <code>javax.sql</code> package extends the functionality of the JDBC API \nfrom a client-side API to a server-side API, and it is an essential part\nof the Java<sup><font size=-2>TM</font></sup>  Enterprise Edition\n(Java EE<sup><font size=-2>TM</font></sup>) technology. \n<P>\n<h2>Versions</h2>\nThe JDBC 4.0 API incorporates all of the previous JDBC API versions:\n<UL>\n <LI> The JDBC 3.0 API\n <LI> The JDBC 2.1 core API\n <LI> The JDBC 2.0 Optional Package API<br>\n      (Note that the JDBC 2.1 core API and the JDBC 2.0 Optional Package\n      API together are referred to as the JDBC 2.0 API.)\n <LI> The JDBC 1.2 API\n <LI> The JDBC 1.0 API\n</UL>\n<P>\nClasses, interfaces, methods, fields, constructors, and exceptions \nhave the following \"since\" tags that indicate when they were introduced \ninto the Java platform. When these \"since\" tags are used in\nJavadoc<sup><font size=-2>TM</font></sup> comments for the JDBC API,\nthey indicate the following:\n<UL>\n <LI>Since 1.6 -- new in the JDBC 4.0 API and part of the Java SE platform, \n     version 6\n <LI>Since 1.4 -- new in the JDBC 3.0 API and part of the J2SE platform, \n     version 1.4\n <LI>Since 1.2 -- new in the JDBC 2.0 API and part of the J2SE platform, \n     version 1.2\n <LI>Since 1.1 or no \"since\" tag -- in the original JDBC 1.0 API and part of\n      the JDK<sup><font size=-2>TM</font></sup>, version 1.1\n</UL>\n<P>\n<b>NOTE:</b> Many of the new features are optional; consequently, there is \nsome variation in drivers and the features they support. Always \ncheck your driver\'s documentation to see whether it supports a feature before\nyou try to use it.\n<P>\n<b>NOTE:</b> The class <code>SQLPermission</code> was added in the\nJava<sup><font size=-2>TM</font></sup> 2 SDK, Standard Edition, \nversion 1.3 release. This class is used to prevent unauthorized\naccess to the logging stream associated with the <code>DriverManager</code>,\nwhich may contain information such as table names, column data, and so on.\n<p>\n\n<h2>What the <code>java.sql</code> Package Contains</h2>\nThe <code>java.sql</code> package contains API for the following:\n<UL>\n  <LI>Making a connection with a database via the <code>DriverManager</code> facility\n  <UL>\n\t <LI><code>DriverManager</code> class -- makes a connection with a driver\n\t <LI><code>SQLPermission</code> class -- provides permission when code\n                  running within a Security Manager, such as an applet,\n                  attempts to set up a logging stream through the\n                  <code>DriverManager</code>\n\t <LI><code>Driver</code> interface -- provides the API for registering\n             and connecting drivers based on JDBC technology (\"JDBC drivers\"); \n             generally used only by the <code>DriverManager</code> class\n\t <LI><code>DriverPropertyInfo</code> class -- provides properties for a\n             JDBC driver; not used by the general user\n  </UL>\n  <LI>Sending SQL statements to a database\n  <UL>\n\t <LI><code>Statement</code> --  used to send basic SQL statements\n\t <LI><code>PreparedStatement</code> --  used to send prepared statements or \n              basic SQL statements (derived from <code>Statement</code>)\n\t <LI><code>CallableStatement</code> --  used to call database stored \n              procedures (derived from <code>PreparedStatement</code>)\n\t <LI><code>Connection</code> interface --  provides methods for creating\n             statements and managing connections and their properties\n\t <LI><code>Savepoint</code> --  provides savepoints in a transaction\n\n  </UL>\n  <LI>Retrieving and updating the results of a query\n  <UL>\n\t <LI><code>ResultSet</code> interface\n  </UL>\n  <LI>Standard mappings for SQL types to classes and interfaces in the \n      Java programming language\n  <UL>\n\t <LI><code>Array</code> interface -- mapping for SQL <code>ARRAY</code> \n\t <LI><code>Blob</code> interface -- mapping for SQL <code>BLOB</code> \n\t <LI><code>Clob</code> interface -- mapping for SQL <code>CLOB</code>\n\t <LI><code>Date</code> class -- mapping for SQL <code>DATE</code> \n\t  <LI><code>NClob</code> interface -- mapping for SQL <code>NCLOB</code>\n\t <LI><code>Ref</code> interface -- mapping for SQL <code>REF</code> \n\t  <LI><code>RowId</code> interface -- mapping for SQL <code>ROWID</code>\n\t <LI><code>Struct</code> interface -- mapping for SQL <code>STRUCT</code> \n\t  <LI><code>SQLXML</code> interface -- mapping for SQL <code>XML</code>\n\t <LI><code>Time</code> class -- mapping for SQL <code>TIME</code> \n\t <LI><code>Timestamp</code> class -- mapping for SQL <code>TIMESTAMP</code> \n\t <LI><code>Types</code> class -- provides constants for SQL types\n  </UL>\n  <LI>Custom mapping an SQL user-defined type (UDT) to a class in the\n\t  Java programming language\n  <UL>\n\t <LI><code>SQLData</code> interface -- specifies the mapping of\n              a UDT to an instance of this class\n\t <LI><code>SQLInput</code> interface -- provides methods for reading\n              UDT attributes from a stream\n\t <LI><code>SQLOutput</code> interface -- provides methods for writing\n              UDT attributes back to a stream\n  </UL>\n  <LI>Metadata\n  <UL>\n\t <LI><code>DatabaseMetaData</code> interface -- provides information\n              about the database\n\t <LI><code>ResultSetMetaData</code> interface -- provides information\n              about the columns of a <code>ResultSet</code> object\n\t <LI><code>ParameterMetaData</code> interface -- provides information\n              about the parameters to <code>PreparedStatement</code> commands\n  </UL>\n  <LI>Exceptions\n\t<UL>\n\t  <LI><code>SQLException</code> -- thrown by most methods when there\n\t\t is a problem accessing data and by some methods for other reasons\n\t  <LI><code>SQLWarning</code> -- thrown to indicate a warning\n\t  <LI><code>DataTruncation</code> -- thrown to indicate that data may have\n     \t  been truncated\n\t  <LI><code>BatchUpdateException</code> -- thrown to indicate that not all\n\t\t commands in a batch update executed successfully\n\t</UL>\n</UL>\n<P>\n<h3><code>java.sql</code> and <code>javax.sql</code> Features Introduced in the JDBC 4.0 API</h3>\n<UL>\n  <LI>auto java.sql.Driver discovery -- no longer need to load a \n<code>java.sql.Driver</code> class via <code>Class.forName</code>\n <LI>National Character Set support added\n <li>Support added for the SQL:2003 XML data type\n <lI>SQLException enhancements -- Added support for cause chaining; New SQLExceptions\n added for common SQLState class value codes\n <li>Enhanced Blob/Clob functionality -- Support provided to create and free a Blob/Clob instance\n as well as additional methods added to improve accessiblity\n <li>Support added for accessing a SQL ROWID\n <li>Support added to allow a JDBC application to access an instance of a JDBC resource\n that has been wrapped by a vendor, usually in an application server or connection \n pooling environment.\n <li>Availability to be notfied when a <code>PreparedStatement</code> that is associated\n with a <code>PooledConnection</code> has been closed or the driver determines is invalid\n \n \n</UL>\n<P>\n<P>\n<h3><code>java.sql</code> and <code>javax.sql</code> Features Introduced in the JDBC 3.0 API</h3>\n<UL>\n  <LI>Pooled statements -- reuse of statements associated with a pooled \n       connection\n  <LI>Savepoints -- allow a transaction to be rolled back to a designated\n      savepoint\n  <LI>Properties defined for <code>ConnectionPoolDataSource</code> -- specify\n      how connections are to be pooled\n  <LI>Metadata for parameters of a <code>PreparedStatement</code> object\n  <LI>Ability to retrieve values from automatically generated columns\n  <LI>Ability to have multiple <code>ResultSet</code> objects \n       returned from <code>CallableStatement</code> objects open at the\n      same time\n  <LI>Ability to identify parameters to <code>CallableStatement</code>\n      objects by name as well as by index\n  <LI><code>ResultSet</code> holdability -- ability to specify whether cursors\n      should be held open or closed at the end of a transaction\n  <LI>Ability to retrieve and update the SQL structured type instance that a\n      <code>Ref</code> object references\n  <LI>Ability to programmatically update <code>BLOB</code>,\n      <code>CLOB</code>, <code>ARRAY</code>, and <code>REF</code> values.\n  <LI>Addition of the <code>java.sql.Types.DATALINK</code> data type -- \n      allows JDBC drivers access to objects stored outside a data source\n  <LI>Addition of metadata for retrieving SQL type hierarchies\n</UL>\n<P>\n<h3><code>java.sql</code> Features Introduced in the JDBC 2.1 Core API</h3>\n<UL>\n  <LI>Scrollable result sets--using new methods in the <code>ResultSet</code>\n\t  interface that allow the cursor to be moved to a particular row or to a\n\t  position relative to its current position\n  <LI>Batch updates\n  <LI>Programmatic updates--using <code>ResultSet</code> updater methods\n  <LI>New data types--interfaces mapping the SQL3 data types\n  <LI>Custom mapping of user-defined types (UDTs)\n  <LI>Miscellaneous features, including performance hints, the use of character\n\t  streams, full precision for <code>java.math.BigDecimal</code> values,\n\t  additional security, and\n\t  support for time zones in date, time, and timestamp values. \n</UL>\n<P>\n<h3><code>javax.sql</code> Features Introduced in the JDBC 2.0 Optional\nPackage API</h3>\n<UL>\n  <LI>The <code>DataSource</code> interface as a means of making a connection.  The\n      Java Naming and Directory Interface<sup><font size=-2>TM</font></sup>\n      (JNDI) is used for registering a <code>DataSource</code> object with a \n      naming service and also for  retrieving it.\n  <LI>Pooled connections -- allowing connections to be used and reused\n  <LI>Distributed transactions -- allowing a transaction to span diverse\n      DBMS servers\n  <LI><code>RowSet</code> technology -- providing a convenient means of\n       handling and passing data\n</UL>\n<P>\n<P>\n<h3>Custom Mapping of UDTs</h3>\nA user-defined type (UDT) defined in SQL can be mapped to a class in the Java\nprogramming language. An SQL structured type or an SQL <code>DISTINCT</code>\ntype are the UDTs that may be custom mapped.  The following three\nsteps set up a custom mapping:\n<ol>\n  <li>Defining the SQL structured type or <code>DISTINCT</code> type in SQL\n  <li>Defining the class in the Java programming language to which the\n\t  SQL UDT will be mapped.  This class must implement the\n\t  <code>SQLData</code> interface.\n  <li>Making an entry in a <code>Connection</code> object\'s type map\n      that contains two things:\n   <ul>\n       <li>the fully-qualified SQL name of the UDT\n       <li>the <code>Class</code> object for the class that implements the \n           <code>SQLData</code> interface\n   </ul>\n</ol>\n<p>\nWhen these are in place for a UDT, calling the methods\n<code>ResultSet.getObject</code> or <code>CallableStatement.getObject</code> \non that UDT will automatically retrieve the custom mapping for it. Also, the\n<code>PreparedStatement.setObject</code> method will automatically map the\nobject back to its SQL type to store it in the data source.\n\n<h2>Package Specification</h2>\n\n<ul>\n  <li><a href=\"http://java.sun.com/products/jdbc/download.html\">Specification \n      of the JDBC 4.0 API</a>\n</ul>\n\n<h2>Related Documentation</h2>\n\n<ul>\n  <li><a href=\"../../../technotes/guides/jdbc/getstart/GettingStartedTOC.fm.html\">Getting Started</a>--overviews of the major interfaces\n<P>\n  <li><a href=\"http://java.sun.com/docs/books/tutorial/jdbc\">Chapters on the JDBC \n     API</a>--from the online version of <i>The Java Tutorial Continued</i>\n<P>\n  <li><a href=\"http://java.sun.com/docs/books/jdbc\">\n<i>JDBC<sup><font size=-2>TM</font></sup>API Tutorial and Reference, \nThird Edition</i></a>--\na complete reference and tutorial for the JDBC 3.0 API\n</ul>\n<P>\n@since 1.1\n',directive
'Typically, the selection is reduced to its extreme offsets.\n \n',directive
'</p>\n',non-directive
'@return the cause or <code>null</code>\n ',directive
'The node will\n not have an image.\n \n',directive
'One example usage is a system communicating to a legacy datasource that must convert codes\nfrom the new format to the old format and vice versa.\n',directive
'The stored representation has the form FontData;FontData;\n Only includes the non-null entries.\n \n',directive
' Return the transparent pixel for the receiver.\n ',non-directive
' Default control creator.\n',non-directive
'@param order the traversal order, one of \n\t<code>PRE_ORDER</code> and <code>POST_ORDER</code>\n ',directive
'Calling {',directive
'</p>\n\n ',non-directive
'@return the preference store, or <code>null</code> if none\n ',directive
'<p>\n This framework method is declared public so that it is\n possible to request an image descriptor\'s image data without\n creating an SWT image object.\n ',directive
'<p>\n Note that the current value of the preference is affected if\n the preference\'s current value was its old default value, in which\n case it changes to the new default value. ',directive
' Create a new Closure that calls one of the closures depending \n on the predicates. \n ',directive
'<li>ReferenceMap - allows the garbage collector to collect keys and values using equals() for comparison\n',non-directive
'@param start the first line of the new range, must be &gt;= 0\n ',directive
'<p>\n This method is called by the container.\n ',directive
' Create the details button if it should be included.\n \n',non-directive
' Returns whether the dialog should be opened before the operation is run.\n Defaults to <code>true</code>\n \n @return <code>true</code> to open the dialog before run,\n         <code>false</code> to only create the dialog, but not open it\n @since 3.0\n',directive
'The <code>run</code> method is usually not invoked directly, but rather by\n passing the <code>IRunnableWithProgress</code> to the <code>run</code> method of\n an <code>IRunnableContext</code>, which provides the UI for the progress monitor\n and Cancel button.\n\n ',directive
'After the Java Virtual Machine (JVM) has initialized, each <code>premain</code> method \nwill be called in the order the agents were specified, then the real application\n<code>main</code> method will be called. \n',directive
'This allows callers to start with the generated values and tweak one or two settings\n before applying the GridData to the control.\n ',non-directive
'-->\n\n',non-directive
' Converts the given value into an SWT RGB color value.\n This method fails if the value does not represent an RGB\n color value.\n <p>\n A valid RGB color value representation is a string of the form\n <code><it>red</it>,<it>green</it></code>,<it>blue</it></code> where\n <code><it>red</it></code>, <it>green</it></code>, and \n <code><it>blue</it></code> are valid ints.\n </p>\n\n @param value the value to be converted\n @return the value as an RGB color value\n @exception DataFormatException if the given value does not represent\n\tan RGB color value\n',non-directive
'This parameter has no effect if\n            <code>showDialogMenu</code> is <code>false</code>.\n ',directive
'\n<p>Provides support for formatting key sequences.</p>\n\n<h2>Package Specification</h2>\n<p>\nThis is a collection fo various formatters for key sequences.  The formatters\nare accessible through the <code>KeyFormatterFactory</code>.  To change how\nkeys are formatted in the user interface, call\n<code>KeyFormatterFactory.setDefault(IKeyFormatter)</code>.  They provided\nformatters are:\n</p>\n<dl>\n<dt>FormalKeyFormatter</dt>\n<dd>Provides a formal grammar for reading and writing key sequences.</dd>\n<dt>NativeKeyFormatter</dt>\n<dd>Provide a native-looking, human-readable format for keys.</dd>\n<dt>CompactKeyFormatter</dt>\n<dd>A variation of the native formatter that provides a more compact representation.</dd>\n<dt>EmacsKeyFormatter</dt>\n<dd>An Xemacs-style formatter (e.g., C^x C^x).</dd>\n</dl>\n',directive
'</p>\n\n ',non-directive
' Create a new Closure that calls two Closures, passing the result of\n the first into the second.\n \n',directive
'@return the image for this dialog page, or <code>null</code>\n  if none\n',directive
' A value that can be used for stored dialog width or height that\n indicates that the default bounds should be used.\n \n',non-directive
' The IDialogBlockedHandler is the handler used by\n JFace to provide extra information when a\n blocking has occured. ',directive
?,non-directive
'If the control is <code>null</code> nothing\n            happens.\n',directive
'<li><a href=\"ftp://ftp.uu.net/pub/archiving/zip/doc/appnote-970311-iz.zip\">\n      Info-ZIP Application Note 970311\n      </a> - a detailed description of the Info-ZIP format upon which\n      the <code>java.util.zip</code> classes are based.\n',directive
' The <code>PreferencePage</code> implementation of this \n <code>IPreferencePage</code> method returns <code>true</code>\n if the page is valid.\n ',non-directive
'Preference\n pages are considered valid by default; call <code>setValid(false)</code>\n to make a page invalid.\n ',directive
'@param page - the preference page to be shown\n ',non-directive
'This interface allows the querying of details\n associated with the maximum number of elements.\n\n ',non-directive
'If a menu action will be provided that allows the user to\n            control this feature and the user hasn\'t changed that setting,\n            then this flag is used as initial default for the menu.\n ',directive
' Returns the width in chars required to display information.\n\n @return the width in chars required to display information\n @since 3.3\n',directive
'An agent JAR file must conform to the JAR file specification.\n\n',directive
'<p>\n This hook is <em>not</em> called when the scale is initialized (or\n reset to the default value) from the preference store.\n ',directive
'<p>\n Example usage:\n <pre>\n\t\tRadioGroupFieldEditor editor= new RadioGroupFieldEditor(\n\t\t\t\"GeneralPage.DoubleClick\", resName, 1,\n\t\t\tnew String[][] {\n\t\t\t\t{\"Open Browser\", \"open\"},\n\t\t\t\t{\"Expand Tree\", \"expand\"}\n\t\t\t},\n          parent,\n          true);\t\n </pre>\n </p>\n \n ',non-directive
'The new node has no\n subnodes.\n \n',directive
'<p>\n The default implementation of this framework method calls\n <code>performHelp</code> on the currently active page.\n ',directive
'Returns the given default value if the \n value does not represent a point.\n\n ',non-directive
'That is, the class containing the <code>premain</code> method.\n                        ',non-directive
'<li>Predicated - ensures that only elements that are valid according to a predicate can be added\n',directive
'@link\njava.util.concurrent.locks.AbstractQueuedLongSynchronizer} class\nprovides the same functionality but extends support to 64 bits of\nsynchronization state. ',directive
'@see org.apache.commons.collections.functors.ExceptionTransformer\n \n ',non-directive
' <p>\n This method is intended for situations where generateLayout is generating layout data\n for a particular control that is not quite right for the desired layout.\n ',directive
' Returns JFace\'s viewer font. ',non-directive
'<p>\nA <tt>ContentProposalAdapter</tt> can be attached to an arbitrary control to provide \na popup showing content proposals.  ',non-directive
'The following values may be used:\n <ul>\n   ',directive
' Gets an iterator that iterates through a collections of {@link Iterator}s\n one after another.\n\n @param iterators  the iterators to use, not null or empty or contain nulls\n @return a combination iterator over the iterators\n @throws NullPointerException if iterators collection is null or contains a null\n @throws ClassCastException if the iterators collection contains the wrong object type\n',directive
'This is implemented by removing the named value from the store, \n thereby exposing the default value.\n ',directive
'@throws LineIndexOutOfBoundsException if <code>remaining</code>&gt;= {',directive
'@param page the page to show\n ',non-directive
?,non-directive
'@return a new RowLayoutFactory instance that creates copies of the given\n         layout\n',non-directive
'\n<p>\nThis package contains implementations of the\n{@link org.apache.commons.collections.BidiMap BidiMap},\n{@link org.apache.commons.collections.OrderedBidiMap OrderedBidiMap} and \n{@link org.apache.commons.collections.SortedBidiMap SortedBidiMap} interfaces.\nA BidiMap is an extension to Map that allows keys and values to be looked up with equal ease.\nOne example usage is a system communicating to a legacy datasource that must convert codes\nfrom the new format to the old format and vice versa.\n<p>\nThe following implementations are provided in the package:\n<ul>\n<li>DualHashBidiMap - uses two HashMaps to implement BidiMap\n<li>DualTreeBidiMap - uses two TreeMaps to implement SortedBidiMap\n<li>TreeBidiMap - red-black tree implementation of OrderedBidiMap\n</ul>\n<p>\nThe following decorators are provided in the package:\n<ul>\n<li>Unmodifiable - ensures the map cannot be altered\n<!--\n<li>Synchronized - synchronizes method access for multi-threaded environments\n<li>Predicated - ensures that only elements that are valid according to a predicate can be added\n<li>Typed - ensures that only elements that are of a specific type can be added\n<li>Transformed - transforms each element added\n<li>FixedSize - ensures that the size of the map cannot change\n<li>Lazy - creates objects in the map on demand\n<li>ListOrdered - ensures that insertion order is retained-->\n</ul>\n</pre>\n',directive
' Returns the font registry for JFace itself. If the value has not been\n established by an earlier call to <code>setFontRegistry</code>, is it\n initialized to\n <code>new FontRegistry(\"org.eclipse.jface.resource.jfacefonts\")</code>.\n <p>\n Note that several static convenience methods are also provided on this\n class for directly accessing JFace\'s standard fonts.\n </p>\n \n @return the JFace font registry\n',directive
' Makes the given shell resizable on all platforms. The shell must have a {@link GridLayout}.\n If the shell is not resizable, this method enlarges the {@link GridLayout#marginWidth\n marginWidth} and {@link GridLayout#marginHeight marginHeight} and expects that the added area\n is not being shrunken or used in any way by other parties.\n \n @param shell the shell\n',directive
' Notifies that the container of this preference page has been canceled.\n \n',non-directive
'To wait \"forever\", you can use\na value of <tt>Long.MAX_VALUE</tt>.\n\n',non-directive
' Set the message text. If the message line currently displays an error,\n the message is stored and will be shown after a call to clearErrorMessage\n <p>\n Shortcut for <code>setMessage(newMessage, NONE)</code>\n </p>\n \n @param newMessage\n            the message, or <code>null</code> to clear the message\n',directive
'<li>Switch - calls one transformer based on one or more predicates\n ',directive
'@link #getControl()} as argument.\n\n ',directive
' Returns JFace\'s text font. Convenience method equivalent to\n \n <pre>\n JFaceResources.getFontRegistry().get(JFaceResources.TEXT_FONT)\n </pre>\n \n @return the font\n',non-directive
'  Looks up the given key in the given map, converting the result into\n  a string, using the default value if the the conversion fails.\n\n  @param map  the map whose value to look up\n  @param key  the key of the value to look up in that map\n  @param defaultValue  what to return if the value is null or if the\n     conversion fails\n  @return  the value in the map as a string, or defaultValue if the\n    original value is null, the map is null or the string conversion\n    fails\n',non-directive
'@return this\n',non-directive
?,non-directive
' Image registry key for error message image.\n',directive
'The enable state of the container buttons and the\n apply button is updated when a page\'s valid state \n changes.\n ',directive
'To be precise, this method picks the default values that GridLayoutFactory.generateLayout\n would have assigned to the control. ',directive
' Create a new Transformer that calls each transformer in turn, passing the \n result into the next transformer. The ordering is that of the iterator()\n method on the collection.\n \n @see org.apache.commons.collections.functors.ChainedTransformer\n \n @param transformers  a collection of transformers to chain\n @return the transformer\n @throws IllegalArgumentException if the transformers collection is null\n @throws IllegalArgumentException if any transformer in the collection is null\n',directive
'<li>numColumns(1)</li>\n ',non-directive
'@param resourceBundle  the resource bundle to convert, may not be null\n ',directive
' Update the image being displayed on the button using the current color\n setting.\n',non-directive
'Equivalent to <code>String.valueOf(value)</code>.\n\n ',directive
'@link Table}</b>\n </p>\n \n ',directive
'Does not\n create the rowData of any of the controls in the composite.\n \n',directive
'@since Commons Collections 3.2\n',non-directive
' Create a new Closure that calls each closure in turn, passing the \n result into the next closure.\n \n @see org.apache.commons.collections.functors.ChainedClosure\n \n @param closures  an array of closures to chain\n @return the <code>chained</code> closure\n @throws IllegalArgumentException if the closures array is null\n @throws IllegalArgumentException if any closure in the array is null\n',directive
' Opens an error dialog to display the given error. Use this method if the\n error object being displayed contains child items <it>and </it> you wish\n to specify a mask which will be used to filter the displaying of these\n children. The error dialog will only be displayed if there is at least\n one child status matching the mask.\n \n @param parentShell\n            the parent shell of the dialog, or <code>null</code> if none\n @param title\n            the title to use for this dialog, or <code>null</code> to\n            indicate that the default title should be used\n @param message\n            the message to show in this dialog, or <code>null</code> to\n            indicate that the error\'s message should be shown as the\n            primary message\n @param status\n            the error to show to the user\n @param displayMask\n            the mask to use to filter the displaying of child items, as\n            per <code>IStatus.matches</code>\n @return the code of the button that was pressed that resulted in this\n         dialog closing. This will be <code>Dialog.OK</code> if the OK\n         button was pressed, or <code>Dialog.CANCEL</code> if this\n         dialog\'s close window decoration or the ESC key was used.\n @see org.eclipse.core.runtime.IStatus#matches(int)\n',directive
'@link StringButtonFieldEditor#VALIDATE_ON_FOCUS_LOST}\n  (the default) to perform validation only after the text has been typed in\n ',directive
'@return the extent, or <code>(-1, -1)</code> extent is not known\n',directive
' Create a default instance of the blocked handler which does not do\n anything.\n',non-directive
'This\n can affect whether or not the dialog will display additional help\n mechanisms such as a help control in the button bar.\n \n',directive
'@param value the long value\n ',non-directive
'An ExecutorService manages\nqueuing and scheduling of tasks, and allows controlled shutdown.  ',non-directive
'Convert the value of the given key in this dialog\n settings to a double and return it.\n \n',non-directive
'Returns the default-default value (the empty string <code>\"\"</code>)\n if there is no preference with the given name, or if the current value \n cannot be treated as a string.\n\n ',directive
'<LI><code>CallableStatement</code> --  used to call database stored \n              procedures (derived from <code>PreparedStatement</code>)\n\t ',directive
' @param imageData The imageData to set.\n @since 3.3\n',non-directive
' Adjusts the enable state of the Back, Next, and Finish \n buttons to reflect the state of the currently active \n page in this container.\n <p>\n This method is called by the container itself\n when its wizard page changes and may be called\n by the page at other times to force a button state\n update.\n </p>\n',directive
'@param iterator1  the first iterators to use, not null\n ',non-directive
'<li>hint(SWT.DEFAULT, SWT.DEFAULT)</li>\n ',non-directive
'@deprecated use\n             org.eclipse.swt.widgets.Display.getSystemImage(SWT.ICON_ERROR)\n',directive
'@link\njava.util.concurrent.ArrayBlockingQueue}, {',directive
' Button id for an \"Ignore\" button (value 9).\n',non-directive
'it gets disposed when the adapted {',directive
' Constant for a regular message (value 0).\n <p>\n Typically this indicates that the message should be shown without an\n icon.\n </p>\n',directive
'@param defaultValue  what to return if the value is null or if the\n     conversion fails\n  ',non-directive
'@link Iterator}s\n one after another.\n\n ',directive
' Update the tree to use the specified <code>Font</code>.\n \n @param dialogFont\n            the <code>Font</code> to use.\n @since 3.0\n',non-directive
' Gets an array based on an iterator.\n ',non-directive
'<h2>Package Specification</h2>\n\nA <em>reference object</em> encapsulates a reference to some other object so\nthat the reference itself may be examined and manipulated like any other\nobject.  ',directive
'@param node the wizard node, or <code>null</code> to clear\n',directive
' Creates a local registry that delegates to the given global registry\n for all resource allocation and deallocation. \n \n',non-directive
'@link java.lang.management.ManagementFactory ManagementFactory} class.\n\n',non-directive
'</p>\n \n ',non-directive
'</pre>\n',non-directive
' Button id for a \"No\" button (value 3).\n',non-directive
'The framework permits much greater flexibility in the use of\nlocks and conditions, at the expense of more awkward syntax.\n\n',directive
'Use this listener to perform long-running work that should only be\n executed once, when the page is in the process of changing, rather then\n during validation of page controls.\n \n',directive
?,non-directive
'@param shouldExclude true iff the control should be excluded from layouts\n ',non-directive
' Lightweight descriptor for a font. Creates the described font on demand.\n Subclasses can implement different ways of describing a font. These objects\n will be compared, so hashCode(...) and equals(...) must return something \n meaningful.\n \n @since 3.1\n',directive
' Returns whether this wizard needs a progress monitor.\n <p>\n The result of this method is typically used by the container.\n </p>\n\n @return <code>true</code> if a progress monitor is required,\n   and <code>false</code> if none is needed\n',directive
'Note that thes margins will be added to the ones specified by\n {',directive
'\n<p>\nThis package contains implementations of the\n{@link org.apache.commons.collections.Bag Bag} and \n{@link org.apache.commons.collections.SortedBag SortedBag} interfaces.\nA bag stores an object and a count of the number of occurences of the object.\n<p>\nThe following implementations are provided in the package:\n<ul>\n<li>HashBag - implementation that uses a HashMap to store the data\n<li>TreeBag - implementation that uses a TreeMap to store the data\n</ul>\n<p>\nThe following decorators are provided in the package:\n<ul>\n<li>Synchronized - synchronizes method access for multi-threaded environments\n<li>Unmodifiable - ensures the bag cannot be altered\n<li>Predicated - ensures that only elements that are valid according to a predicate can be added\n<li>Typed - ensures that only elements that are of a specific type can be added\n<li>Transformed - transforms each element added to the bag\n</ul>\n</pre>\n',directive
'The value of this attribute is the name of the <i>agent class</i>. ',non-directive
'@param key  the key to look up\n ',non-directive
'@since 3.4\n',non-directive
' Loads this preference store from the file established in the constructor\n <code>PreferenceStore(java.lang.String)</code> (or by\n <code>setFileName</code>). ',non-directive
?,non-directive
' Implements a sticky hover control, i.e. a control that replaces a hover\n with an enriched and focusable control.\n <p>\n The information control is made visible on request by calling\n {@link #showInformationControl(Rectangle)}.\n </p>\n <p>\n Clients usually instantiate and configure this class before using it. The configuration\n must be consistent: This means the used {@link org.eclipse.jface.text.IInformationControlCreator}\n must create an information control expecting information in the same format the configured\n {@link org.eclipse.jface.text.information.IInformationProvider}s use to encode the information they provide.\n </p>\n\n @since 3.4\n',directive
' Convenience API. Convert the value of the given key in this dialog\n settings to a float and return it.\n \n @param key\n            the key\n @return the value coverted to float, or throws\n         <code>NumberFormatException</code> if none\n \n @exception NumberFormatException\n                if the string value does not contain a parsable number.\n @see java.lang.Float#valueOf(java.lang.String)\n',non-directive
'@return settings the dialog settings used to store the dialog\'s location\n         and/or size, or <code>null</code> if the dialog\'s bounds should\n         never be stored.\n \n',directive
' Runs this operation.  Progress should be reported to the given progress monitor.\n This method is usually invoked by an <code>IRunnableContext</code>\'s <code>run</code> method,\n which supplies the progress monitor.\n A request to cancel the operation should be honored and acknowledged \n by throwing <code>InterruptedException</code>.\n\n @param monitor the progress monitor to use to display progress and receive\n   requests for cancelation\n @exception InvocationTargetException if the run method must propagate a checked exception,\n \tit should wrap it inside an <code>InvocationTargetException</code>; runtime exceptions are automatically\n  wrapped in an <code>InvocationTargetException</code> by the calling context\n @exception InterruptedException if the operation detects a request to cancel, \n  using <code>IProgressMonitor.isCanceled()</code>, it should exit by throwing \n  <code>InterruptedException</code>\n\n @see IRunnableContext#run\n',directive
' Return the Add button.  \n \n',non-directive
' Creates a copy of the receiver.\n \n',non-directive
'@return The button labels to used; never <code>null</code>.\n',directive
' Create a new Closure that calls one of two closures depending \n on the specified predicate.\n \n @see org.apache.commons.collections.functors.IfClosure\n \n @param predicate  the predicate to switch on\n @param trueClosure  the closure called if the predicate is true\n @param falseClosure  the closure called if the predicate is false\n @return the <code>switch</code> closure\n @throws IllegalArgumentException if the predicate is null\n @throws IllegalArgumentException if either closure is null\n',directive
'@return <code>false</code> to abort page flipping and the\n  have the current page remain visible, and <code>true</code>\n  to allow the page flip\n',non-directive
' Create the dialog area and the button bar for the receiver.\n \n',non-directive
' Converts the line-based information of {',non-directive
?,non-directive
'Returns the given default value if the \n value does not represent a rectangle.\n\n ',non-directive
'-->\n\n',non-directive
' Returns the descriptor associated with the given key in this registry, \n or <code>null</code> if none.\n\n ',directive
'@see IProgressMonitor#isCanceled()\n',non-directive
?,non-directive
'<LI>Ability to identify parameters to <code>CallableStatement</code>\n      objects by name as well as by index\n  ',directive
'@param <V> the type of the values in the map\n ',non-directive
' Returns the text covered by <code>selection</code>\n \n @param selection the selection\n @return the text covered by <code>selection</code>\n @throws BadLocationException if computing the edit failed\n',non-directive
' Sets the default value for the double-valued preference with the\n given name. \n <p>\n Note that the current value of the preference is affected if\n the preference\'s current value was its old default value, in which\n case it changes to the new default value. If the preference\'s current\n is different from its old default value, its current value is\n unaffected. No property change events are reported by changing default\n values.\n </p>\n\n @param name the name of the preference\n @param value the new default value for the preference\n',directive
'Returns the default-default value (<code>RECTANGLE_DEFAULT_DEFAULT</code>) \n if there is no preference with the given name, or if the current value \n cannot be treated as a rectangle.\n\n ',directive
'@param hint size (pixels) to be used instead of the control\'s preferred size. ',non-directive
' Returns the current information control replacer or <code>null</code> if none has been installed.\n\n ',directive
'In \n         the JFace provided dialogs this will be an instance of \n         <code>IDialogPage</code>. \n',directive
' Returns the resource bundle for JFace itself. The resouble bundle is\n obtained from\n <code>ResourceBundle.getBundle(\"org.eclipse.jface.jface_nls\")</code>.\n <p>\n Note that several static convenience methods are also provided on this\n class for directly accessing resources in this bundle.\n </p>\n \n @return the resource bundle\n',directive
'@param newMessage\n            the message, or <code>null</code> to clear the error message\n',directive
'@param map  the map to decorate\n ',non-directive
?,non-directive
'@link Layout} to a container whose <i>only</i> child\n is the {',directive
'@return this\n',non-directive
'<li>Clone - returns a clone of the input object\n ',non-directive
?,non-directive
'Each predicate is evaluated\n until one returns true.\n \n',non-directive
' Installs this presenter for the given context information.\n\n @param info the context information which this presenter should style\n @param contentAssistSubjectControl the content assist subject control\n @param offset the document offset for which the information has been computed\n',directive
'Five\nimplementations in java.util.concurrent support the extended {',directive
'@param map  the map to use\n ',non-directive
'@return the dialog settings, or <code>null</code> if none\n',directive
'@param parent\n            the parent shell of the dialog, or <code>null</code> if none\n ',directive
'It collaborates with content type specific presentation damagers\n(<tt>IPresentationDamager</tt>) which for a given document change determine\nthe region of the presentation which must be rebuild, and content type\nspecific presentation repairers (<tt>IPresentationRepairer</tt>) which\nconstruct for a given damage region the document presentation. ',directive
' Crops the given bounds such that they lie completely on the closest monitor.\n\n @param bounds shell bounds to crop\n',non-directive
' Disposes the wizard managed by this node. Does nothing\n if the wizard has not been created.\n <p>\n This is the last message that should ever be sent to this node.\n </p>\n',directive
'@since 3.0\n',non-directive
' Style constant (value <code>1</code>) indicating a layout where the field\n editor\'s label appears on the left with a check box on the right.\n',non-directive
'@param image\n            the image for this dialog page, or <code>null</code> if none\n',directive
' Returns <code>true</code> if the text covered by <code>selection</code> does not contain any\n characters. Note the difference to {@link ITextSelection#isEmpty()}, which returns\n <code>true</code> only for invalid selections.\n \n @param selection the selection\n @return <code>true</code> if <code>selection</code> does not contain any text,\n         <code>false</code> otherwise\n @throws BadLocationException if accessing the document failed\n',directive
' Splits a range off the end of the receiver. The receiver is shortened to only include\n <code>remaining</code> lines after the split.\n\n @param remaining the number of lines to remain in the receiver, must be in [1, {@link #length() length})\n @return the split off range\n @throws LineIndexOutOfBoundsException if <code>remaining</code>&gt;= {@link #length()} or <code>remaining</code>&ltt;= 0\n',directive
?,non-directive
'@param labelText the label text of the field editor\n ',non-directive
' The Help button has been pressed.\n',non-directive
'<p>\n The default implementation of this <code>IPreferencePage</code>\n method returns the size set by <code>setSize</code>; if no size\n has been set, but the page has a UI control, the framework\n method <code>doComputeSize</code> is called to compute the size.\n ',directive
'If this value is <code>null</code>,\n            then no preference will be modified.\n',directive
'@param selectedPage\n            the selected page. ',non-directive
' Returns the selection provider.\n\n @return the selection provider\n',non-directive
?,non-directive
'@param map to wrap if necessary.\n ',directive
'@return the background Color for widgets that display errors.\n ',non-directive
'Don\'t assign the layout directly the {',directive
'\n<p>\nThis package contains implementations of the \n{@link java.util.Map Map},\n{@link org.apache.commons.collections.IterableMap IterableMap},\n{@link org.apache.commons.collections.OrderedMap OrderedMap} and\n{@link java.util.SortedMap SortedMap} interfaces.\nA Map provides a lookup from a key to a value.\nA number of implementations also support the new MapIterator interface that enables\nsimple iteration of map keys and values.\n<p>\nThe following implementations are provided:\n<ul>\n<li>CaseInsensitiveMap - map that compares keys in a case insensitive way\n<li>CompositeMap - map that combines multiple maps into a single view\n<li>HashedMap - general purpose HashMap replacement supporting MapIterator\n<li>IdentityMap - map that uses == for comparison instead of equals()\n<li>Flat3Map - designed for good performance at size 3 or less\n<li>LinkedMap - a hash map that maintains insertion order, supporting OrderedMapIterator\n<li>MultiKeyMap - map that provides special methods for using more than one key to access the value\n<li>ReferenceMap - allows the garbage collector to collect keys and values using equals() for comparison\n<li>ReferenceIdentityMap - allows the garbage collector to collect keys and values using == for comparison\n<li>SingletonMap - a fully featured map to hold one key-value pair\n<li>StaticBucketMap - internally synchronized and designed for thread-contentious environments\n</ul>\n<p>\nThe following decorators are provided:\n<ul>\n<li>Unmodifiable - ensures the collection cannot be altered\n<li>Predicated - ensures that only elements that are valid according to a predicate can be added\n<li>Typed - ensures that only elements that are of a specific type can be added\n<li>Transformed - transforms each element added\n<li>FixedSize - ensures that the size of the map cannot change\n<li>Lazy - creates objects in the map on demand\n<li>ListOrdered - ensures that insertion order is retained\n</ul>\n</pre>\n',directive
'@param blockingStatus The status that describes the blockage\n ',non-directive
' Create a new Closure that calls one of the closures depending \n on the predicates.\n <p>\n The closure at array location 0 is called if the predicate at array\n location 0 returned true. Each predicate is evaluated\n until one returns true. If no predicates evaluate to true, the default\n closure is called.\n \n @see org.apache.commons.collections.functors.SwitchClosure\n \n @param predicates  an array of predicates to check, not null\n @param closures  an array of closures to call, not null\n @param defaultClosure  the default to call if no predicate matches\n @return the <code>switch</code> closure\n @throws IllegalArgumentException if the either array is null\n @throws IllegalArgumentException if any element in the arrays is null\n @throws IllegalArgumentException if the arrays are different sizes\n',directive
' <p>Returns a new FontDescriptor that is equivalent to the reciever, but\n has the given height.</p>\n \n <p>Does not modify the reciever.</p>\n \n ',directive
' A ErrorSupportProvider defines the area to be shown in an error dialog for extra support information.\n @since 3.3\n\n',directive
'<p> Each reference-object type is implemented by a subclass of the abstract\nbase <code>{',directive
' Sets the default value for the long-valued preference with the\n given name. \n <p>\n Note that the current value of the preference is affected if\n the preference\'s current value was its old default value, in which\n case it changes to the new default value. If the preference\'s current\n is different from its old default value, its current value is\n unaffected. No property change events are reported by changing default\n values.\n </p>\n\n @param name the name of the preference\n @param value the new default value for the preference\n',directive
'<li><code>MessageDialog.QUESTION </code> for a dialog with a\n            question image</li>\n            ',directive
'<p>\n The <code>WizardDialog</code> implementation of this framework method\n prevents the parent composite\'s columns from being made equal width in\n order to remove the margin between the Back and Next buttons.\n ',directive
' Enable the title and disable the message text and image.\n',non-directive
' Create a new Transformer that calls each transformer in turn, passing the \n result into the next transformer. ',directive
' Creates a new HashMap using data copied from a ResourceBundle.\n\n @param resourceBundle  the resource bundle to convert, may not be null\n @return the hashmap containing the data\n @throws NullPointerException if the bundle is null\n',directive
'@return a FontDescriptor that describes the given font\n',non-directive
'@param parent\n            the parent shell of the dialog, or <code>null</code> if none\n ',directive
'Short equivalent of {',non-directive
'This attribute is optional, the default is <code>false</code>.\n',non-directive
' Gets a byte from a Map in a null-safe manner.\n <p>\n The byte is obtained from the results of {@link #getNumber(Map,Object)}.\n\n @param map  the map to use\n @param key  the key to look up\n @return the value in the Map as a byte, <code>0</code> if null map input\n',non-directive
'\n<p>\nThis package contains implementations of the\n{@link java.util.Comparator Comparator} interface.\n<p>\nYou may also consider using \n{@link org.apache.commons.collections.ComparatorUtils ComparatorUtils},\nwhich is a single class that uses static methods to construct instances\nof the classes in this package.\n',directive
'@param key\n            the key\n ',non-directive
'<li>ArrayStack - a non synchronized Stack that follows the same API as java util Stack\n',directive
'@since 3.3\n',non-directive
?,non-directive
'@return <code>IPreferenceNode</code> or <code>null</code> if not\n         found.\n',directive
'@throws IllegalStateException if <code>next()</code> has not yet been called\n',directive
'@throws IllegalArgumentException if any element in the arrays is null\n ',non-directive
?,non-directive
'@link String} and\n {',non-directive
'In the event\n object, the property name is the name of the preference, and the\n old and new values are wrapped as objects.\n ',directive
?,non-directive
'This method will be removed soon.\n',directive
' Sets the default value for the boolean-valued preference with the\n given name. \n <p>\n Note that the current value of the preference is affected if\n the preference\'s current value was its old default value, in which\n case it changes to the new default value. If the preference\'s current\n is different from its old default value, its current value is\n unaffected. No property change events are reported by changing default\n values.\n </p>\n\n @param name the name of the preference\n @param value the new default value for the preference\n',directive
'<LI><code>Savepoint</code> --  provides savepoints in a transaction\n\n  </UL>\n  ',non-directive
'<p>\n Note that several static convenience methods are also provided on this\n class for directly accessing resources in this bundle.\n ',directive
' The scale, or <code>null</code> if none.\n',directive
'@param column the column index\n ',non-directive
'</li>\n',non-directive
?,non-directive
'<li>\n<tt>DirectoryFieldEditor</tt> - directories</li>\n\n',non-directive
'@param collectionFactory  a factor which creates collection objects\n ',non-directive
'@see #create\n ',non-directive
?,non-directive
'@link SortedMap} as an {',non-directive
'Does nothing\n if the old and new values are the same.\n\n ',directive
' Returns a list of completion proposals based on the specified location\n within the document that corresponds to the current cursor position\n within the text viewer.\n\n @param contentAssistSubjectControl the content assist subject control whose\n           document is used to compute the proposals\n @param documentOffset an offset within the document for which\n           completions should be computed\n @return an array of completion proposals or <code>null</code> if no\n         proposals are possible\n',directive
'All field editors are subclasses of the abstract base class <tt>FieldEditor</tt>;\nthe framework allows new kinds of field editors to be defined by subclassing\nthis class or one of its subclasses.\n',directive
'<p>\n A property change event is reported whenever the mapping from\n a symbolic name to a font changes. ',directive
'<LI>Savepoints -- allow a transaction to be rolled back to a designated\n      savepoint\n  ',non-directive
'@return the next wizard page, or <code>null</code> if none\n',directive
'Returns the default-default value (<code>0.0f</code>) if there\n is no preference with the given name, or if the current value \n cannot be treated as a float.\n\n ',directive
'@return the next key in the iteration\n ',non-directive
'@since 3.3\n',non-directive
'@param name the name of the preference\n ',non-directive
' The button bar; <code>null</code> until dialog is layed out.\n',directive
'@see GridLayoutFactory#generateLayout(org.eclipse.swt.widgets.Composite)\n ',non-directive
' Updates the enabled state of the Apply button to reflect whether \n this page is valid.\n',non-directive
'@return the value in the Map as a Boolean, <code>false</code> if null map input\n',non-directive
?,non-directive
' Returns the button created when <code>createButton</code> is called\n with an ID of <code>IDialogConstants.CANCEL_ID</code>. If\n <code>createButton</code> was never called with this parameter, or if\n <code>createButton</code> is overridden, <code>getCancelButton</code>\n will return <code>null</code>.\n \n @return the cancel button or <code>null</code>\n \n @see #createButton(Composite, int, String, boolean)\n @since 2.0\n @deprecated Use <code>getButton(IDialogConstants.CANCEL_ID)</code>\n             instead. This method will be removed soon.\n',directive
'generateLayout will not change any layout data that has already been attached\n to a child control and it will not recurse into nested composites. \n ',directive
'An error message overrides the current\n message until the error message is cleared. ',directive
'@param title\n            the title to use for this dialog, or <code>null</code> to\n            indicate that the default title should be used\n ',directive
'But programmers may create\ntheir own implementations to cover nonstandard requirements.\n\n',directive
'@link java.util.concurrent.locks.Lock} interface supports\nlocking disciplines that differ in semantics (reentrant, fair, etc),\nand that can be used in non-block-structured contexts including\nhand-over-hand and lock reordering algorithms. ',directive
?,non-directive
'</p>\n\n ',non-directive
' Detach the progress monitor part from the given cancel\n component\n ',non-directive
'Note: this is a class name, not a file name or path.\t\t\t\t\t\t\t\n',directive
'The quick assist assistant\'s purpose is to propose, display, and insert quick assists and quick fixes\navailable at the current source viewer\'s quick assist invocation context.\n',directive
' Button width in dialog units (value 61).\n',non-directive
'The width and height correspond to the relative size of the bounds\n        of the layout with respect to the client area, and should be positive. \n ',directive
' Returns the top level control for this dialog page.\n <p>\n May return <code>null</code> if the control\n has not been created yet.\n </p>\n\n @return the top level control or <code>null</code>\n',directive
'@link #length()} or <code>remaining</code>&ltt;= 0\n',directive
'@return the error message, or <code>null</code> if none\n',directive
'<LI><code>SQLPermission</code> class -- provides permission when code\n                  running within a Security Manager, such as an applet,\n                  attempts to set up a logging stream through the\n                  <code>DriverManager</code>\n\t ',non-directive
' Returns a boolean indicating whether the dialog should be\n considered resizable when the shell style is initially\n set.  \n \n This method is used to ensure that all style \n bits appropriate for resizable dialogs are added to the \n shell style.  Individual dialogs may always set the shell \n style to ensure that a dialog is resizable, but using this\n method ensures that resizable dialogs will be created with\n the same set of style bits.\n \n Style bits will never be removed based on the return value \n of this method.  For example, if a dialog returns \n <code>false</code>, but also sets a style bit for a \n SWT.RESIZE border, the style bit will be honored.\n \n @return a boolean indicating whether the dialog is \n resizable and should have the default style bits for\n resizable dialogs\n \n @since 3.4\n',directive
?,non-directive
'@param infoText\n            Text to be shown in a lower info area, or <code>null</code>\n            if there is no info area.\n \n',directive
'<li>Support added for accessing a SQL ROWID\n ',non-directive
'@exception InvocationTargetException if the run method must propagate a checked exception,\n \tit should wrap it inside an <code>InvocationTargetException</code>; runtime exceptions are automatically\n  wrapped in an <code>InvocationTargetException</code> by the calling context\n ',directive
?,non-directive
' Tells whether the SWT Browser widget and hence this information\n control is available.\n\n ',non-directive
'<p>\n This method is typically called by a wizard page\n </p>\n\n ',directive
' Callback to signal this content assistant that the presentation of the possible completions has been stopped.\n @since 2.1\n',directive
?,non-directive
'</blockquote>\n\n<p> \nAn agent JAR file may have both the <code>Premain-Class</code> and <code>Agent-Class</code>\nattributes present in the manifest. ',directive
'<p> While some programs will choose to dedicate a thread to removing reference\nobjects from one or more queues and processing them, this is by no means\nnecessary.  ',directive
'<h4>Classes</h4>\n<ul>\n  ',non-directive
'@see org.apache.commons.collections.functors.SwitchClosure\n \n ',non-directive
'}\n\n</pre></blockquote>\n\n',non-directive
'If the button\n exists, then it will automatically get the text set to the current toggle\n message, and its selection state set to the current selection state.\n \n',directive
?,non-directive
'@return the window title string, or <code>null</code> for no title\n',directive
'@link java.util.concurrent.Executor} is a simple\nstandardized interface for defining custom thread-like subsystems,\nincluding thread pools, asynchronous IO, and lightweight task\nframeworks.  ',directive
'\n\nInterfaces and classes providing a framework for locking and waiting\nfor conditions that is distinct from built-in synchronization and\nmonitors. ',directive
'<li>font-family</li>\n </ul>\n ',non-directive
?,non-directive
?,non-directive
'@return the preference page, or <code>null</code> if none\n ',directive
'</p>\n \n ',non-directive
'@deprecated This font is not in use\n',directive
' Sets the visual feedback provider for content assist.\n The given {@link ILabelProvider} methods are called with\n {@link #getControl()} as argument.\n\n <ul>\n   <li><code>getImage(Object)</code> provides the visual cue image.\n     The image can maximally be 5 pixels wide and 8 pixels high.\n     If <code>getImage(Object)</code> returns <code>null</code>, a default image is used.\n   </li>\n   <li><code>getText(Object)</code> provides the hover info text.\n     It is shown when hovering over the cue image or the adapted {@link Control}.\n     No info text is shown if <code>getText(Object)</code> returns <code>null</code>.\n   </li>\n </ul>\n <p>\n The given {@link ILabelProvider} becomes owned by the {@link AbstractControlContentAssistSubjectAdapter},\n i.e. it gets disposed when the adapted {@link Control} is disposed\n or when another {@link ILabelProvider} is set.\n </p>\n\n @param labelProvider a {@link ILabelProvider}, or <code>null</code>\n \tif no visual feedback should be shown\n',directive
' Get the number of columns for the receiver.\n \n @param tableTree\n            the control\n \n @return the number of columns\n @since 3.5\n',non-directive
'@see #load()\n ',non-directive
'@return the message, or <code>null</code> if none\n',directive
'<li>The setters on RowDataFactory all return \"this\", allowing them to be\n chained</li>\n </ul>\n ',non-directive
' Returns the current value of the font-valued preference with the\n given name in the given preference store.\n ',non-directive
'@return a new GridDataFactory instance\n',non-directive
'@return the string-valued preference\n',non-directive
'\nProvides a presentation reconciler add-on for an <tt>ITextViewer</tt>.\nA presentation reconciler keep the presentation (styles and colors) in\nsync with the content of the document serving as the <tt>ITextViewer</tt>\'s\ninput.\n<h2>\nPackage Specification</h2>\n<tt>IPresentationReconciler</tt> defines the concept of a presentation\nreconciler. It collaborates with content type specific presentation damagers\n(<tt>IPresentationDamager</tt>) which for a given document change determine\nthe region of the presentation which must be rebuild, and content type\nspecific presentation repairers (<tt>IPresentationRepairer</tt>) which\nconstruct for a given damage region the document presentation. The package\ncontains a default implementation of <tt>IPresentationReconciler </tt>(<tt>PresentationReconciler</tt>).\n',directive
' Gets the dialog settings that should be used for remembering the bounds of\n of the dialog, according to the dialog bounds strategy.\n \n @return settings the dialog settings used to store the dialog\'s location\n         and/or size, or <code>null</code> if the dialog\'s bounds should\n         never be stored.\n \n @since 3.2\n @see Dialog#getDialogBoundsStrategy()\n',directive
'@link #appendVerifyKeyListener(VerifyKeyListener)}.\n\n ',non-directive
'This constructor does not use a <code>Group</code> to contain the radio buttons.\n ',directive
'<h2>\nPackage Specification</h2>\nA viewer is a model-based adapter on an SWT widget.&nbsp; Each viewer has\nfour parts:\n<blockquote>\n',non-directive
'<h2>Concurrent Collections</h2>\n\nBesides Queues, this package supplies Collection implementations\ndesigned for use in multithreaded contexts:\n{',directive
'@link Collection#containsAll(Collection)} method specifies\n that cardinality should <i>not</i> be respected; this method should\n return true if the bag contains at least one of every object contained\n in the given collection.\n \n',directive
?,non-directive
'@link #setInformationControlReplacer(InformationControlReplacer)} .\n\n ',directive
'The\n dialog\'s size will be adjusted to accomodate the tray.\n \n',non-directive
' Identifier for the Error Color\n',directive
'<li>Create all the controls in the composite</li>\n ',directive
?,non-directive
'<li><a href=\"\">##### REFER TO ANY FRAMEMAKER SPECIFICATION HERE #####</a>\n</ul>\n\n',non-directive
'@param info the revision information to show, <code>null</code> to draw none\n',directive
' Sets whether this wizard needs a progress monitor.\n \n @param b\n            <code>true</code> if a progress monitor is required, and\n            <code>false</code> if none is needed\n @see #needsProgressMonitor()\n',directive
'</p>\n <p>\n Note that the preferred way of re-initializing a preference to its\n default value is to call <code>setToDefault</code>.\n ',directive
'@throws LineIndexOutOfBoundsException if <code>length</code> &lt;= 0\n',directive
'Implementations may also support a mechanism to start agents some time after the VM has\nstarted. ',directive
'It is safe\n to call this method before the dialog has been opened.\n \n',directive
?,non-directive
'@param layout\n            layout to copy\n ',non-directive
'</p>\n\n ',non-directive
'Note that registries created in this way should not\n be used to allocate any resource that must outlive the given control.\n \n',directive
'@return the value in the Map as a Integer, <code>null</code> if null map input\n',non-directive
'@see #applyTo\n',non-directive
'This method replaces the\n current message and does not affect the error message.\n ',directive
'\n The preference page implementation of an <code>IPreferencePage</code>\n method returns whether this preference page is valid. Preference\n pages are considered valid by default; call <code>setValid(false)</code>\n to make a page invalid.\n @see IPreferencePage#isValid()\n',directive
'<li><a href=\"\">##### REFER TO ANY FRAMEMAKER SPECIFICATION HERE #####</a>\n</ul>\n\n',non-directive
' Undoes everything that was done by a previous call to {',non-directive
'@param collection the <code>Collection</code> to use as input values for the map.\n ',non-directive
'If a menu action\n            will be provided that allows the user to control this feature,\n            then the last known value of the user\'s setting will be used\n            instead of this flag.\n ',directive
' Creates a new range with the given start and end offsets.\n\n ',non-directive
'\n<p>\nThis package contains implementations of the\n{@link org.apache.commons.collections.Buffer Buffer} interface.\n<p>\nThe following implementations are provided in the package:\n<ul>\n<li>PriorityBuffer - provides for removal based on a comparator ordering\n<li>BoundedFifoBuffer - implements a buffer with a fixed size that throws exceptions when full\n<li>CircularFifoBuffer - implements a buffer with a fixed size that discards oldest when full\n<li>UnboundedFifoBuffer - implements a buffer that grows in size if necessary\n</ul>\n<p>\nThe following decorators are provided in the package:\n<ul>\n<li>Synchronized - synchronizes method access for multi-threaded environments\n<li>Unmodifiable - ensures the collection cannot be altered\n<li>Predicated - ensures that only elements that are valid according to a predicate can be added\n<li>Typed - ensures that only elements that are of a specific type can be added\n<li>Transformed - transforms elements added to the buffer\n<li>Blocking - blocks on get and remove until an element is available\n</ul>\n</pre>\n',directive
'</P>\n\n<h2>Null Pointers</h2>\n<p>\nIn general, unless otherwise noted in the javadoc, methods and\nconstructors will throw NullPointerException if passed a null argument.\n',directive
' Returns whether this field editor currently presents the\n default value for its preference.\n \n @return <code>true</code> if the default value is presented,\n   and <code>false</code> otherwise\n',non-directive
'<LI><code>Connection</code> interface --  provides methods for creating\n             statements and managing connections and their properties\n\t ',non-directive
'<li>CONTEXT_BELOW<p>\n     context information popup should always appear below the line containing\n     the current cursor location\n   </li>\n </ul>\n\n ',directive
' Converts the given SWT rectangle object to a string.\n <p>\n The string representation of a rectangle has the form\n <code><it>x</it>,<it>y</it>,<it>width</it>,<it>height</it></code>\n where <code><it>x</it></code>, <code><it>y</it></code>,\n <code><it>width</it></code>, and <code><it>height</it></code>\n are string representations of integers.\n </p>\n\n @param value the rectangle object\n @return the string representing the given rectangle\n',non-directive
'Events are fired when the color in the control changes via the user\n clicking an selecting a new one in the color dialog. ',directive
'\n\nProvides support for RMI Object Activation.  ',non-directive
' Creates a copy of the reciever.\n \n @return a copy of the reciever\n',non-directive
' Returns a {',non-directive
'@param predicates  an array of predicates to check, not null\n ',non-directive
'@link\njava.util.concurrent.ConcurrentLinkedQueue} class supplies an\nefficient scalable thread-safe non-blocking FIFO queue.  ',directive
' Static to prevent opening of error dialogs for automated testing.\n',directive
' Returns the change button for this field editor.\n\n ',non-directive
'@link GridLayout}.\n ',directive
'@param toggleMessage\n            the message for the toggle control, or <code>null</code> for\n            the default message\n ',directive
'It is shown when hovering over the cue image or the adapted {',non-directive
'@param length the new length, must be &gt; 0 and &lt;= {',directive
'<li> An object is <em>phantom reachable</em> if it is neither strongly, softly,\nnor weakly reachable, it has been finalized, and some phantom reference refers\nto it.\n\n',directive
?,non-directive
' Create a new Closure that uses the input object as a key to find the\n closure to call. \n ',directive
'@throws LineIndexOutOfBoundsException if the parameters violate the invariant of\n         {',directive
'This method replaces the\n current message and does not affect the error message.\n ',directive
'<h2>\nPackage Specification</h2>\n<tt>ISubjectControlContentAssistant</tt> defines the concept of the content assist add-on.\n',non-directive
?,non-directive
'@see #spacing(Point)\n * ',non-directive
'@param defaultValue  return if the value is null or if the\n     conversion fails\n ',non-directive
'To avoid compatibility issues, the names of\n<tt>Condition</tt> methods are different than the corresponding\n<tt>Object</tt> versions.\n\n',directive
?,non-directive
'@throws IllegalStateException if <code>remove()</code> has been called since the\n  last call to <code>next()</code>\n',directive
' Reads the next line. The lengths of the line will not exceed the given maximum width.\n\n @return the next line\n @throws IOException if an I/O error occurs\n',directive
' Gets a new Properties object initialised with the values from a Map.\n ',non-directive
'@param trueTransformer  the transformer called if the predicate is true\n ',directive
' Deallocates a resource previously allocated by {@link #create(DeviceResourceDescriptor)}. \n Descriptors are compared by equality, not identity. If the same resource was \n created multiple times, this may decrement a reference count rather than \n disposing the actual resource.  \n \n @since 3.1 \n\n @param descriptor identifier for the resource\n',directive
'@throws IllegalArgumentException if the either array is null\n ',non-directive
'<li>CompositeMap - map that combines multiple maps into a single view\n',non-directive
'@param sortedMap to wrap if necessary\n ',directive
'The framework\nconsists of abstract base classes for viewers (<tt>Viewer</tt>, <tt>StructuredViewer</tt>,\n<tt>AbstractTreeViewer</tt>) together with concrete viewer classes (<tt>ListViewer</tt>,\n<tt>TreeViewer</tt>,\n<tt>TableViewer</tt>,\n<tt>TableTreeViewer</tt>, <tt>CheckboxTreeViewer</tt>,\nand <tt>CheckboxTableViewer</tt>),\nand various lesser support classes. ',non-directive
'@param node\n            the preference node, or <code>null</code> if none\n ',directive
'@param name\n            the name of the preference this field editor works on\n ',non-directive
' An internal class that gives access to internal methods of {@link\n AbstractInformationControlManager} and subclasses.\n\n @since 3.4\n',directive
' Defines a functor interface implemented by classes that create objects.\n <p>\n A <code>Factory</code> creates an object without using an input parameter.\n If an input parameter is required, then {@link Transformer} is more appropriate.\n <p>\n Standard implementations of common factories are provided by\n {@link FactoryUtils}. These include factories that return a constant,\n a copy of a prototype or a new instance.\n\n @param <T> the type that the factory creates\n\n @since Commons Collections 2.1\n @version $Revision: 814997 $ $Date: 2009-09-15 07:29:56 +0200 (Tue, 15 Sep 2009) $\n\n @author Arron Bates\n @author Stephen Colebourne\n',directive
' Instructs the GridLayout to ignore this control when performing layouts. \n \n @param shouldExclude true iff the control should be excluded from layouts\n @return this\n',directive
'@throws NullPointerException if iterator parameter is null\n',non-directive
?,non-directive
'\nProvides a reconciler add-on for an <tt>ITextViewer</tt>.\nA&nbsp; reconciler provides generic synchronization support&nbsp; with\nthe content of the document serving as the <tt>ITextViewer</tt>\'s input.\nThere is no explicit model of what is synchronized.\n<h2>\nPackage Specification</h2>\n<tt>IReconciler</tt> defines the concept of a reconciler. It collaborates\nwith content type specific reconciling strategies (<tt>IReconcilingStrategy</tt>)\nwhich perform the synchronization for a given dirty region. The package\ncontains a default implementation of <tt>IReconciler</tt> (<tt>Reconciler</tt>).\n\n<tt>Reconciler</tt> and <tt>MonoReconciler</tt> implements reconciling\nas a periodic background activity and folds co-located changes while being\ninactive.\n',directive
'<p>\n This method is called by the container itself\n when its wizard changes and may be called\n by the wizard at other times to force a window \n title change.\n ',directive
'<li><code>DirectoryFieldEditor</code> - directories</li>\n   ',non-directive
?,non-directive
'<p>\n The wizard container calls this method to create the controls\n for the wizard\'s pages before the wizard is opened. ',directive
'<p>\n This value must not be cached since a new parent\n may be created each time this method called. ',directive
'@since 3.0\n ',non-directive
'The currently displayed message is saved\n and will be redisplayed when the error message is set to\n <code>null</code>.\n \n',directive
'@return the first wizard page\n',non-directive
' Sets the revision information to be drawn and triggers a redraw.\n\n @param info the revision information to show, <code>null</code> to draw none\n',non-directive
'</p>\n Note: touching this class has the side effect of creating a display (static initializer).\n ',directive
'<!--\n<h2>Package Specification</h2>\n\n##### FILL IN ANY SPECS NEEDED BY JAVA COMPATIBILITY KIT #####\n<ul>\n  ',non-directive
'@link java.lang.management.RuntimeMXBean}</tt> </td>\n<td> Runtime system of the Java virtual machine.</td>\n</tr>\n<tr>\n<td> <tt>{',non-directive
' Button id for a \"No to All\" button (value 21).\n',non-directive
'Returns the default-default value (<code>false</code>) if there\n is no preference with the given name, or if the current value \n cannot be treated as a boolean.\n\n ',directive
'In cases where an implementation\nsupports the starting of agents after the VM has started the following applies:\n\n<ol>\n  ',directive
'These provide simple callbacks for processing with collections.\n',directive
'@return the font\n',non-directive
'@since 3.0\n',non-directive
' Returns this field editor\'s scale control.\n \n @return the scale control, or <code>null</code> if no scale field is\n         created yet\n',non-directive
'The given {',directive
?,non-directive
' Sets the default value of the preference with the given name\n in the given preference store.\n\n ',non-directive
?,non-directive
'Equivalent to <code>String.valueOf(value.intValue())</code>.\n\n ',directive
?,non-directive
'@link #margins(int, int)}.\n \n',directive
'Unless otherwise noted, passing a null argument to a constructor\nor method in any class or interface in this package will cause a\n<tt>NullPointerException</tt> to be thrown.\n\n',directive
'This\n can affect whether or not the dialog will display additional help\n mechanisms such as a help control in the button bar.\n \n',directive
'@param contentAssistSubjectControl the content assist subject control\n ',non-directive
'RMI is Remote Method Invocation.  ',directive
'@return the label control, or <code>null</code>\n  if no label control has been created\n',directive
'\nProvides support for managing resources such as SWT\nfonts and images.\n<h2>\nPackage Specification</h2>\nThis package contains support for managing resources, including:\n<ul>\n<li>\nfont registries (<tt>FontRegistry</tt>) - for hanging on to the SWT font\nobjects needed by an application</li>\n\n<li>\ncolor registries (<tt>ColorRegistry</tt>) - for hanging on to the SWT color \nobjects needed by an application</li>\n\n<li>\nimage registries (<tt>ImageRegistry</tt>) - for hanging on to the SWT image\nobjects needed by an application</li>\n\n<li>\nimage descriptors (<tt>ImageDescriptor</tt>) - surrogate object for creating\nSWT images</li>\n\n<li>\nstring conversion (<tt>StringConverter</tt>) - for parsing property files</li>\n</ul>\nThe JFace resources module is an independent JFace module requiring a basic\nknowledge of SWT and the JFace property change event mechanism. Familiarity\nwith other JFace modules is not required.\n<p>Image descriptors are objects that knows how to create an image on demand.\nThey serve as a lightweight representation of images in situations where\nno SWT display exists yet, and are used mainly in conjunction with image\nregistries. This package contains the image descriptor framework, which\nis a simple hierarchy rooted at the abstract class <tt>ImageDescriptor</tt>.\nThe framework includes abstract subclasses for composing images (<tt>CompositeImageDescriptor</tt>)\nas well as a ready-made concrete subclass for loading images from files\n(<tt>FileImageDescriptor</tt>).\n<p>The class <tt>JFaceResources</tt> maintains global state on behalf of\nJFace itself consisting of JFace\'s own image registry, font registry, resource\nbundle, and preference store.\n<br>&nbsp;\n',directive
' Creates a new event for the given source, selected (current) page and\n direction.\n \n @param source\n            the page changing provider (the source of this event)\n @param currentPage\n            the current page. In the JFace provided dialogs this will be\n            an <code>IDialogPage</code>.\n @param targetPage\n            the target page. In the JFace provided dialogs this will be an\n            <code>IDialogPage</code>.\n',non-directive
'@param page the previous wizard page\n',non-directive
'@param descriptor identifier for the requested resource\n ',non-directive
' Tells whether this manager\'s information control is currently being replaced.\n\n ',non-directive
?,non-directive
'@param dialogTitle\n            the title to use for this dialog, or <code>null</code> to\n            indicate that the default title should be used\n ',directive
'@return the default value of the named preference\n',non-directive
'<p>\n Attempts to create or modify a <code>Range</code> such that this invariant would be violated\n result in a {',directive
?,non-directive
'@return IPreferenceStore or null\n',directive
?,non-directive
' Handle the shell close. ',non-directive
'@return the value as a boolean\n ',non-directive
?,non-directive
?,non-directive
'@return the value as font data\n ',non-directive
'Negative values will return smaller\n fonts. \n ',directive
'This is most\n important for calls to <code>cancel()</code>.\n ',directive
' Performs special processing when this page\'s Apply button has been pressed.\n <p>\n This is a framework hook method for sublcasses to do special things when\n the Apply button has been pressed.\n The default implementation of this framework method simply calls\n <code>performOk</code> to simulate the pressing of the page\'s OK button.\n </p>\n \n @see #performOk\n',directive
?,non-directive
'@since 3.1\n',non-directive
?,non-directive
'\n<p>Provides support for formatting key sequences.</p>\n\n<h2>Package Specification</h2>\n<p>\nThis is a collection fo various formatters for key sequences.  ',non-directive
' Create a ProgressIndicator as a child under the given parent.\n \n',non-directive
' Returns the color descriptor associated with the given symbolic color\n name. As of 3.4 if this color is not defined then an unspecified color\n is returned. Users that wish to ensure a reasonable default value should\n use {@link #getColorDescriptor(String, ColorDescriptor)} instead.\n \n @since 3.1\n \n @param symbolicName\n @return the color descriptor associated with the given symbolic color\n         name or an unspecified sentinel.\n',directive
'If a <code>premain</code> method throws an uncaught exception, the JVM will abort.\n\n\n\n',non-directive
'\n<p>\nInternal classes and helpers to implement the revision model and its UI presentation. See\nthe <tt><a href=\"../../../text/revisions/package.html\">org.eclipse.jface.text.revisions</a></tt>\npackage for the API classes implementing the revision model.\n</p>\nContains everything needed to:\n<ul>\n  <li>paint revision information in the vertical ruler</li>\n  <li>adapt the revision information to (quick) diff scripts</li>\n</ul>\n<p>\nThis package is internal and may be subject to change without notice.\n</p>\n',directive
' Gets the current key, which is the key returned by the last call\n to <code>next()</code>.\n\n ',directive
'Such information might include\n         detailed tracing on the internal execution of particular subsystems.           \n\n   ',non-directive
'<LI> The JDBC 2.0 Optional Package API<br>\n      (Note that the JDBC 2.1 core API and the JDBC 2.0 Optional Package\n      API together are referred to as the JDBC 2.0 API.)\n ',directive
'However, an indefinite\namount of time may elapse between a time-out being detected and a\nthread actually executing again after that time-out.  ',directive
'@throws NoSuchElementException if the iteration is finished\n',non-directive
' Get the specified {@link Map} as an {@link IterableMap}.\n @param <K>\n @param <V>\n @param map to wrap if necessary.\n @return IterableMap<K, V>\n @since Commons Collections 5\n @TODO fix version\n',directive
' Undoes everything that was done by a previous call to {@link #createFont(FontDescriptor)}.\n \n @since 3.1 \n\n @param descriptor description of the font to destroy\n',directive
'\nProvides an information provider add-on for an <tt>ITextViewer</tt>.\n',non-directive
' Returns the text area.\n \n @return the text area\n',non-directive
'@exception java.io.IOException\n                if there is a problem saving this store\n',directive
' Moves the progress indicator to the end.\n',non-directive
'A completion can also\nbe a incomplete in itself and content assist provides means to deal with\nnested completions.\n',non-directive
' Creates a new preference manager with the given\n path separator and root node.\n\n @param separatorChar the separator character\n @param rootNode the root node. \n\n @since 3.4\n',non-directive
'Decorations are defined in pre-defined\nlocations relative to the control, and can be set up to show at all times, or only\nwhen the control has focus.  ',directive
?,non-directive
'true if canceled ',non-directive
'Descriptors are compared by equality, not identity. ',directive
'@link StringButtonFieldEditor#VALIDATE_ON_KEY_STROKE}\n  to perform on the fly checking, or {',directive
'@since 3.1\n',non-directive
'@param parent the parent of the field editor\'s control\n',non-directive
'Returns the default-default value (the empty string <code>\"\"</code>) \n is no default preference with the given name, or if the default \n value cannot be treated as a string.\n\n ',directive
' Returns the readable content as string.\n @return the readable content as string\n @exception IOException in case reading fails\n',non-directive
?,non-directive
' Constant for the warning image, or a simple dialog with the warning image and a single OK button (value 4).\n \n @see #MessageDialog(Shell, String, Image, String, int, String[], int)\n @see #open(int, Shell, String, String, int)\n',directive
?,non-directive
' Computes the size for this page\'s UI control.\n ',non-directive
'<li>Each action in a thread <i>happens-before</i> every action in that\n  thread that comes later in the program\'s order.\n\n  ',directive
'This method has no effect if there is no image or descriptor for the given key.\n ',directive
'A modifier key is one of\nCtrl, Shift, Alt, or Command.  ',non-directive
'@see org.apache.commons.collections.functors.SwitchClosure\n \n ',non-directive
'@since 3.3\n',non-directive
'<li>\n<tt>FileFieldEditor</tt> - files</li>\n\n',non-directive
' A mutator for the button labels.\n \n @param buttonLabels\n            The button labels to use; must not be <code>null</code>.\n',directive
' Creates a new revision painter for a vertical ruler column.\n\n ',non-directive
' Sets the minimum page size used for the pages.\n \n',non-directive
' Sets the message for this dialog with an indication of what type of\n message it is.\n <p>\n The valid message types are one of <code>NONE</code>,\n <code>INFORMATION</code>,<code>WARNING</code>, or\n <code>ERROR</code>.\n </p>\n <p>\n Note that for backward compatibility, a message of type\n <code>ERROR</code> is different than an error message (set using\n <code>setErrorMessage</code>). An error message overrides the current\n message until the error message is cleared. This method replaces the\n current message and does not affect the error message.\n </p>\n \n @param newMessage\n            the message, or <code>null</code> to clear the message\n @param newType\n            the message type\n @since 2.0\n',directive
' Undoes everything that was done by a previous call to create(...), given\n the object that was returned by create(...).\n \n @since 3.1 \n\n @param previouslyCreatedObject an object that was returned by an equal \n descriptor in a previous call to createResource(...).\n',directive
' Creates an instance of a status dialog.\n \n',non-directive
?,non-directive
'However, clients are also free to implement this \n interface if <code>Wizard</code> does not suit their needs.\n ',directive
'@author Stephen Colebourne\n',non-directive
'<li><a href=\n    \"{@docRoot}/../technotes/guides/security/permissions.html\"><b>\n    Policy Permissions\n    </b></a></li>\n\n  ',non-directive
'@param blockedName The name of the locked operation.\n ',non-directive
'@deprecated As of 3.2, replaced by Platform UI\'s field assist support\n',directive
'@link Layout} applied to. ',directive
'@param offset the offset of the selection based on the subject\'s model e.g. ',non-directive
'<li>Predicated - ensures that only elements that are valid according to a predicate can be added</li>\n',directive
'@return  a map iterator over nothing\n',non-directive
'Changing a property of the factory will affect\n future layouts created by the factory, but has no effect on layouts that have already been created.\n \n',directive
' Causes the <code>run()</code> method of the runnable to\n be invoked just before the receiver is disposed. ',directive
?,non-directive
'<P>\n<b>NOTE:</b> The class <code>SQLPermission</code> was added in the\nJava<sup><font size=-2>TM</font></sup> 2 SDK, Standard Edition, \nversion 1.3 release. ',directive
' Abstract base implementation of a dialog page. All dialog pages are\n subclasses of this one.\n',directive
?,non-directive
'<!--\n<h2>Package Specification</h2>\n\n##### FILL IN ANY SPECS NEEDED BY JAVA COMPATIBILITY KIT #####\n<ul>\n  ',non-directive
'@return the number of columns\n ',non-directive
'<li>StaticBucketMap - internally synchronized and designed for thread-contentious environments\n</ul>\n',directive
'@version $Revision: 956291 $ $Date: 2010-06-19 22:30:20 +0200 (Sat, 19 Jun 2010) $\n\n ',non-directive
'Base the\n background color on whether or not there are errors.\n \n',directive
'The main responsibility of a <tt>WizardPage</tt> subclass is providing\nthe SWT controls and the backing logic for a single wizard page.\n',directive
'If the list is empty return <code>null</code>.\n \n',directive
'@author <a href=\"mailto:jefft@apache.org\">Jeff Turner</a>\n ',non-directive
'Convenience method equivalent to\n \n <pre>\n JFaceResources.getFontRegistry().get(JFaceResources.DIALOG_FONT)\n </pre>\n \n ',directive
'@param labelAndValues list of radio button [label, value] entries;\n  the value is returned when the radio button is selected\n ',non-directive
'@param c\n            composite whose layout will be set\n ',non-directive
'<LI>Addition of metadata for retrieving SQL type hierarchies\n</UL>\n',directive
' Gets an immutable version of an {@link Iterator}. The returned object\n will always throw an {@link UnsupportedOperationException} for\n the {@link Iterator#remove} method.\n\n @param iterator  the iterator to make immutable\n @return an immutable version of the iterator\n',non-directive
'\nThis package provides the quick assist assistant add-on for an <tt>ISourceViewer</tt>.\nThe quick assist assistant\'s purpose is to propose, display, and insert quick assists and quick fixes\navailable at the current source viewer\'s quick assist invocation context.\n<p>\nA quick fix is a completion that can correct a problem reported and visible through an <tt>Annotation</tt>\nwhile a quick assist is not related to a problem or <tt>Annotation</tt>. Since quick assists can be proposed\nwhere appropriate they are normally not visible in the viewer. The quick assist assistant implementation in\nthis package can show the quick assists that are available on the current line.\n</p>\n\n<h2>\nPackage Specification</h2>\n<tt>IQuickAssistAssistant</tt> defines the concept of the quick assist assistant add-on.\nIt collaborates with a quick assist processor (<tt>IQuickAssistProcessor</tt>)\nin order to generate quick fix and quick assist completion proposals (<tt>ICompletionProposal</tt>)\navailable at the current quick assist invocation context (<tt>IQuickAssistInvocationContext</tt>).\nThe package provides a default implementation <tt>QuickAssistAssistant</tt> which completely defines\nand implements the UI and the control flow for a quick assist assistant.\n<br>&nbsp;\n',directive
' Returns the human-perceived brightness of a color as float in [0.0, 1.0]. ',non-directive
' @param proposals the proposals\n',non-directive
'A <code>factor</code> of 1.0 will produce a\n color equal to <code>fg</code>, while a <code>factor</code> of 0.0 will produce one\n equal to <code>bg</code>.\n ',non-directive
' Installs this validator for the given context information.\n\n ',non-directive
'Also, the\n<code>PreparedStatement.setObject</code> method will automatically map the\nobject back to its SQL type to store it in the data source.\n\n',non-directive
?,non-directive
'@link Range}\n',directive
'@link #extendedMargins(int, int, int, int)}.\n \n',directive
' Sets the spacing for layouts created with this factory. The spacing\n is the distance between cells within the layout. \n \n @param hSpacing horizontal spacing (pixels)\n @param vSpacing vertical spacing (pixels)\n @return this\n @see #margins(Point)\n @see #margins(int, int)\n',directive
'@since 3.3\n',non-directive
'@param mode the enrich mode\n ',non-directive
?,non-directive
'The configuration\n must be consistent: This means the used {',directive
'<li>{',non-directive
' Clears the error message from the message line.\n',directive
'When an agent is started sometime after the VM has\n\t\t\tstarted then paths that do not represent a JAR file\n\t\t\tare ignored.\n                        ',directive
'@param lines the number of lines to query\n ',non-directive
'@param l layout to copy\n ',non-directive
'@param comparator  the comparator to use, may be null for natural order\n ',directive
'@deprecated use\n             org.eclipse.swt.widgets.Display.getSystemImage(SWT.ICON_INFORMATION)\n',directive
'<p>\n A property change event is reported if the current value of the \n preference actually changes from its previous value. ',directive
'This package provides an abstraction layer between the SWT key events\nand key bindings within JFace.\n',directive
'Equivalent to <code>String.valueOf(value)</code>.\n\n ',directive
' Sets whether the dialog should be opened before the operation is run.\n NOTE: Setting this to false and not forking a process may starve any\n asyncExec that tries to open the dialog later.\n \n @param openOnRun\n            <code>true</code> to open the dialog before run,\n            <code>false</code> to only create the dialog, but not open\n            it\n @since 3.0\n',directive
' A field editor for a font type preference.\n',non-directive
'Don\'t\n assign the layout directly the {',directive
'@exception java.io.IOException\n                if there is a problem loading this store\n',directive
' Vertical spacing in dialog units (value 4).\n',non-directive
' This registries <code>Display</code>. All colors will be allocated using \n it.\n',non-directive
' Image registry key for error message image (value\n <code>\"dialog_title_error_image\"</code>).\n',directive
?,non-directive
'@return the progress monitor, or <code>null</code> if this wizard\n         dialog does not have one\n',directive
'@param out\n            the print stream\n',non-directive
'\nProvides a framework for wizards.\n<h2>\nPackage Specification</h2>\nA wizard dialog is a specialized window for walking the end user through\na sequence of steps; each step is presented on a separate page.\n<p>At the most abstract level, the protocol is given by 3 interfaces:\n<ul>\n<li>\n<tt>IWizard</tt> - a wizard consisting of several wizard pages</li>\n\n<li>\n<tt>IWizardPage</tt> - an individual wizard page</li>\n\n<li>\n<tt>IWizardContainer</tt> - the outside world from the point of view of\na wizard</li>\n</ul>\nA wizard is any object implementing <tt>IWizard</tt>. The abstract base\nclass <tt>Wizard</tt> is provided as a starting point; it is simpler to\nsubclass <tt>Wizard</tt> than to implement <tt>IWizard</tt> from scratch.\nThe main responsibility of a <tt>Wizard</tt> subclass is doing the real\nwork when the wizard finishes.\n<p>Similarly, a wizard page is any object implementing <tt>IWizardPage</tt>.\nThe abstract base class <tt>WizardPage</tt> is provided as a starting point.\nThe main responsibility of a <tt>WizardPage</tt> subclass is providing\nthe SWT controls and the backing logic for a single wizard page.\n<p><tt>WizardDialog</tt> is a ready-to-use JFace dialog that is instantiated\nwith a wizard and acts as the wizard\'s container. This dialog has a standard\nlayout: an area at the top containing the wizard\'s title, description,\nand image; the actual wizard page appears in the middle; below it is a\nprogress indicator; and at the bottom is an area with a message line and\na button bar containing Next, Back, Finish, Cancel, and Help buttons.\n<p><tt>WizardSelectionPage</tt>, a special abstract subclass of <tt>WizardPage</tt>,\nallows whole other wizards to be connected to a root page.\n<p>Note: None of the classes in this package maintain global state.\n<br>&nbsp;\n',directive
' Creates a copy of the receiver.\n \n @return a copy of the receiver\n',non-directive
'<li>SwitchMap - calls one closure looked up from a Map\n ',directive
?,non-directive
'<p>\n The control is created if it does not yet exist\n </p>\n\n ',directive
'<p>\n This method should only be called from the UI thread. ',directive
'<p> Most concurrent Collection implementations (including most Queues)\nalso differ from the usual java.util conventions in that their Iterators\nprovide <em>weakly consistent</em> rather than fast-fail traversal. ',directive
?,non-directive
' Returns this field editor\'s label component.\n <p>\n The label is created if it does not already exist\n </p>\n\n @param parent the parent\n @return the label control\n',non-directive
'Convenience method equivalent to\n \n <pre>\n JFaceResources.getFontRegistry().get(symbolicName)\n </pre>\n \n If an error occurs, return the default font.\n \n',directive
'<P>\nNote that these interfaces are intended only for key\nimplementations whose key material is accessible and \navailable. ',directive
'@link #extendedMargins(int, int, int, int)}.\n \n',directive
'@return <code>true</code> if an empty string is a valid value, and\n  <code>false</code> if an empty string is invalid\n ',non-directive
'@param steps the requested size, must be &gt;= 2\n ',directive
' Creates new layout object.\n \n @param mw\n            the margin width\n @param mh\n            the margin height\n @param minW\n            the minimum width\n @param minH\n            the minimum height\n',non-directive
'\nProvides classes that help communicate proper content for fields in dialogs and wizards.\n<h2>\nPackage Specification</h2>\n<p>\nThis package provides classes that can be used to guide a dialog user through choosing\nappropriate content for fields in a dialog or wizard.\n<p>\nA <tt>ContentProposalAdapter</tt> can be attached to an arbitrary control to provide \na popup showing content proposals.  These proposals appear when the defined\nassist keystroke is invoked.  The <tt>ContentProposalAdapter</tt> manages the creation, \nhiding, and showing of the proposal popup, as well as the proper handling of key events\nbetween the adapted control and its popup.  Implementors of <tt>IControlContentAdapter</tt>\nallow the adapter to set and retrieve the contents of the supplied control.\n</p>\n<p>\nAn <tt>AutoCompleteField</tt> configures a <tt>ContentProposalAdapter</tt> in a manner\nthat supports automatic field completion popups that filter based on the control\'s\ncontents.\n</p>\n<p>\n<tt>ControlDecoration</tt> can be used to decorate an arbitrary control with \nan image that communicates information about the control\'s content.  Decorations can be\nused to show additional information about a field, such as its status, or a cue\nthat shows availability of content proposals.  Decorations are defined in pre-defined\nlocations relative to the control, and can be set up to show at all times, or only\nwhen the control has focus.  It is up to the client to ensure there is enough\nspace allocated to render the control decoration.  Decorations can optionally show \ndescriptive text when the user hovers over them.  \n</p>\n<p>\n<tt>DecoratedField</tt> can also be used to decorate a control.  The main difference\nis that decorated fields reserve space for multiple decorations in particular\nlocations around the control.  To do this, the field manages the creation of the \nfield\'s control, using a specialized layout to ensure there is adequate space \nreserved for decorations around the control. Other than using the field to manage \nthe decorations themselves, clients are expected to interact \ndirectly with the control.  \n</p>\n\n<p>Note: None of the classes in this package maintain global state.\n',directive
'<LI><code>Time</code> class -- mapping for SQL <code>TIME</code> \n\t ',non-directive
'<li>A <tt>TemplateProposal </tt>can be\noffered in content assist, possibly created by a subclass of <tt>TemplateCompletionProcessor.</tt></li>\n  ',directive
'@see java.lang.Float#valueOf(java.lang.String)\n',non-directive
'@param titleImage the image descriptor for the title of this wizard page,\n   or <code>null</code> if none\n',directive
' Creates an empty image registry using the given resource manager to allocate images.\n \n',non-directive
'<li>\nand, finally, setting the viewer\'s input.</li>\n</ul>\n',non-directive
'\n\nInterfaces and classes providing a framework for locking and waiting\nfor conditions that is distinct from built-in synchronization and\nmonitors. The framework permits much greater flexibility in the use of\nlocks and conditions, at the expense of more awkward syntax.\n\n<p> The {@link java.util.concurrent.locks.Lock} interface supports\nlocking disciplines that differ in semantics (reentrant, fair, etc),\nand that can be used in non-block-structured contexts including\nhand-over-hand and lock reordering algorithms. The main implementation\nis {@link java.util.concurrent.locks.ReentrantLock}.\n\n<p> The {@link java.util.concurrent.locks.ReadWriteLock} interface\nsimilarly defines locks that may be shared among readers but are\nexclusive to writers.  Only a single implementation, {@link\njava.util.concurrent.locks.ReentrantReadWriteLock}, is provided, since\nit covers most standard usage contexts. But programmers may create\ntheir own implementations to cover nonstandard requirements.\n\n<p> The {@link java.util.concurrent.locks.Condition} interface\ndescribes condition variables that may be associated with Locks.\nThese are similar in usage to the implicit monitors accessed using\n<tt>Object.wait</tt>, but offer extended capabilities.  In particular,\nmultiple <tt>Condition</tt> objects may be associated with a single\n<tt>Lock</tt>.  To avoid compatibility issues, the names of\n<tt>Condition</tt> methods are different than the corresponding\n<tt>Object</tt> versions.\n\n<p> The {@link java.util.concurrent.locks.AbstractQueuedSynchronizer}\nclass serves as a useful superclass for defining locks and other\nsynchronizers that rely on queuing blocked threads.  The {@link\njava.util.concurrent.locks.AbstractQueuedLongSynchronizer} class\nprovides the same functionality but extends support to 64 bits of\nsynchronization state. Both extend class {@link\njava.util.concurrent.locks.AbstractOwnableSynchronizer}, a simple\nclass that helps record the thread currently holding exclusive\nsynchronization.  The {@link java.util.concurrent.locks.LockSupport}\nclass provides lower-level blocking and unblocking support that is\nuseful for those developers implementing their own customized lock\nclasses.\n\n@since 1.5\n\n',directive
' Button id for a \"Help\" button (value 17).\n',non-directive
'<p>\n This information is typically used by the wizard to decide\n when it is okay to move on to the next page or finish up.\n ',directive
'@param closures  an array of closures to call, not null\n ',directive
'The main responsibility of a <tt>Wizard</tt> subclass is doing the real\nwork when the wizard finishes.\n',directive
'A&nbsp; reconciler provides generic synchronization support&nbsp; with\nthe content of the document serving as the <tt>ITextViewer</tt>\'s input.\n',directive
' Returns the value of the given key in this dialog settings.\n \n @param key\n            the key\n @return the value, or <code>null</code> if none\n',non-directive
'<li>DoWhile - repeatedly calls a closure while a predicate is true\n ',directive
'@param b\n            <code>true</code> if help is available, and\n            <code>false</code> if this wizard is helpless\n ',non-directive
'@param changed the number of changed lines in this hunk, must be &gt;= 0\n',directive
'\n\nProvides services that allow Java programming language agents to instrument programs running on the JVM. \nThe mechanism for instrumentation is modification of the byte-codes of methods.\n\n<h2>Package Specification</h2>\n\n<P> \nAn agent is deployed as a JAR file. An attribute in the JAR file manifest specifies the\nagent class which will be loaded to start the agent. For implementations that support a command-line \ninterface, an agent is started by specifying an option on the command-line.  \nImplementations may also support a mechanism to start agents some time after the VM has\nstarted. For example, an implementation may provide a mechanism that allows a tool to \n<i>attach</i> to a running application, and initiate the loading of the tool\'s agent into\nthe running application. The details as to how the load is initiated, is implementation\ndependent.\n\n<h3>Command-Line Interface</h3>\n\n<P> \nOn implementations with a command-line interface, an agent is started by\nadding this option to the command-line:\n<blockquote>\n<code><b>-javaagent:</b></code><i>jarpath[</i><code><b>=</b></code><i>options]</i>\n</blockquote>\n<i>jarpath</i> is the path to the agent JAR file.\n<i>options</i> is the agent options.\nThis switch may be used multiple times on the same command-line, \nthus creating multiple agents.\nMore than one agent may use the same <i>jarpath</i>.\nAn agent JAR file must conform to the JAR file specification.\n\n<P>\nThe manifest of the agent JAR file must contain the attribute <code>Premain-Class</code>. The\nvalue of this attribute is the name of the <i>agent class</i>. The agent class must implement a \npublic static <code>premain</code> method similar in principle to the <code>main</code> application \nentry point.  After the Java Virtual Machine (JVM) has initialized, each <code>premain</code> method \nwill be called in the order the agents were specified, then the real application\n<code>main</code> method will be called. \nEach <code>premain</code> method must return in order for the startup sequence to proceed.\n\n<P>\nThe <code>premain</code> method has one of two possible signatures. The JVM first attempts to\ninvoke the following method on the agent class:\n\n<blockquote>\n<code>public static void\npremain(String agentArgs, Instrumentation inst);\n</code>\n</blockquote>\n\n<P>\nIf the agent class does not implement this method then the JVM will attempt to invoke:\n\n<blockquote>\n<code>public static void\npremain(String agentArgs);\n</code>\n</blockquote>\n\n<P>\nThe agent class may also have an <code>agentmain</code> method for use when the agent is started \nafter VM startup. When the agent is started using a command-line option, the <code>agentmain</code>\nmethod is not invoked.\n\n\n<P>\nThe agent class will be loaded by the system class loader\n(see {@link java.lang.ClassLoader#getSystemClassLoader ClassLoader.getSystemClassLoader}). This is\nthe class loader which typically loads the class containing the application <code>main</code> method.\nThe <code>premain</code> methods will be run under the same security and classloader \nrules as the application <code>main</code> method.\nThere are no modeling restrictions on what the agent <code>premain</code> method may do.\nAnything application <code>main</code> can do, including creating threads, is legal from <code>premain</code>.\n\n<P>\nEach agent is passed its agent options via the <code>agentArgs</code> parameter.\nThe agent options are passed as a single string,\nany additional parsing should be performed by the agent itself.\n\n<P>\nIf the agent cannot be resolved \n(for example, because the agent class cannot be loaded,\nor because the agent class does not have an appropriate <code>premain</code> method), the JVM will abort.\nIf a <code>premain</code> method throws an uncaught exception, the JVM will abort.\n\n\n\n<h3>Starting Agents After VM Startup</h3>\n\n<p>\nAn implementation may provide a mechanism to start agents sometime after the\nthe VM has started. The details as to how this is initiated are implementation \nspecific but typically the application has already started and its <code>\nmain</code> method has already been invoked. In cases where an implementation\nsupports the starting of agents after the VM has started the following applies:\n\n<ol>\n  <li><p>The manifest of the agent JAR must contain the attribute <code>Agent-Class</code>. \n      The value of this attribute is the name of the <i>agent class</i>. </p></li> \n      \n  <li><p>The agent class must implement a public static <code>agentmain</code> method. </p></li>\n\n  <li><p>The system class loader (\n      {@link java.lang.ClassLoader#getSystemClassLoader ClassLoader.getSystemClassLoader}) must\n      support a mechanism to add an agent JAR file to the system class path. <p></li>\n</ol>  \n\n<P>\nThe agent JAR is appended to the system class path. This is the class loader that typically loads \nthe class containing the application <code>main</code> method. The agent class is loaded and the\nJVM attempts to invoke the <code>agentmain</code> method. The JVM first attempts to invoke \nthe following method on the agent class:\n\n<blockquote>\n<code>public static void\nagentmain(String agentArgs, Instrumentation inst);\n</code>\n</blockquote>\n\n<P>\nIf the agent class does not implement this method then the JVM will attempt to invoke:\n\n<blockquote>\n<code>public static void\nagentmain(String agentArgs);\n</code>\n</blockquote>\n\n<P>\nThe agent class may also have an <code>premain</code> method for use when the agent is started\nusing a command-line option. When the agent is started after VM startup the <code>premain</code>\nmethod is not invoked.\n\n\n<P>\nThe agent is passed its agent options via the <code>agentArgs</code> parameter.\nThe agent options are passed as a single string,\nany additional parsing should be performed by the agent itself. \n\n<P>\nThe <code>agentmain</code> method should do any necessary initialization \nrequired to start the agent. When startup is complete the method should \nreturn. If the agent cannot be started\n(for example, because the agent class cannot be loaded,\nor because the agent class does not have a conformant <code>agentmain</code> method), the JVM will\nnot abort. If the <code>agentmain</code> method throws an uncaught exception it will be ignored.\n\n\n\n<h3>Manifest Attributes</h3>\nThe following manifest attributes are defined for an agent JAR file:\n<blockquote>\n<dl>\n<dt><code>Premain-Class</code></dt>\n<dd>\n                        When an agent is specified at JVM launch time this attribute\n\t\t\tspecifies the agent class.\n\t\t\tThat is, the class containing the <code>premain</code> method.\n                        When an agent is specified at JVM launch time this attribute\n\t\t\tis required. If the attribute is not present the JVM will abort.\n                        Note: this is a class name, not a file name or path.\t\t\t\t\t\t\t\n</dd>\n\n<dt><code>Agent-Class</code></dt>\n<dd>\n                        If an implementation supports a mechanism to start agents \n                        sometime after the VM has started then this attribute specifies\n                        the agent class.\n                        That is, the class containing the <code>agentmain</code> method.\n                        This attribute is required, if it is not present the agent\n                        will not be started.\n                        Note: this is a class name, not a file name or path.\n</dd>\t\t\t\n\n<dt><code>Boot-Class-Path</code></dt>\n<dd>\n                        A list of paths to be searched by the bootstrap class\n                        loader. Paths represent directories or libraries\n                        (commonly referred to as JAR or zip libraries on\n                        many platforms). \t\t\t\n                        These paths are searched by the\n                        bootstrap class loader after the platform specific\n                        mechanisms of locating a class have failed.\n                        Paths are searched in the order listed.\n                        Paths in the list are separated by one or more spaces.\n                        A path takes the syntax of the path component of a\n                        hierarchical URI. The path is\n                        absolute if it begins with a slash character (\'/\'),\n                        otherwise it is relative. A relative path is resolved\n                        against the absolute path of the agent JAR file.\n                        Malformed and non-existent paths are ignored.\t\n\t\t\tWhen an agent is started sometime after the VM has\n\t\t\tstarted then paths that do not represent a JAR file\n\t\t\tare ignored.\n                        This attribute is optional.\n</dd>\n<dt><code>Can-Redefine-Classes</code></dt>\n<dd>\n                        Boolean (<code>true</code> or <code>false</code>, case irrelevant).\n                        Is the ability to redefine classes\n                        needed by this agent.\n                        Values other than <code>true</code> are considered <code>false</code>.\n                        This attribute is optional, the default is <code>false</code>.\n</dd>\n<dt><code>Can-Retransform-Classes</code></dt>\n<dd>\n                        Boolean (<code>true</code> or <code>false</code>, case irrelevant).\n                        Is the ability to retransform classes\n                        needed by this agent.\n                        Values other than <code>true</code> are considered <code>false</code>.\n                        This attribute is optional, the default is <code>false</code>.\n</dd>\n<dt><code>Can-Set-Native-Method-Prefix</code></dt>\n<dd>\n                        Boolean (<code>true</code> or <code>false</code>, case irrelevant).\n                        Is the ability to set native method prefix needed by this agent.\n                        Values other than <code>true</code> are considered <code>false</code>.\n                        This attribute is optional, the default is <code>false</code>.\n</dd>\n</dl>\n</blockquote>\n\n<p> \nAn agent JAR file may have both the <code>Premain-Class</code> and <code>Agent-Class</code>\nattributes present in the manifest. When the agent is started on the command-line using\nthe <code>-javaagent</code> option then the <code>Premain-Class</code> attribute\nspecifies the name of the agent class and the <code>Agent-Class</code> attribute is\nignored. Similarly, if the agent is started sometime after the VM has started, then\nthe <code>Agent-Class</code> attribute specifies the name of the agent class\n(the value of <code>Premain-Class</code> attribute is ignored).\n\n<h2>Related Documentation</h2>\n\nFor tool documentation, please see:\n<ul>\n  <li><a href=\"{@docRoot}/../technotes/tools/index.html\">JDK Tools and Utilities</a>\n</ul>\n\n@since JDK1.5\n@revised 1.6\n\n',directive
'<p>\n The modal nesting level increases by one each time the\n <code>ModalContext.run</code> method is called within the dynamic scope\n of another call to <code>ModalContext.run</code>.\n ',directive
'<p>\n A property change event is reported if the current value of the \n preference actually changes from its previous value. ',directive
'<h3>Automatically-cleared references</h3>\n\nSoft and weak references are automatically cleared by the collector before\nbeing added to the queues with which they are registered, if any.  ',directive
'@return the revision that this region belongs to\n',non-directive
'@link #end()} is at <code>end</code>, keeping\n {',non-directive
' Sets the selected range. ',non-directive
'@return the validator\n',non-directive
'@see Display#getSystemColor(int)\n',non-directive
' Null-safe check if the specified map is empty.\n ',non-directive
'@param trueClosure  the closure called if the predicate is true\n ',directive
' <p>\n <b>You can only add the layout to a container whose only child is the\n table/tree control you want the layouts applied to.</b>\n </p>\n \n ',directive
?,non-directive
' RowLayoutFactory creates and initializes row layouts. There are two ways to\n use RowLayoutFactory. Normally, it is used as a shorthand for writing\n \"new RowLayout()\" and initializing a bunch of fields. In this case the main\n benefit is a more concise syntax and the ability to create more than one\n identical RowLayout from the same factory. Changing a property of the factory\n will affect future layouts created by the factory, but has no effect on\n layouts that have already been created.\n \n @since 3.5\n',non-directive
' Display the given error message. The currently displayed message is saved\n and will be redisplayed when the error message is set to\n <code>null</code>.\n \n @param newErrorMessage\n            the newErrorMessage to display or <code>null</code>\n',directive
' Undoes everything that was done by a call to {@link #createColor(RGB)}.\n \n @since 3.1 \n\n @param descriptor RGB value of the color to dispose\n',directive
'</p>\n',non-directive
' Returns the root node.\n Note that the root node is a special internal node\n that is used to collect together all the nodes that\n have no parent; it is not given out to clients.\n\n @return the root node\n',directive
' Returns the image descriptor for this node.\n \n',non-directive
' Checks to see if there are more entries still to be iterated.\n\n ',non-directive
'@since Commons Collections 1.0\n ',non-directive
'@throws NullPointerException if iterators collection is null or contains a null\n ',non-directive
'@param blockedName The name of the locked operation.\n',non-directive
' <p>Returns a previously-allocated resource or allocates a new one if none\n exists yet. The resource will remain allocated for at least the lifetime\n of this resource manager. If necessary, the resource will be deallocated \n automatically when the resource manager is disposed.</p>\n \n <p>The resources returned from this method are reference counted and may be shared \n internally with other resource managers. They should never be disposed outside of the \n ResourceManager framework, or it will cause exceptions in other code that shares\n them. For example, never call {@link org.eclipse.swt.graphics.Resource#dispose()} \n on anything returned from this method.</p>\n \n <p>\n Callers may safely downcast the result to the resource type associated with \n the descriptor. For example, when given an ImageDescriptor, the return\n value of this method may be downcast to Image.\n </p>\n \n <p>\n This method should only be used for resources that should remain\n allocated for the lifetime of the resource manager. To allocate shorter-lived\n resources, manage them with <code>create</code>, and <code>destroy</code>\n rather than this method.\n </p>\n \n <p>\n This method should never be called on the global resource manager,\n since all resources will remain allocated for the lifetime of the app and\n will be effectively leaked.\n </p>\n \n @param descriptor identifier for the requested resource\n @return the requested resource. Never null.\n @throws DeviceResourceException if the resource does not exist yet and cannot\n be created for any reason.\n \n @since 3.3\n',directive
' A mutator for the button providing the toggle option. If the button\n exists, then it will automatically get the text set to the current toggle\n message, and its selection state set to the current selection state.\n \n @param button\n            The button to use; must not be <code>null</code>.\n',directive
'The distance <var>d</var> between two successive colors is\n in [120&#176;,&nbsp;180&#176;].\n ',directive
'<p>\n The valid message types are one of <code>NONE</code>,\n <code>INFORMATION</code>,<code>WARNING</code>, or\n <code>ERROR</code>.\n ',directive
'<li>Unmodifiable - ensures the collection cannot be altered\n',non-directive
?,non-directive
?,non-directive
'<LI><code>BatchUpdateException</code> -- thrown to indicate that not all\n\t\t commands in a batch update executed successfully\n\t</UL>\n',non-directive
' Moves the range by <code>delta</code> lines, keeping {@link #length()} constant. The\n resulting start line must be &gt;= 0.\n\n @param delta the number of lines to shift the range\n @throws LineIndexOutOfBoundsException if <code>-delta</code> &gt; {@link #start()}\n',directive
'Using it requires a knowledge of SWT, but does\nnot require familiarity with any of the other JFace modules. ',directive
'@link SWT#COLOR_BLUE blue},\n {',non-directive
'@param array  the array over which to iterate\n ',non-directive
'Changing a property of the factory\n will affect future layouts created by the factory, but has no effect on\n layouts that have already been created.\n \n',directive
'<li>minSize(1,1)</li>\n ',non-directive
'@return The preference store; this value may be <code>null</code> if no\n         preference is being used.\n',directive
'@return the original (before applying diff information) line range of this change region\n',directive
' Justify specifies whether the controls in a row should be fully\n justified, with any extra space placed between the controls.\n \n @param justify\n            the justify status\n @return this\n',directive
'<p> The {',non-directive
' Sets or removes the property change listener for this field editor.\n <p>\n Note that field editors can support only a single listener.\n </p>\n\n @param listener a property change listener, or <code>null</code>\n  to remove\n',directive
'@link #length() length} &gt; 0, i.e. ',directive
' Convenience API. ',non-directive
' Image registry key for warning image (value\n <code>\"dialog_warning_image\"</code>).\n \n',non-directive
'</p>\n\n<h2>\nPackage Specification</h2>\n<tt>IQuickAssistAssistant</tt> defines the concept of the quick assist assistant add-on.\n',directive
'Only the value in the preference store \n and in the font registry is updated.\n ',directive
'Once a viewer\'s input is set, the viewer becomes active. ',directive
'<li>ListOrdered - ensures that insertion order is retained\n',non-directive
' EnumerationUtils is not normally instantiated.\n',non-directive
'<LI>Miscellaneous features, including performance hints, the use of character\n\t  streams, full precision for <code>java.math.BigDecimal</code> values,\n\t  additional security, and\n\t  support for time zones in date, time, and timestamp values. \n',directive
' Gets a Integer from a Map in a null-safe manner.\n <p>\n The Integer is obtained from the results of {@link #getNumber(Map,Object)}.\n\n @param map  the map to use\n @param key  the key to look up\n @return the value in the Map as a Integer, <code>null</code> if null map input\n',non-directive
'@return the Apply button\n',non-directive
'Synchronized\" classes\ncan be useful when you need to prevent all access to a collection via\na single lock, at the expense of poorer scalability.',directive
' Tests whether a verify key listener can be added either using <code>prependVerifyKeyListener</code>\n or {@link #appendVerifyKeyListener(VerifyKeyListener)}.\n\n @return <code>true</code> if adding verify key listeners is supported\n',non-directive
'@param style either <code>GRID</code> or <code>FLAT</code>\n',non-directive
' Returns the nesting depth of running operations.\n \n',non-directive
' Gets the value from the pair.\n\n @return the value\n',non-directive
'Clients of JFace should make ids by adding to this number.\n',directive
'If the x or y values are set to SWT.DEFAULT, the\n            control\'s computeSize() method will be used to obtain that\n            dimension of the preferred size.\n ',directive
' Adds any last-minute pages to this wizard.\n <p>\n This method is called just before the wizard becomes visible, to give the \n wizard the opportunity to add any lazily created pages.\n </p>\n',directive
?,non-directive
'@deprecated as of 3.3, this class is no longer used.\n',directive
' Adds a property change listener to this <code>ColorSelector</code>.\n Events are fired when the color in the control changes via the user\n clicking an selecting a new one in the color dialog. No event is fired in\n the case where <code>setColorValue(RGB)</code> is invoked.\n \n @param listener\n            a property change listener\n @since 3.0\n',directive
' Returns the root node.\n ',non-directive
' The symbolic font name for the banner font (value\n <code>\"org.eclipse.jface.bannerfont\"</code>).\n',non-directive
' Constructs the tray\'s widgets and displays the tray in this dialog. ',non-directive
' Returns the dialog settings for this wizard.\n <p>\n The dialog store is used to record state between\n wizard invocations (for example, radio button selections,\n last directory, etc.).\n </p>\n\n @return the dialog settings, or <code>null</code> if none\n',directive
'</p>\nContains everything needed to:\n<ul>\n  ',non-directive
'@link ListIterator#add} and\n {',non-directive
'This job \n is now handled by the ColorRegistry.\n',directive
' Creates the buttons for this dialog\'s button bar.\n <p>\n The <code>WizardDialog</code> implementation of this framework method\n prevents the parent composite\'s columns from being made equal width in\n order to remove the margin between the Back and Next buttons.\n </p>\n \n @param parent\n            the parent composite to contain the buttons\n',directive
' Sets the width and height hints. The width and height hints override\n the control\'s preferred size. If either hint is set to SWT.DEFAULT,\n the control\'s preferred size is used.\n \n @param hint size (pixels) to be used instead of the control\'s preferred size. If\n the x or y values are set to SWT.DEFAULT, the control\'s computeSize() method will\n be used to obtain that dimension of the preferred size.\n @return this\n',directive
'@param validationStrategy either {',directive
'<p>In general terms, creating a viewer involves the following steps:\n<ul>\n',directive
'<li>Typed - ensures that only elements that are of a specific type can be added\n',directive
' Gets an iterator that provides an ordered iteration over the elements\n contained in a collection of {@link Iterator}s.\n <p>\n Given two ordered {@link Iterator}s <code>A</code> and <code>B</code>,\n the {@link Iterator#next()} method will return the lesser of\n <code>A.next()</code> and <code>B.next()</code> and so on.\n <p>\n The comparator is optional. If null is specified then natural order is used.\n\n @param comparator  the comparator to use, may be null for natural order\n @param iterators  the iterators to use, not null or empty or contain nulls\n @return a combination iterator over the iterators\n @throws NullPointerException if iterators collection is null or contains a null\n @throws ClassCastException if the iterators collection contains the wrong object type\n',directive
'@return the description text for this dialog page, \n  or <code>null</code> if none\n',directive
'@exception java.io.IOException\n                if there is a problem loading this store\n',directive
' Retained for backward compatibility.\n \n',directive
'@return this\n',non-directive
'@param preferenceStore The preference store to propogate changes to\n ',non-directive
' Sets the current value of the string-valued preference with the\n given name.\n <p>\n A property change event is reported if the current value of the \n preference actually changes from its previous value. In the event\n object, the property name is the name of the preference, and the\n old and new values are wrapped as objects.\n </p>\n <p>\n Note that the preferred way of re-initializing a preference to its\n default value is to call <code>setToDefault</code>.\n </p>\n\n @param name the name of the preference\n @param value the new current value of the preference\n',directive
'The details as to how this is initiated are implementation \nspecific but typically the application has already started and its <code>\nmain</code> method has already been invoked. ',directive
'\n<p>\nThis package contains implementations of the\n{@link java.util.Set Set} and\n{@link java.util.SortedSet SortedSet} interfaces.\n<p>\nThe implementations are in the form of direct implementations and decorators.\nA decorator wraps another implementation of the interface to add some\nspecific additional functionality.\n<p>\nThe following implementations are provided in the package:\n<ul>\n<li>CompositeSet - a set that combines multiple sets into one\n</ul>\nThe following decorators are provided in the package:\n<ul>\n<li>Synchronized - synchronizes method access for multi-threaded environments\n<li>Unmodifiable - ensures the collection cannot be altered\n<li>Predicated - ensures that only elements that are valid according to a predicate can be added\n<li>Typed - ensures that only elements that are of a specific type can be added\n<li>Transformed - transforms each element added\n<li>ListOrdered - ensures that insertion order is retained\n<li>MapBackedSet - a set formed by decorating a Map\n</ul>\n</pre>\n',directive
?,non-directive
' The field editor preference page implementation of this <code>IPreferencePage</code>\n (and <code>IPropertyChangeListener</code>) method intercepts <code>IS_VALID</code> \n events but passes other events on to its superclass.\n',directive
'\nProvides a general framework for creating and managing\nwindows.\n<h2>\nPackage Specification</h2>\nA JFace window is an object that has no visual representation (no widgets)\nuntil it is told to open. All JFace windows, including dialogs, are instances\nof the abstract class <tt>Window</tt> or a subclass. This package contains\nthe base window classes:\n<tt>Window</tt> itself, which provides support\nfor a basic windows; and <tt>ApplicationWindow</tt>, which provides ready-to-use\nsupport for a high-level \"main window\" with standard menus, tool bar, and\nstatus line. Both of these classes may be subclassed to define additional\ntypes of window as required.\n<p>This package also contains <tt>WindowManager</tt>, instance of which\nare used for managing a group of windows. Window managers are useful in\napplications which create many different windows (dialogs, wizards, etc.)\nin addition to a main window. Window managers are not required for simple\napplications.\n<p>The only global state maintained by classes in this package is a default\nimage for window title bars (<tt>Window.setDefaultImage</tt>).\n',directive
'@param defaultValue\n ',non-directive
'If the value has not been\n established by an earlier call to <code>setFontRegistry</code>, is it\n initialized to\n <code>new FontRegistry(\"org.eclipse.jface.resource.jfacefonts\")</code>.\n ',directive
'@return the <code>RGB</code> data, or <code>null</code> if the symbolic name\n is not valid.\n',directive
'@return an object capturing the enable/disable state\n',non-directive
'Returns the default-default value (<code>0</code>) if there\n is no default preference with the given name, or if the default \n value cannot be treated as an integer.\n\n ',directive
'Most classes in the package contain\noperations based on time-outs in addition to indefinite waits.  ',directive
' Sets or removes the property change listener for this field editor.\n ',non-directive
' Returns the symbolic font name used by this field editor.\n\n ',non-directive
?,non-directive
'@since 2.0\n ',non-directive
' Returns this field editor\'s label component.\n ',non-directive
'The margins\n specify the number of pixels of horizontal and vertical margin that will\n be placed along the left, right, top, and bottom edges of the layout.\n ',non-directive
'@param selection the selection to delete\n ',non-directive
'<LI> <I>Problem diagnosis by end users and system administrators</I>. \n          ',non-directive
' Returns an RGB that lies between the given foreground and background\n colors using the given mixing factor. A <code>factor</code> of 1.0 will produce a\n color equal to <code>fg</code>, while a <code>factor</code> of 0.0 will produce one\n equal to <code>bg</code>.\n @param bg the background color\n @param fg the foreground color\n @param factor the mixing factor, must be in [0,&nbsp;1]\n\n @return the interpolated color\n',directive
'If you are not on the UI\n thread then wrap the call with a\n <code>PlatformUI.getWorkbench().getDisplay().synchExec()</code> in order to\n guarantee the correct result. ',directive
'@param originalDevice this must be the same Device that was passed into the\n original Color\'s constructor.\n ',directive
' Loads this preference store from the given input stream. Default\n preference values are not affected.\n \n @param in\n            the input stream\n @exception java.io.IOException\n                if there is a problem loading this store\n',non-directive
' Horizontal spacing in dialog units (value 4).\n',non-directive
'The label is typically presented to the left of the entry field.\n\n ',directive
' Image registry key for error image (value\n <code>\"dialog_error_image\"</code>).\n \n',non-directive
'@param map  the map to use\n ',non-directive
'The logging APIs support a general-purpose\n                       filter mechanism that allows application code to attach arbitrary filters to \n                       control logging output. \n                       \n',non-directive
'\n\nProvides classes and interfaces for parsing and managing\ncertificates, certificate revocation lists (CRLs), and \ncertification paths. ',non-directive
'@link org.apache.commons.collections.Closure Closure},\n{',non-directive
'For example, an implementation may provide a mechanism that allows a tool to \n<i>attach</i> to a running application, and initiate the loading of the tool\'s agent into\nthe running application. ',directive
' A preference manager maintains a hierarchy of preference nodes and\n associated preference pages.\n',non-directive
'@return this\n',non-directive
'A modal dialog without a parent is not prevented\n from disappearing behind the application\'s other windows, making it very\n confusing for the user.\n ',directive
'@param image the image for this dialog page, \n  or <code>null</code> if none\n',directive
'In the particular case of\nConcurrentHashMap, it safely permits any number of concurrent reads as\nwell as a tunable number of concurrent writes.  ',directive
' Creates a new empty wizard.\n',non-directive
'This method fails if the value does not represent a double.\n\n ',non-directive
'@return a RowLayoutFactory that creates RowLayouts with no margins\n ',directive
'This method also sets the corresponding\n key in the JFace font registry to the value and fires a \n property change event to listeners on the preference store.\n \n',directive
'Subclasses can implement different ways of describing a font. ',directive
'Implementations make a &quot;best effort&quot; to detect\ntime-outs as soon as possible after they occur.  ',directive
'@param value the new default value for the preference\n',non-directive
' Creates a new font field editor \n',non-directive
'@param image the image for this preference page, or \n   <code>null</code> if none\n ',directive
'@return the dialog\'s current tray, or <code>null</code> if there is none\n',directive
'<strong>NOTE</strong> This value is not currently in use in the \n default implementation.\n ',directive
'Use this method if the\n error object being displayed does not contain child items, or if you wish\n to display all such items without filtering.\n \n',directive
'<p>Note: None of the classes in this package maintain global state.\n<br>&nbsp;\n',directive
' <p>Returns a FontDescriptor that is equivalent to the reciever, but\n has the given style bits, in addition to any styles the reciever already has.</p>\n \n <p>Does not modify the reciever.</p>\n \n @param style a bitwise combination of SWT.NORMAL, SWT.ITALIC and SWT.BOLD\n @return a new FontDescriptor with the given additional style bits\n @since 3.3\n',directive
'@return a newly created layout or <code>null</code> for no layout\n',directive
'@since 3.4\n',non-directive
'Note \n that disposing the original Image will cause the descriptor to become invalid.\n \n',directive
' Find the <code>IPreferenceNode</code> that has data the same id as the\n supplied value.\n \n',non-directive
' Returns the image associated with the given key in this registry, \n or <code>null</code> if none.\n \n',directive
'@link Layout} used to set the size of a table\n in a consistent way even during a resize unlike a {',directive
'</p>\n <p>\n Implementors are responsible for disposing of their wizards.\n ',directive
' {@inheritDoc}\n @deprecated use {@link #setInput(Object)}\n',directive
?,non-directive
' Starting button id reserved for use by clients of JFace (value 1024).\n Clients of JFace should make ids by adding to this number.\n',directive
?,non-directive
' The <code>IPreferenceStore</code> interface represents a table mapping\n named preferences to values. If there is no value for a given name, \n then that preferences\'s default value is returned; and if there is no\n default value for that preference, then a default-default value is returned.\n The default-default values for the primitive types are as follows:\n <ul>\n \t<li><code>boolean</code> = <code>false</code></li>\n \t<li><code>double</code> = <code>0.0</code></li>\n \t<li><code>float</code> = <code>0.0f</code></li>\n \t<li><code>int</code> = <code>0</code></li>\n  <li><code>long</code> = <code>0</code></li>\n \t<li><code>String</code> = <code>\"\"</code> (the empty string)</li>\n </ul>\n <p>\n Thus a preference store maintains two values for each of a set of\n names: a current value and a default value.\n The typical usage is to establish the defaults for all known preferences\n and then restore previously stored values for preferences whose values \n were different from their defaults. After the current values of\n the preferences have been modified, it is a simple matter to write\n out only those preferences whose values are different from their defaults.\n This two-tiered approach to saving and restoring preference setting\n minimized the number of preferences that need to be persisted; indeed,\n the normal starting state does not require storing any preferences\n at all.\n </p>\n <p>\n A property change event is reported whenever a preferences current\n value actually changes (whether through <code>setValue</code>,\n <code>setToDefault</code>, or other unspecified means). Note, however,\n that manipulating default values (with <code>setDefault</code>)\n does not cause such events to be reported.\n </p>\n <p>\n Clients who need a preference store may implement this interface or \n instantiate the standard implementation <code>PreferenceStore</code>.\n </p>\n\n @see PreferenceStore\n',directive
'@return an array of the iterator contents\n ',non-directive
'@return the value in the Map as a Short, <code>null</code> if null map input\n',non-directive
'@link BrowserInformationControl}.\n\n ',non-directive
'@param brightness the requested brightness, in [0,&nbsp;1]\n ',non-directive
'<li>Create the composite</li>\n ',directive
' Removes the subnode of this preference node with the given node id.\n\n @param id the subnode id\n @return the removed subnode, or <code>null</code> if none\n',non-directive
'@return the HTML contents\n',non-directive
' Creates a Closure that will call the closure repeatedly until the \n predicate returns false.\n\n @see org.apache.commons.collections.functors.WhileClosure\n \n @param predicate  the predicate to use as an end of loop test, not null\n @param closure  the closure to call repeatedly, not null\n @return the <code>while</code> closure\n @throws IllegalArgumentException if either argument is null\n',directive
' The label for close buttons.\n',non-directive
' Causes the <code>run()</code> method of the runnable to\n be invoked just before the receiver is disposed. The runnable\n can be subsequently canceled by a call to <code>cancelDisposeExec</code>.\n \n @param r runnable to execute.\n',directive
'The data type mapping is specified in the\n{',non-directive
'@since 3.0\n',non-directive
?,non-directive
'Calling dispose() on the nested registry will deallocate\n everything allocated for the nested registry without affecting the rest\n of the global registry.\n ',directive
?,non-directive
'@param max\n            a value greater than 0.\n ',directive
'<p>\n The string representation of a point has the form\n <code><it>x</it>,<it>y</it></code> where\n <code><it>x</it></code> and <code><it>y</it></code>\n are string representations of integers.\n ',directive
'@param remaining the number of lines to remain in the receiver, must be in [1, {',directive
'If the preference\'s current\n is different from its old default value, its current value is\n unaffected. ',directive
'The agent class is loaded and the\nJVM attempts to invoke the <code>agentmain</code> method. ',directive
?,non-directive
'</p> \n \n ',non-directive
' A blockage has occured. Show the blockage and \n forward any actions to blockingMonitor. \n <b>NOTE:</b> This will open any blocked notification immediately\n even if there is a modal shell open.\n \n @param parentShell The shell this is being sent from. If the parent\n shell is <code>null</code> the behavior will be the same as\n IDialogBlockedHandler#showBlocked(IProgressMonitor, IStatus, String)\n \n @param blocking The monitor to forward to. This is most\n important for calls to <code>cancel()</code>.\n @param blockingStatus The status that describes the blockage\n @param blockedName The name of the locked operation.\n @see IDialogBlockedHandler#showBlocked(IProgressMonitor, IStatus, String)\n',directive
'@see IMessageProvider\n',non-directive
?,non-directive
'@param name the name of the preference\n ',non-directive
'Returns the default-default value (<code>0.0</code>) if there\n is no preference with the given name, or if the current value \n cannot be treated as a double.\n\n ',directive
'<p>\nClass <code>Throwable</code> encompasses objects that may be thrown by the\nthrow statement (&sect;14.16). ',directive
'<li>ReferenceIdentityMap - allows the garbage collector to collect keys and values using == for comparison\n',non-directive
?,non-directive
' The ellipsis is the string that is used to represent shortened text.\n \n',non-directive
'@since 3.1\n',non-directive
' Return the transparent pixel for the receiver.\n <strong>NOTE</strong> This value is not currently in use in the \n default implementation.\n @return int\n @since 3.3\n',directive
'</p>\n \n ',non-directive
'\n\nThe classes and interfaces in this package have been\nsuperseded by classes in the java.security package.\n',non-directive
' Resizes the range by <code>delta</code> lines by moving the start offset, {',non-directive
'Use this method if the\n error object being displayed contains child items <it>and </it> you wish\n to specify a mask which will be used to filter the displaying of these\n children. ',directive
' Returns a value indicating if the message is a an information message, a\n warning message, or an error message.\n <p>\n Returns one of <code>NONE</code>,<code>INFORMATION</code>,\n <code>WARNING</code>, or <code>ERROR</code>.\n </p>\n \n @return the message type\n',directive
'<li>NodeCachingLinkedList - a linked list that caches the storage nodes for a performance gain</li>\n</ul>\n',directive
'\nThis package provides the quick assist assistant add-on for an <tt>ISourceViewer</tt>.\n',directive
'@link javax.management.MBeanServer MBeanServer}\n        by calling\n        {',directive
?,non-directive
'@see #fillDefaults\n',non-directive
'If an error contains additional detailed\n information then a Details button is automatically supplied, which shows or\n hides an error details viewer when pressed by the user.\n \n',non-directive
'<p>\n This method will handle primitive arrays as well as object arrays.\n ',non-directive
'\nProvides support for shared UI resources such as menus,\ntool bars, and status lines.\n<h2>\nPackage Specification</h2>\nContribution managers coordinate contributions to shared UI resources such\nas menus, menu bars, tool bars, and status lines. <tt>ContributionManager</tt>\nmaintains the contributions as a dynamic list of contribution items (<tt>IContributionItems</tt>).\nSeparators (<tt>Separator</tt>) can be included in contribution lists to\nbreak up the list\'s visual representation. Internally, contribution lists\ncan be organized into named groups via special group markers (<tt>GroupMarker</tt>)\nto facilitate programatic insertion at specific positions within the list.\n<p>Three specific contribution managers are provided: a status line manager\n(<tt>StatusLineManager</tt>), a tool bar manager (<tt>ToolBarManager</tt>),\nand a hierarchical menu manager (<tt>MenuManager</tt>).\n<p>Actions (<tt>IAction</tt>) are commands which can be triggered from\nthe UI, like the ones found in menus, toolbars, and buttons. Menus and\ntools bars are typically populated with contribution items that delegate\nto actions (<tt>ActionContributionItem</tt>).\n<p>Note: None of the classes in this package maintain global state.\n<br>&nbsp;\n',directive
'@link Layout} used to maintain\n {',non-directive
'@return an array of completion proposals or <code>null</code> if no\n         proposals are possible\n',non-directive
'@param store the preference store\n ',non-directive
'@param descriptor description of the font to destroy\n',non-directive
' Convenience method to open a standard warning dialog.\n \n @param parent\n            the parent shell of the dialog, or <code>null</code> if none\n @param title\n            the dialog\'s title, or <code>null</code> if none\n @param message\n            the message\n',directive
' A blockage has occured. Show the blockage when there is \n no longer any modal shells in the UI and forward any actions \n to blockingMonitor. \n \n <b>NOTE:</b> As no shell has been specified this method will\n not open any blocked notification until all other modal shells\n have been closed.\n \n @param blocking The monitor to forward to. This is most\n important for calls to <code>cancel()</code>.\n @param blockingStatus The status that describes the blockage\n @param blockedName The name of the locked operation.\n',directive
' Sets the revision information to be drawn and triggers a redraw.\n\n ',non-directive
'<p>\n Note that the current value of the preference is affected if\n the preference\'s current value was its old default value, in which\n case it changes to the new default value. ',directive
' Creates a font field editor without a preview.\n \n',non-directive
'This iterator is fail-fast\n and will not tolerate concurrent modifications.\n \n',directive
'If this value is <code>null</code>,\n            then no preference will be modified.\n',directive
'@param name the name of the preference this field editor works on\n ',non-directive
'@return  the value in the map as a number, or defaultValue if the\n    original value is null, the map is null or the number conversion\n    fails\n',non-directive
' Replace the information control.\n\n @param informationPresenterControlCreator the information presenter control creator\n @param contentBounds the bounds of the content area of the information control\n @param information the information to show\n @param subjectArea the subject area\n @param takeFocus <code>true</code> iff the replacing information control should take focus\n',directive
'<li>Transformed - transforms each element added\n',non-directive
' Returns all the sections in this dialog settings.\n \n',non-directive
?,non-directive
'@param value the value to be converted\n ',non-directive
' Create a new Transformer that calls two transformers, passing the result of\n the first into the second.\n \n @see org.apache.commons.collections.functors.ChainedTransformer\n \n @param transformer1  the first transformer\n @param transformer2  the second transformer\n @return the transformer\n @throws IllegalArgumentException if either transformer is null\n',directive
'To ensure there are N pixels available for the content of the column,\n assign N+COLUMN_TRIM for the column width.\n \n',directive
'@return <code>true</code> if the given status should be displayed, and\n         <code>false</code> otherwise\n ',non-directive
'The width and height hints override\n the control\'s preferred size. ',directive
' @param element must be an instance of <code>IPreferenceNode</code>.\n @see org.eclipse.jface.viewers.ILabelProvider#getImage(java.lang.Object)\n',directive
'<LI> The JDBC 2.1 core API\n ',non-directive
'Familiarity\nwith other JFace modules is not required.\n',directive
'@since 3.2\n',non-directive
'@param limit the limit on the number of character in the text\n  input field, or <code>UNLIMITED</code> for no limit\n\n',directive
'Positive values move toward the lower-right, negative\n values move toward the upper-left.\n \n',directive
?,non-directive
' Informs this field editor\'s listener, if it has one, about a change to\n the value (<code>VALUE</code> property) provided that the old and new\n values are different.\n <p>\n This hook is <em>not</em> called when the scale is initialized (or\n reset to the default value) from the preference store.\n </p>\n',directive
?,non-directive
'</p>\n',non-directive
' Returns the value control for this field editor. The value control\n displays the currently selected font name.\n @param parent The Composite to create the viewer in if required\n @return the value control\n',directive
'In the event\n object, the property name is the name of the preference, and the\n old and new values are wrapped as objects.\n ',directive
' Returns the HTML from {@link #getHtml()}.\n This is a fallback mode for platforms where the {@link BrowserInformationControl}\n is not available and this input is passed to a {@link DefaultInformationControl}.\n\n @return {@link #getHtml()}\n',non-directive
'<p>\n The closure at array location 0 is called if the predicate at array \n location 0 returned true. ',directive
'<h2>Timing</h2>\n\nThe {',non-directive
'@link java.util.concurrent.TimeUnit} class provides multiple\ngranularities (including nanoseconds) for specifying and controlling\ntime-out based operations.  ',directive
' Moves this range such that the {@link #end()} is at <code>end</code>, keeping\n {@link #length()} constant.\n\n @param end the new end\n @throws LineIndexOutOfBoundsException if <code>end</code> &lt;= {@link #start()}\n',non-directive
'@param value\n            the value to be associated with the <code>key</code>\n',non-directive
?,non-directive
'@param value the int value\n ',non-directive
' Creates a Closure that will invoke a specific method on the closure\'s\n input object by reflection.\n\n @see org.apache.commons.collections.functors.InvokerTransformer\n @see org.apache.commons.collections.functors.TransformerClosure\n \n @param methodName  the name of the method\n @param paramTypes  the parameter types\n @param args  the arguments\n @return the <code>invoker</code> closure\n @throws IllegalArgumentException if the method name is null\n @throws IllegalArgumentException if the paramTypes and args don\'t match\n',directive
' Adds a listener for input changes to this input change provider.\n ',non-directive
'</p>\n ',non-directive
'\n\nProvides classes for performing arbitrary-precision integer arithmetic\n(BigInteger) and arbitrary-precision decimal arithmetic (BigDecimal).\nBigInteger is analogous to Java\'s primitive integer types except that it\nprovides arbitrary precision, hence operations on BigIntegers do not overflow\nor lose precision.  In addition to standard arithmetic operations, BigInteger\nprovides modular arithmetic, GCD calculation, primality testing, prime\ngeneration, bit manipulation, and a few other miscellaneous operations.\n\nBigDecimal provides arbitrary-precision signed decimal numbers suitable for\ncurrency calculations and the like.   BigDecimal gives the user complete\ncontrol over rounding behavior, allowing the user to choose from a\ncomprehensive set of eight rounding modes.\n\n<!--\n<h2>Related Documentation</h2>\n\nFor overviews, tutorials, examples, guides, and tool documentation, please see:\n<ul>\n  <li><a href=\"\">##### REFER TO NON-SPEC DOCUMENTATION HERE #####</a>\n</ul>\n-->\n\n@since JDK1.1\n',directive
'The spacing is\n the distance between items within the layout.\n \n',non-directive
'@since 3.5\n',non-directive
' Changes the rendering mode and triggers redrawing if needed.\n\n @param renderingMode the rendering mode\n @since 3.3\n',non-directive
'\nProvides JFace support for long-running operations.\n<h2>\nPackage Specification</h2>\nLong-running operations must be dealt with specially in order to keep the\nUI helpful and responsive. Typically this involves temporarily disabling\nmost controls and displaying a busy cursor and progress indicator; while\nthe operation is in progress, the only requests that will be accepted will\nbe ones to cancel the operation.\n<p>The <tt>IRunnableWithProgress</tt> interface should be implemented by\nany class whose instances are intended to be executed as long-running operations.\nThese objects can then be run in any runnable context (<tt>IRunnableContext</tt>),\nincluding such standard JFace UI components as application windows (<tt>ApplicationWindow</tt>),\nwizard dialogs (<tt>WizardDialog</tt>), and progress monitor dialogs (<tt>ProgressMonitorDialog</tt>).\nThe utility class <tt>ModalContext</tt> defines the basic mechanism and\nUI event loop for modal operations.\n',directive
' Add a section in the receiver.\n \n',non-directive
' Creates a composite with a highlighted Note entry and a message text.\n This is designed to take up the full width of the page.\n \n @param font the font to use\n @param composite the parent composite\n @param title the title of the note\n @param message the message for the note\n @return the composite for the note\n',directive
'<p>\n The Byte is obtained from the results of {',non-directive
'@param key  the key to look up\n ',non-directive
' A variable {',directive
'@see #swtDefaults\n',non-directive
'\n\nProvides a class and two interfaces for the RMI registry.\nA registry is a remote object that maps names to remote objects.  A\nserver registers its remote objects with the registry so that they can\nbe looked up.  When an object wants to invoke a method on a remote\nobject, it must first lookup the remote object using its name.  The\nregistry returns to the calling object a reference to the remote\nobject, using which a remote method can be invoked.\n\n<!--\n<h2>Package Specification</h2>\n\n##### FILL IN ANY SPECS NEEDED BY JAVA COMPATIBILITY KIT #####\n<ul>\n  <li><a href=\"\">##### REFER TO ANY FRAMEMAKER SPECIFICATION HERE #####</a>\n</ul>\n\n<h2>Related Documentation</h2>\n\nFor overviews, tutorials, examples, guides, and tool documentation, please see:\n<ul>\n  <li><a href=\"\">##### REFER TO NON-SPEC DOCUMENTATION HERE #####</a>\n</ul>\n-->\n\n@since JDK1.1\n',directive
'<p>\n This is an internal method and should not be called by clients.\n ',directive
' Validation strategy constant (value <code>0</code>) indicating that\n the editor should perform validation after every key stroke.\n\n @see #setValidateStrategy\n',directive
'<p>\n The label is created if it does not already exist\n </p>\n\n ',directive
'@see org.eclipse.jface.window.Window#handleShellCloseEvent()\n',non-directive
'This is internal and subject\n to change without notice.\n',directive
'If either hint is set to SWT.DEFAULT,\n the control\'s preferred size is used. \n \n',directive
'@link SWT#COLOR_GREEN green}, {',non-directive
' Returns the position category.\n\n @return the position category\n',non-directive
'<li>extendedMargins(0,0,0,0)</li>\n ',non-directive
'When the user presses the change button, the\n abstract framework method <code>changePressed()</code> gets called\n to compute a new string.\n',directive
' Gets an iterator that iterates through an array of {@link Iterator}s\n one after another.\n\n @param iterators  the iterators to use, not null or empty or contain nulls\n @return a combination iterator over the iterators\n @throws NullPointerException if iterators array is null or contains a null\n',directive
?,non-directive
'  Looks up the given key in the given map, converting the result into\n  a float, using the default value if the the conversion fails.\n\n  ',non-directive
?,non-directive
' Returns the default value for the color-valued preference\n with the given name in the given preference store.\n Returns the default-default value (<code>COLOR_DEFAULT_DEFAULT</code>) \n is no default preference with the given name, or if the default \n value cannot be treated as a color.\n\n @param store the preference store\n @param name the name of the preference\n @return the default value of the preference\n',non-directive
'<li>For - repeatedly calls a closure for a fixed number of times\n ',directive
'<li><a href=\"http://www.isi.edu/in-notes/rfc1950.txt\">\n      ZLIB Compressed Data Format Specification version 3.3</a>\n      &nbsp;\n      <a href=\"http://www.isi.edu/in-notes/rfc1950.ps\">\n      (PostScript)</a>\n      (RFC 1950)\n<p>\n  ',directive
'@param key  the key to look up\n ',non-directive
'<p>\n The result of this method is typically used by the container to show or\n hide the Help button.\n ',directive
'@param changeProvider the information control with delayed input changes\n ',non-directive
' Returns the preference mananger used by this preference dialog.\n \n',non-directive
'All methods\nthat accept timeout parameters treat values less than or equal to\nzero to mean not to wait at all.  ',non-directive
'@see IPageChangedListener#pageChanged\n \n ',non-directive
'<LI> <I>Problem diagnosis by field service engineers</I>. ',non-directive
'@return the number of pixels\n',non-directive
' Creates a new exception.\n',non-directive
' Create the details button if it should be included.\n \n @param parent\n            the parent composite\n @since 3.2\n',directive
' Sets the width and height hints. The width and height hints override\n the control\'s preferred size. If either hint is set to SWT.DEFAULT,\n the control\'s preferred size is used. \n \n @param xHint horizontal hint (pixels), or SWT.DEFAULT to use the control\'s preferred size\n @param yHint vertical hint (pixels), or SWT.DEFAULT to use the control\'s preferred size\n @return this\n',directive
'@link org.eclipse.jface.text.source.ILineRange} with the following invariant:\n <ul>\n ',directive
'@param location the class whose resource directory contain the file\n ',non-directive
'@see org.apache.commons.collections.functors.InvokerTransformer\n ',directive
'@since\t  1.2\n\n<!--\n<h2>Related Documentation</h2>\n\nFor overviews, tutorials, examples, guides, and tool documentation, please see:\n<ul>\n  ',non-directive
'@param title\n            the dialog\'s title, or <code>null</code> if none\n ',directive
?,non-directive
'If any control in the row is set to grab vertical then the whole row will grab\n vertical space.\n \n',directive
'@param parent the parent composite\n',non-directive
'</p>\n\n ',non-directive
'<li>align(SWT.FILL, SWT.FILL)</li>\n ',non-directive
'Convenience method\n equivalent to\n \n <pre>\n JFaceResources.getFontRegistry().getDescriptor(JFaceResources.DIALOG_FONT)\n </pre>\n \n ',directive
'@link java.util.concurrent.ScheduledExecutorService} subinterface\nand associated interfaces add support for delayed and periodic task execution.\n',directive
'@linkplain #start() start} + {',directive
' Entry field width in dialog units (value 200).\n',non-directive
' Returns the wizard page that would to be shown if the user was to\n press the Back button.\n\n ',non-directive
'@param completionPosition the completion position\n',non-directive
?,non-directive
' Creates a boolean field editor in the default style.\n \n @param name\n            the name of the preference this field editor works on\n @param label\n            the label text of the field editor\n @param parent\n            the parent of the field editor\'s control\n',non-directive
'@return the section, or <code>null</code> if none\n',directive
'If the\n currently displayed information is in the result set, the context information is\n considered valid.\n\n ',directive
' Creates an empty font registry.\n \n',non-directive
'</p>\n\n ',non-directive
'@link java.nio.charset.Charset\njava.nio.charset.Charset} class describes the naming conventions for character\nencodings as well as the set of standard encodings that must be supported by\nevery implementation of the Java platform.\n\n\n',directive
'\nThis package is a modified copy of <code>org.eclipse.jface.text.contentassist</code> that supports the linked mode proposals.\nThis package is internal and may disappear if the changes are merged with the API content assist package. Subject to change without notice.\n',directive
'<li>Federal Information Processing Standards Publication (FIPS PUB) 186:\n    Digital Signature Standard (DSS) </li>\n</ul>\n\n',non-directive
'The one broad exception to this rule is that the logging convenience\nmethods in the Logger class (the config, entering, exiting, fine, finer, finest, \nlog, logp, logrb, severe, throwing, and warning methods)  \nwill accept null values \nfor all arguments except for the initial Level argument (if any).\n',directive
' Null-safe check if the specified map is not empty.\n <p>\n Null returns false.\n\n @param map  the map to check, may be null\n @return true if non-null and non-empty\n @since Commons Collections 3.2\n',directive
'@param rgb the color\n ',non-directive
'@since Commons Collections 3.2\n',non-directive
'Returns the default font data if there is no special value associated\n with that name.\n\n ',directive
'This method fails if the value does not represent an int.\n\n ',non-directive
' Creates an empty preference store that loads from and saves to the a\n file.\n <p>\n Use the methods <code>load()</code> and <code>save()</code> to load\n and store this preference store.\n </p>\n \n @param filename\n            the file name\n @see #load()\n @see #save()\n',non-directive
' Sets the information control creator for the additional information control.\n\n @param creator the information control creator for the additional information control\n @since 2.0\n',directive
?,non-directive
'Creates a new GridData instance and\n assigns it to the control by calling control.setLayoutData.\n  \n',non-directive
'@return the array of string, or <code>null</code> if none\n',directive
?,non-directive
' Helper to enable/disable Cancel button for this dialog.\n \n @param b\n            <code>true</code> to enable the cancel button, and\n            <code>false</code> to disable it\n @since 3.0\n',non-directive
'And because\n  the <i>happens-before</i> relation is transitive, all actions\n  of a thread prior to unlocking <i>happen-before</i> all actions\n  subsequent to any thread locking that monitor.\n\n  ',directive
' The preference dialog implementation of this <code>Dialog</code>\n framework method sends <code>performOk</code> to all pages of the\n preference dialog, then calls <code>handleSave</code> on this dialog to\n save any state, and then calls <code>close</code> to close this dialog.\n',directive
' Creates a FontDescriptor that describes an existing font. The resulting\n descriptor depends on the original Font, and disposing the original Font\n while the descriptor is still in use may cause SWT to throw a graphic\n disposed exception.\n \n @since 3.1\n\n @param font font to create\n @return a newly created FontDescriptor that describes the given font\n',directive
'@see ColorRegistry#get(String)\n ',non-directive
' Sets the preference store for this preference dialog.\n \n',non-directive
'Used to create the controls if required.\n',directive
'See also the <tt>locks</tt> and\n<tt>atomic</tt> packages.\n\n',directive
'<p>\n<code>AccessibleObject</code> allows supression of access checks if\nthe necessary <code>ReflectPermission</code> is available.\n',directive
'@param key  the key of the value to look up in that map\n  ',non-directive
' Return the DialogPage that the receiver is sending\n updates to.\n \n @return DialogPage or <code>null</code> if it \n has not been set.\n \n @since 3.1\n',non-directive
' Clear blocked state from the receiver.\n',non-directive
' Identifier for the color used to show label decorations For example in\n \'Foo.txt [1.16]\', the decoration is \'[1.16]\'.\n \n @since 3.4\n',non-directive
' Create a new Closure that calls one of the closures depending \n on the predicates.\n ',directive
'@since 2.0\n',non-directive
'@param span The x coordinate indicates the number of\n columns spanned, and the y coordinate indicates the number of rows.\n ',directive
' Informs this field editor\'s listener, if it has one, about a change to\n the value (<code>VALUE</code> property) provided that the old and new\n values are different.\n \n',non-directive
'@see #margins(int, int)\n',non-directive
'@param length the number of lines included in the new range, must be &gt; 0\n ',directive
'@param device device to manage\n',non-directive
'@see Reader#read()\n',non-directive
' Adjusts the enable state of the OK \n button to reflect the state of the currently active \n page in this container.\n <p>\n This method is called by the container itself\n when its preference page changes and may be called\n by the page at other times to force a button state\n update.\n </p>\n',directive
'Then, simply use these\nsubclasses with the <code>BindingManager</code>.\n',non-directive
' Returns a text edit describing the text modification that would be executed if the given\n selection was replaced by <code>replacement</code>.\n \n @param selection the selection to replace\n @param replacement the replacement text\n @return a text edit describing the operation needed to replace <code>selection</code>\n @throws BadLocationException if computing the edit failed\n',non-directive
' Updates the title to reflect the state of the \n currently active page in this container.\n <p>\n This method is called by the container itself\n when its page changes and may be called\n by the page at other times to force a title  \n update.\n </p>\n',directive
' Convenience API. ',non-directive
' Pre-order traversal means visit the root first,\n then the children.\n',non-directive
'@param eventConsumer the content assist subject control\'s event consumer. ',non-directive
' Normalizes a color in its perceived brightness. Yellows are darkened, while blues and reds\n are lightened. Depending on the hue, the brightness range within the RGB gamut may be\n different, outside values are clipped. Note that this is an approximation; the returned RGB\n is not guaranteed to have the requested {@link #brightness(RGB) brightness}.\n\n @param color the color to normalize\n @param brightness the requested brightness, in [0,&nbsp;1]\n @return a normalized version of <code>color</code>\n @see #brightness(RGB)\n',directive
'@return the font\n',non-directive
'@since 3.1\n',non-directive
' IPersistentPreferenceStore is a preference store that can \n be saved.\n',non-directive
'@link Range}\n',directive
' Gets the previous <em>key</em> from the <code>Map</code>.\n\n ',non-directive
'<li>UnboundedFifoBuffer - implements a buffer that grows in size if necessary\n</ul>\n',directive
' Creates a new integer field editor \n',non-directive
'The number of changed lines in this hunk, must be &gt;= 0. ',directive
'@link\n SWTException} being thrown.\n ',directive
?,non-directive
' Constant for the error image, or a simple dialog with the error image and a single OK button (value 1).\n \n',directive
' Sets the minimum size for the control. The control will not be permitted\n to shrink below this size. Note: GridLayout treats a minimum size of 0\n as an undocumented special value, so the smallest possible minimum size \n is a size of 1. A minimum size of SWT.DEFAULT indicates that the result\n of computeSize(int, int, boolean) should be used as the control\'s minimum\n size.\n \n @param min minimum size of the control\n @return this\n',directive
?,non-directive
'One of SWT.BEGINNING, SWT.CENTER, SWT.END, or SWT.FILL.\n ',directive
'<li>Typed - ensures that only elements that are of a specific type can be added\n',directive
'<li>Defining the class in the Java programming language to which the\n\t  SQL UDT will be mapped.  ',non-directive
'@since 3.0\n ',non-directive
' Creates a new dialog page with the given title.\n \n',non-directive
?,non-directive
'@link Iterator}s\n one after another.\n\n ',directive
' Returns the current value of the color-valued preference with the\n given name in the given preference store.\n ',non-directive
'The size computed by this layout is the\n maximum width and height of all pages currently inserted into the\n container.\n',directive
?,non-directive
' Convenience method to open a simple confirm (OK/Cancel) dialog.\n \n',non-directive
'@link #setContentAssistCueProvider(ILabelProvider)}.\n\n ',directive
'@exception java.io.IOException\n                if there is a problem saving this store\n',directive
'<p>\n This method is typically called by a wizard page\n </p>\n\n ',directive
' Clears any adjusted ranges, restoring the original range.\n',non-directive
' A listener which is notified when the current page of a multi-page dialog is\n changing. Use this listener to perform long-running work that should only be\n executed once, when the page is in the process of changing, rather then\n during validation of page controls.\n \n @see PageChangingEvent\n @since 3.3\n',directive
' Returns an {@link Iterator} over the entire set of members,\n including copies due to cardinality. This iterator is fail-fast\n and will not tolerate concurrent modifications.\n \n @return iterator over all elements in the Bag\n',directive
'@param store the preference store\n ',non-directive
'The first time\n this new entry is retrieved, the image descriptor\'s image will be computed \n (via </code>ImageDescriptor.createImage</code>) and remembered. \n ',directive
' Return the List.\n \n @return the list\n @since 3.5\n',non-directive
' Identifier for the color used for the foreground of content assist\n popup dialogs.\n \n',non-directive
'The {',non-directive
'@return a RowLayoutFactory that creates RowLayouts as though created with\n         their default constructor\n ',directive
' An <code>AbstractControlContentAssistSubjectAdapter</code> delegates assistance requests from a\n {@linkplain org.eclipse.jface.text.contentassist.ContentAssistant content assistant}\n to a <code>Control</code>.\n\n A visual feedback can be configured via {@link #setContentAssistCueProvider(ILabelProvider)}.\n\n @since 3.0\n @deprecated As of 3.2, replaced by Platform UI\'s field assist support\n',non-directive
' Selects the saved item in the tree of preference pages. ',non-directive
'<li><code>getText(Object)</code> provides the hover info text.\n     ',non-directive
'Note, however,\n that manipulating default values (with <code>setDefault</code>)\n does not cause such events to be reported.\n ',directive
'@param model the annotation model, possibly <code>null</code>\n ',directive
' Return the <code>Image</code> to be used when displaying a warning.\n \n @return image the warning image\n',directive
' Returns the given string with all whitespace characters removed.\n ',non-directive
'@link java.util.Set Set} and\n{',non-directive
' Creates a new range with the given start and end offsets.\n\n @param start the first line of the new range, must be &gt;= 0\n @param end the first line not in the range any more (exclusive), must be &gt; <code>start</code>\n @return a <code>Range</code> with the given start and end offsets\n @throws LineIndexOutOfBoundsException if the parameters violate the invariant of\n         {@link Range}\n',directive
?,non-directive
' Returns the top level control for this dialog page.\n ',non-directive
' Creates a new field editor preference page with the given title,\n image, and style.\n\n @param title the title of this preference page\n @param image the image for this preference page, or \n   <code>null</code> if none\n @param style either <code>GRID</code> or <code>FLAT</code>\n',non-directive
'<li>\n    <a href=\n      \"{@docRoot}/../technotes/guides/security/crypto/HowToImplAProvider.html\">\n      <b>How to Implement a Provider for the\n      Java<FONT SIZE=-2><SUP>TM</SUP></FONT> Cryptography Architecture\n      </b></a></li>\n</ul>\n\n',non-directive
'@param newMessage\n            The new value for the message\n ',non-directive
' Creates a ProgressMonitorPart.\n ',non-directive
' Creates the wizard\'s title area.\n \n @param parent\n            the SWT parent for the title area composite.\n @return the created title area composite.\n',non-directive
'<dd>\n                        If an implementation supports a mechanism to start agents \n                        sometime after the VM has started then this attribute specifies\n                        the agent class.\n                        ',directive
'@return the image, or <code>null</code> if none\n',directive
'\nProvides support for trim specification. \n',non-directive
'     /**\n Breaks out space-separated words into an array of words.\n ',non-directive
' Creates a GridDataFactory initialized with defaults that will cause\n the control to fill its cell. The minimum size is set to the smallest possible\n minimum size supported by SWT. Currently, the smallest supported minimum size\n is (1,1) so this is the default. If GridLayout ever adds support for grid data\n with no minimum size, this will be changed to 0,0 in the future. \n \n <p>\n Initial values are:\n </p>\n \n <ul>\n <li>align(SWT.FILL, SWT.FILL)</li>\n <li>exclude(false)</li>\n <li>grab(false, false)</li>\n <li>hint(SWT.DEFAULT, SWT.DEFAULT)</li>\n <li>indent(0,0)</li>\n <li>minSize(1,1)</li>\n <li>span(1,1)</li>\n </ul>\n  \n @return a GridDataFactory that makes controls fill their grid by default\n \n @see #swtDefaults()\n',non-directive
?,non-directive
'@param showDialogMenu\n            A boolean indicating whether a menu for moving and resizing\n            the popup should be provided.\n ',non-directive
' Get the name of the selected item preference\n \n @return String\n',non-directive
' Sets the margins for layouts created with this factory. ',non-directive
'<li>Synchronized - synchronizes method access for multi-threaded environments\n',directive
' Sets the spacing for layouts created with this factory. The spacing is\n the distance between items within the layout.\n \n @param spacing\n            spacing (pixels)\n @return this\n @see #margins(Point)\n @see #margins(int, int)\n',directive
' Sets whether the empty string is a valid value or not.\n\n @param b <code>true</code> if the empty string is allowed,\n  and <code>false</code> if it is considered invalid\n',non-directive
' Sets this dialog page\'s description text.\n \n',non-directive
' Converts the given integer object to a string.\n Equivalent to <code>String.valueOf(value.intValue())</code>.\n\n @param value the integer object\n @return the string representing the given integer value\n',non-directive
' RowLayoutFactory creates and initializes row layouts. ',non-directive
' Shell style appropriate for a resizable info popup that can get focus.\n',non-directive
' Load a dialog settings from a file and fill the receiver with its\n content.\n \n',non-directive
'<p>\n\n ',non-directive
' Moves the receiver to <code>start</code>, keeping {@link #length()} constant.\n\n @param start the new start, must be &gt;= 0\n @throws LineIndexOutOfBoundsException if <code>start</code> &lt; 0\n',directive
' Title area fields\n',non-directive
'@link AbstractInformationControlManager} can be configured with such a replacer by calling\n <code>setInformationControlReplacer</code>.\n ',directive
'@return the image for this node, or <code>null</code>\n   if there is no image for this node\n',directive
'@param exceptions\n            the list of controls to not disable (element type:\n            <code>Control</code>), or <code>null</code> if none\n',directive
' Sets the hover enrich mode. Only applicable when an information\n control replacer has been set with\n {@link #setInformationControlReplacer(InformationControlReplacer)} .\n\n @param mode the enrich mode\n @see ITextViewerExtension8#setHoverEnrichMode(org.eclipse.jface.text.ITextViewerExtension8.EnrichMode)\n',directive
' A selection provider for annotate revisions. Selections of a revision can currently happen in\n following ways - note that this list may be changed in the future:\n <ul>\n <li>when the user clicks the revision ruler with the mouse</li>\n <li>when the caret is moved to a revision\'s line (only on post-selection)</li>\n </ul>\n <p>\n Calling {@link #setSelection(ISelection)} will set the current sticky revision on the ruler.\n </p>\n\n @since 3.2\n',directive
?,non-directive
?,non-directive
'@param name the name of the preference\n ',non-directive
'<li>Enhanced Blob/Clob functionality -- Support provided to create and free a Blob/Clob instance\n as well as additional methods added to improve accessiblity\n ',directive
' An abstract implementation of a wizard page that manages a\n set of embedded wizards.\n <p>\n A wizard selection page should present a list of wizard nodes \n corresponding to other wizards. When the end user selects one of\n them from the list, the first page of the selected wizard becomes\n the next page. The only new methods introduced by this class are \n <code>getSelectedNode</code> and <code>setSelectedNode</code>. \n Otherwise, the subclass contract is the same as <code>WizardPage</code>.\n </p>\n',directive
'No property change events are reported by changing default\n values.\n ',directive
' Creates a file field editor.\n \n @param name the name of the preference this field editor works on\n @param labelText the label text of the field editor\n @param enforceAbsolute <code>true</code> if the file path\n  must be absolute, and <code>false</code> otherwise\n @param parent the parent of the field editor\'s control\n',directive
' Constant for a simple dialog with the question image and OK/Cancel buttons (value 5).\n \n',non-directive
' Shows the given error message in the page for this\n field editor if it has one.\n\n @param msg the error message\n',directive
'<code>null</code>\n           is a valid argument.\n',directive
'@since 3.4\n',non-directive
'Note that nodes are reused so this is not a call to dispose the\n node itself.\n',directive
'@param min\n            a value greater than 0.\n ',directive
' {@inheritDoc}\n \n @since 3.5\n',directive
'\n<p>Provides support for bindings between commands and various user input events\n(e.g., keyboard shortcuts).</p>\n\n<h2>Package Specification</h2>\n<p>\nThis package provides the common classes and abstract classes required to\nprovide binding support.\n',directive
'-->\n\n',non-directive
?,non-directive
'<h2>Package Specification</h2>\n\n</a>\n<ul>\n  ',non-directive
'@param end the new end, must be &gt; {',directive
?,non-directive
' Creates a new wizard page with the given name, title, and image.\n\n ',non-directive
'@param progressIndicatorHeight The height of the progress indicator in pixel.\n',non-directive
' If supported, registers an event consumer with this content assist\n subject.\n\n ',directive
' Dispose of all allocated colors. Called on workbench\n shutdown.\n \n @deprecated JFaceColors no longer maintains a cache of colors.  This job \n is now handled by the ColorRegistry.\n',directive
'<p>\n This iterator is a valid map iterator object that will iterate\n over nothing.\n\n ',non-directive
?,non-directive
'They should be negative. \n        ',directive
' Returns the number of pixels corresponding to the height of the given\n number of characters.\n \n',non-directive
'<p>The <tt>IRunnableWithProgress</tt> interface should be implemented by\nany class whose instances are intended to be executed as long-running operations.\n',directive
'If the preference\'s current\n is different from its old default value, its current value is\n unaffected. ',directive
?,non-directive
'However,\n {',directive
'<p>\nThis package is internal and may be subject to change without notice.\n',directive
'An SQL structured type or an SQL <code>DISTINCT</code>\ntype are the UDTs that may be custom mapped.  ',directive
' Constructs a new instance of <code>PopupDialog</code>.\n \n',non-directive
'<p>\n The information control is made visible on request by calling\n {',directive
'The margins\n are the distance between the outer cells and the edge of the layout.\n \n',non-directive
' Extends <code>Window.open()</code>. Opens an error dialog to display\n the error. If you specified a mask to filter the displaying of these\n children, the error dialog will only be displayed if there is at least\n one child status matching the mask.\n',directive
' Creates a DeviceResourceException indicating an error attempting to\n create a resource and an embedded low-level exception describing the cause \n \n @param missingResource\n @param cause cause of the exception (or null if none)\n',directive
?,non-directive
'<li>SwitchMap - calls one transformer looked up from a Map\n ',directive
'@link ILabelProvider} is set.\n ',directive
' Removes an image from this registry.  \n If an SWT image was allocated, it is disposed.\n This method has no effect if there is no image or descriptor for the given key.\n @param key the key\n',non-directive
' Opens the information control with the given information and the specified\n subject area. It also activates the information control closer.\n\n @param subjectArea the information area\n @param information the information\n',non-directive
'The source of these events\n is a page change provider.\n \n',directive
' Gets a transformer that always returns null.\n \n',non-directive
'<p> The java.lang.management API is thread-safe.\n\n',directive
'@param iterator  the iterator to use, not null\n ',non-directive
' Message type constant used to display an info icon with the message.\n \n',non-directive
'Note\n that thes margins will be added to the ones specified by\n {',directive
' Set the current page to be newPage.\n \n',non-directive
' Return the layout for the composite that contains\n the pages.\n @return PageLayout\n \n @since 3.1\n',non-directive
'@since 3.1\n\n ',non-directive
'@return a list of preference nodes\n  (element type: <code>IPreferenceNode</code>)\n  in the given order\n',directive
'The following values may be used:\n <ul>\n   ',directive
'</p>\n <p>\n Note that for backward compatibility, a message of type\n <code>ERROR</code> is different than an error message (set using\n <code>setErrorMessage</code>). ',directive
'     /**\n Breaks out space-separated words into an array of words.\n For example: <code>\"no comment\"</code> into an array \n <code>a[0]=\"no\"</code> and <code>a[1]= \"comment\"</code>.\n Returns the given default value if the value cannot be parsed.\n\n @param value the string to be converted\n @param dflt the default value\n @return the list of words, or the default value\n',non-directive
' Returns the first line after this range. Equivalent to {@linkplain #start() start} + {@linkplain #length() length}.\n\n @return the first line after this range\n',directive
?,non-directive
'However if the current wizard is a nested wizard\n this method will also be called on all wizards in its parent chain.\n ',directive
'</pre>\n',non-directive
'It also manages\n the revision hover.\n\n ',directive
' Constant for the question image, or a simple dialog with the question image and Yes/No buttons (value 3).\n \n @see #MessageDialog(Shell, String, Image, String, int, String[], int)\n @see #open(int, Shell, String, String, int)\n',non-directive
' Creates a new listener.\n\n @param changeProvider the information control with delayed input changes\n @param informationControlReplacer the information control replacer, whose information control should get the new input\n',directive
' The <code>ProgressMonitorDialog</code> implementation of this method\n only closes the dialog if there are no currently running runnables.\n',directive
' Convenience API. Convert the value of the given key in this dialog\n settings to a double and return it.\n \n @param key\n            the key\n @return the value coverted to double, or throws\n         <code>NumberFormatException</code> if none\n \n @exception NumberFormatException\n                if the string value does not contain a parsable number.\n @see java.lang.Double#valueOf(java.lang.String)\n',non-directive
' The label for cancel buttons.\n',non-directive
' Returns the wizard this node stands for.\n <p>\n If the content has not been created beforehand, calling this\n method triggers the creation of the wizard and caches it so that\n the identical wizard object is returned on subsequent calls.\n </p>\n\n @return the wizard\n',directive
'</p>\n <p>\n A property change event is reported whenever a preferences current\n value actually changes (whether through <code>setValue</code>,\n <code>setToDefault</code>, or other unspecified means). ',directive
'@throws DeviceResourceException if unable to allocate the Color\n',directive
'@param newMessage\n            the message, or <code>null</code> to clear the message\n ',directive
'<LI>Ability to have multiple <code>ResultSet</code> objects \n       returned from <code>CallableStatement</code> objects open at the\n      same time\n  ',directive
'This id identifies a contribution node relative to its parent.\n\n ',directive
'@return the default value of the preference\n',non-directive
' Constructs the tray\'s widgets and displays the tray in this dialog. The\n dialog\'s size will be adjusted to accomodate the tray.\n \n @param tray the tray to show in this dialog\n @throws IllegalStateException if the dialog already has a tray open\n @throws UnsupportedOperationException if the dialog does not support trays,\n            for example if it uses a custom layout.\n',non-directive
' Creates an empty preference store that loads from and saves to the a\n file.\n ',non-directive
' Create the page control for the supplied page.\n \n @param page - the preference page to be shown\n @param parent - the composite to parent the page\n \n @since 3.1\n',non-directive
'\n<p>Provides support for bindings between commands and various user input events\n(e.g., keyboard shortcuts).</p>\n\n<h2>Package Specification</h2>\n<p>\nThis package provides the common classes and abstract classes required to\nprovide binding support.\n</p>\n<p>\nAll the real work in this package is carried out by the\n<code>BindingManager</code>, and most work with bindings can be carried out\ndirectly with it.  The binding manager manages a collection of bindings, and\ndecides which bindings are active at any point in time.  By changes the various\nproperties of the manager, the active bindings will change.  The binding\nmanager implements a caching scheme that is optimized for an infreqeuntly\nchanging set of bindings, but frequently changing properties.\n</p>\n<p>\nThe binding manager also manages schemes.  A scheme is a grouping of bindings.\nTo create a scheme, use <code>BindingManager.getScheme(String)</code>.  The\nscheme must then be defined before it can be used.\n</p>\n<p>\nIf you wish to implement your own type of binding, then you must subclass\n<code>Trigger</code> and <code>TriggerSequence</code>.  Then, simply use these\nsubclasses with the <code>BindingManager</code>.\n</p>\n',directive
'@deprecated\n',directive
' Extends {',non-directive
' Constructor for IconAndMessageDialog.\n \n',non-directive
' Returns the current value of the integer-valued preference with the\n given name.\n ',non-directive
?,non-directive
'@param parentRegistry global registry that handles resource allocation\n ',non-directive
'The Logging APIs may also be\n           used to help debug an application under development. ',directive
'<p>\n The string representation of an RGB color value has the form\n <code><it>red</it>,<it>green</it></code>,<it>blue</it></code> where\n <code><it>red</it></code>, <it>green</it></code>, and \n <code><it>blue</it></code> are string representations of integers.\n ',directive
' Sets the size of all pages. The given size takes precedence over computed\n sizes.\n \n @param width\n            the page width\n @param height\n            the page height\n @see #setPageSize(Point)\n',non-directive
' A field editor to edit directory paths.\n',non-directive
' Sets the current value of the boolean-valued preference with the\n given name.\n <p>\n A property change event is reported if the current value of the \n preference actually changes from its previous value. In the event\n object, the property name is the name of the preference, and the\n old and new values are wrapped as objects.\n </p>\n <p>\n Note that the preferred way of re-initializing a preference to its\n default value is to call <code>setToDefault</code>.\n </p>\n\n @param name the name of the preference\n @param value the new current value of the preference\n',directive
?,non-directive
'Depending on which concrete Executor class is being used,\ntasks may execute in a newly created thread, an existing\ntask-execution thread, or the thread calling <tt>execute()</tt>, and\nmay execute sequentially or concurrently.  ',directive
'The location can only be persisted\n            if the dialog settings for persisting the bounds are also\n            specified. ',directive
'@param end the first line not in the range any more (exclusive), must be &gt; <code>start</code>\n ',directive
'Only listeners registered at the time this method is called are\n notified.\n \n',directive
?,non-directive
'<li>Predicated - ensures that only elements that are valid according to a predicate can be added\n',directive
' Gets an iterator that iterates through two {@link Iterator}s\n one after another.\n\n @param iterator1  the first iterators to use, not null\n @param iterator2  the first iterators to use, not null\n @return a combination iterator over the iterators\n @throws NullPointerException if either iterator is null\n',directive
'@link #paint(GC, ILineRange) painting} to the\n        newly created painter.\n ',non-directive
' Defines a map that is bounded in size.\n <p>\n The size of the map can vary, but it can never exceed a preset \n maximum number of elements. This interface allows the querying of details\n associated with the maximum number of elements.\n\n @since Commons Collections 3.0\n @version $Revision: 815026 $ $Date: 2009-09-15 07:54:23 +0200 (Tue, 15 Sep 2009) $\n\n @author Stephen Colebourne\n',directive
'<li>Predicated - ensures that only elements that are valid according to a predicate can be added\n',directive
'<p>\nThe applet context is an application that is responsible for loading and running\napplets. ',non-directive
'@since 2.0\n',non-directive
'@throws IllegalStateException if the tray was not open\n',directive
'</p>\n<p>\nIf you wish to implement your own type of binding, then you must subclass\n<code>Trigger</code> and <code>TriggerSequence</code>.  ',directive
'@param proposal the completion proposal\n',non-directive
'@link\njava.util.concurrent.ScheduledThreadPoolExecutor} provide tunable,\nflexible thread pools. ',directive
' Create a new Transformer that calls each transformer in turn, passing the \n result into the next transformer.\n \n',directive
'<li>{',non-directive
'The package provides a default implementation <tt>QuickAssistAssistant</tt> which completely defines\nand implements the UI and the control flow for a quick assist assistant.\n<br>&nbsp;\n',directive
'This collection \n should be immutable.\n',directive
'Only applicable when an information\n control replacer has been set with\n {',directive
?,non-directive
'</p>\n \n <p>\n Example usage:\n </p>\n <code><pre>\n \n ////////////////////////////////////////////////////////////\n // Example 1: Typical grid data for a non-wrapping label\n \n     // GridDataFactory version\n     GridDataFactory.fillDefaults().applyTo(myLabel);\n \n     // Equivalent SWT version\n     GridData labelData = new GridData(GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL);\n     myLabel.setLayoutData(labelData);\n \n ///////////////////////////////////////////////////////////\n // Example 2: Typical grid data for a wrapping label\n \n     // GridDataFactory version\n     GridDataFactory.fillDefaults()\n          .align(SWT.FILL, SWT.CENTER)\n    \t    .hint(150, SWT.DEFAULT)\n    \t    .grab(true, false)\n          .applyTo(wrappingLabel);\n      \n     // Equivalent SWT version\n     GridData wrappingLabelData = new GridData(GridData.FILL_HORIZONTAL | GridData.VERTICAL_ALIGN_CENTER);\n     wrappingLabelData.minimumWidth = 1;\n     wrappingLabelData.widthHint = 150;\n     wrappingLabel.setLayoutData(wrappingLabelData);\n \n //////////////////////////////////////////////////////////////\n // Example 3: Typical grid data for a scrollable control (a list box, tree, table, etc.)\n \n     // GridDataFactory version\n     GridDataFactory.fillDefaults().grab(true, true).hint(150, 150).applyTo(listBox);\n \n     // Equivalent SWT version\n     GridData listBoxData = new GridData(GridData.FILL_BOTH);\n     listBoxData.widthHint = 150;\n     listBoxData.heightHint = 150;\n     listBoxData.minimumWidth = 1;\n     listBoxData.minimumHeight = 1;\n     listBox.setLayoutData(listBoxData);\n \n /////////////////////////////////////////////////////////////\n // Example 4: Typical grid data for a button\n\n     // GridDataFactory version\n     Point preferredSize = button.computeSize(SWT.DEFAULT, SWT.DEFAULT, false);\n     Point hint = Geometry.max(LayoutConstants.getMinButtonSize(), preferredSize);\n     GridDataFactory.fillDefaults().align(SWT.FILL, SWT.CENTER).hint(hint).applyTo(button);\n\n     // Equivalent SWT version\n     Point preferredSize = button.computeSize(SWT.DEFAULT, SWT.DEFAULT, false);\n     Point hint = Geometry.max(LayoutConstants.getMinButtonSize(), preferredSize);\n     GridData buttonData = new GridData(GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_CENTER);\n     buttonData.widthHint = hint.x;\n     buttonData.heightHint = hint.y;\n     button.setLayoutData(buttonData);\n     \n /////////////////////////////////////////////////////////////\n // Example 5: Generated GridData\n\n     // Generates GridData a wrapping label that spans 2 columns\n     GridDataFactory.generate(wrappingLabel, 2, 1);\n     \n     // Generates GridData for a listbox. ',directive
' The <code>WizardDialog</code> implementation of this\n <code>Window</code> method calls call <code>IWizard.addPages</code>\n to allow the current wizard to add extra pages, then\n <code>super.createContents</code> to create the controls. ',directive
'\n\n<p> Utility classes commonly useful in concurrent programming.  ',directive
'\n The preference page implementation of an <code>IPreferencePage</code>\n method returns whether this preference page is valid. ',non-directive
' Adds a listener for page changes to the list of page changing listeners\n registered for this dialog. Has no effect if an identical listener is\n already registered.\n \n @param listener\n            a page changing listener\n @since 3.3\n',non-directive
'May be <code>null</code> to indicate no error message.\n ',directive
'The width and height hints override the\n control\'s preferred size. ',directive
' Returns the Color described by this descriptor.\n \n @param device SWT device on which to allocate the Color\n @return a newly allocated SWT Color object (never null)\n @throws DeviceResourceException if unable to allocate the Color\n',directive
'@since 3.4\n',non-directive
'@param oldValue the old value\n ',non-directive
'@param control\n            the <code>Control</code> to lay out.\n ',non-directive
' Creates a new hunk.\n\n @param line the line at which the hunk starts, must be &gt;= 0\n @param delta the difference in lines compared to the original\n @param changed the number of changed lines in this hunk, must be &gt;= 0\n',directive
' Called just before the operation is run. ',directive
'@return the composite for the note\n',non-directive
'@link java.util.concurrent.locks.Condition} interface\ndescribes condition variables that may be associated with Locks.\n',directive
'A Map provides a lookup from a key to a value.\n',non-directive
'The given size takes precedence over computed\n sizes.\n \n',directive
' Returns whether the given status object should be displayed.\n \n @param status\n            a status object\n @param mask\n            a mask as per <code>IStatus.matches</code>\n @return <code>true</code> if the given status should be displayed, and\n         <code>false</code> otherwise\n @see org.eclipse.core.runtime.IStatus#matches(int)\n',directive
'@param tableTree\n            the control\n ',non-directive
'@throws IllegalArgumentException if any closure in the map is null\n',non-directive
'This logging\n         information may be extremely detailed and fairly inscrutable. ',directive
'@link ILabelProvider} methods are called with\n {',directive
'Anything application <code>main</code> can do, including creating threads, is legal from <code>premain</code>.\n\n',directive
'Similarly for {@code Callables} submitted to an {@code ExecutorService}.\n\n  ',directive
' <p>\n Initial values are:\n </p>\n \n <ul>\n ',non-directive
'If GridLayout ever adds support for grid data\n with no minimum size, this will be changed to 0,0 in the future. \n \n',directive
' Returns this field editor\'s scale control.\n \n',non-directive
' Sets the value associated with the current key (optional operation).\n\n ',non-directive
'<p>\n1) Direct access to the Sun-specific MXBean interface\n<blockquote><pre>\n   com.sun.management.RuntimeMXBean mxbean = \n       (com.sun.management.RuntimeMXBean) ManagementFactory.getRuntimeMXBean();\n\n   // Get the standard attribute \"VmVendor\"\n   String vendor = mxbean.getVmVendor();\n\n   // Get the platform-specific attribute \"Bar\"\n   BarType bar = mxbean.getBar();\n\n</pre>\n</blockquote>\n\n<p>\n2) Access the Sun-specific MXBean interface via <tt>MBeanServer</tt>\n\n<blockquote><pre>\n   MBeanServerConnection mbs;\n\n   // Connect to a running JVM (or itself) and get MBeanServerConnection\n   // that has the JVM MXBeans registered in it\n   ...\n\n   ',non-directive
'@link Set} of unique elements in the Bag.\n ',non-directive
'Both extend class {',directive
' The returned ColorDescriptor depends on the original Color. ',non-directive
'\n The field editor preference page implementation of a <code>PreferencePage</code>\n method loads all the field editors with their default values.\n',non-directive
' {@inheritDoc} This control can handle {@link String} and\n {@link BrowserInformationControlInput}.\n',directive
'@param order the traversal order, one of \n\t<code>PRE_ORDER</code> and <code>POST_ORDER</code>\n',directive
' A mutator for the key of the preference to be modified by the toggle\n button.\n \n',non-directive
?,non-directive
'@link java.lang.management.ThreadMXBean}</tt> </td>\n<td> Threads system of the Java virtual machine.</td>\n</tr>\n<tr>\n<td> <tt>{',directive
'@param minW\n            the minimum width\n ',non-directive
'<p>\n Note that the current value of the preference is affected if\n the preference\'s current value was its old default value, in which\n case it changes to the new default value. ',directive
'If there is no match, the\n default closure is called. ',directive
'@since 3.4\n',non-directive
'@link #end()}\n ',directive
'@throws DeviceResourceException if unable to allocate the resource\n',directive
'@linkplain org.eclipse.jface.text.contentassist.ContentAssistant content assistant}\n to a <code>Control</code>.\n\n ',non-directive
'@since Commons Collections 2.1\n ',non-directive
'@return the <code>invoker</code> closure\n ',directive
'<li>spacing(LayoutConstants.getSpacing().x</li>\n </ul>\n ',non-directive
'@return the newly allocated resource (not null)\n ',directive
' Returns the text regions covered by the given selection.\n \n @param selection the selection\n @return the text regions corresponding to <code>selection</code>\n @throws BadLocationException if accessing the document failed\n',non-directive
'@param defaultValue  return if the value is null or if the\n     conversion fails\n ',non-directive
'<li>Lazy - creates objects in the map on demand\n',non-directive
' Sets the indent of the control within the cell. ',non-directive
?,non-directive
'@see #setMessageLayoutData(Object)\n',non-directive
'\n\nClasses for matching character sequences against patterns specified by regular\nexpressions.\n\n<p> An instance of the {@link java.util.regex.Pattern} class represents a\nregular expression that is specified in string form in a syntax similar to\nthat used by Perl.\n\n<p> Instances of the {@link java.util.regex.Matcher} class are used to match\ncharacter sequences against a given pattern.  Input is provided to matchers via\nthe {@link java.lang.CharSequence} interface in order to support matching\nagainst characters from a wide variety of input sources. </p>\n\n<p> Unless otherwise noted, passing a <tt>null</tt> argument to a method\nin any class or interface in this package will cause a\n{@link java.lang.NullPointerException NullPointerException} to be thrown.\n\n<h2>Related Documentation</h2>\n\n<p> An excellent tutorial and overview of regular expressions is <a\nhref=\"http://www.oreilly.com/catalog/regex/\"><i>Mastering Regular\nExpressions</i>, Jeffrey E. F. Friedl, O\'Reilly and Associates, 1997.</a> </p>\n\n<!--\nFor overviews, tutorials, examples, guides, and tool documentation, please see:\n<ul>\n  <li><a href=\"\">##### REFER TO NON-SPEC DOCUMENTATION HERE #####</a>\n</ul>\n-->\n\n@since 1.4\n@version 1.9, 10/04/02\n@author Mike McCloskey\n@author Mark Reinhold\n\n',directive
'@return a new GridLayout\n',non-directive
'@param name the name of the preference\n ',non-directive
'<li>Closure - performs a Closure and returns the input object\n ',non-directive
'@link org.eclipse.jface.util.Policy#setAnimatorFactory(AnimatorFactory)} \n a new type of animator factory can be plugged into JFace.\n \n',directive
'@param map  the map to check, may be null\n ',directive
'@return  a map iterator over nothing\n',non-directive
' Return the Remove button.  \n \n @return the button\n @since 3.5\n',non-directive
'The margins are\n the distance between the outer cells and the edge of the layout.\n \n',non-directive
' Returns <code>true</code> if <code>selection</code> extends to two or more lines,\n <code>false</code> otherwise.\n \n @param selection the selection\n @return <code>true</code> if <code>selection</code> extends to two or more lines,\n         <code>false</code> otherwise\n @throws BadLocationException if <code>selection</code> is not valid regarding the target\n             document\n',directive
'@deprecated use filterData in order to preserve \n multiple entry fonts on Motif\n',directive
?,non-directive
'@return the selected page in the dialog or <code>null</code> if none is\n         selected. ',directive
'To avoid problems, use a single outer <code>Composite</code> for\n your dialog area, and set your custom layout on that <code>Composite</code>.\n ',directive
'@link java.util.concurrent.locks.ReentrantLock}.\n\n',directive
'<h2>Related Documentation</h2>\n\nFor information about X.509 certificates and CRLs, please see:\n<ul>\n  ',non-directive
'@return a list iterator over part of the array\n ',non-directive
' Validates the input.\n ',non-directive
'Use <code>setDefault(IPreferenceStore, String, FontData[])</code>\n instead.\n\n ',directive
'<a name=\"reachability\"></a>\n<h3>Reachability</h3>\n\nGoing from strongest to weakest, the different levels of reachability reflect\nthe life cycle of an object.  ',directive
'</p>\n \n ',non-directive
' An ordered map iterator over no elements.\n',non-directive
'<p>\n The string representation of a rectangle has the form\n <code><it>x</it>,<it>y</it>,<it>width</it>,<it>height</it></code>\n where <code><it>x</it></code>, <code><it>y</it></code>,\n <code><it>width</it></code>, and <code><it>height</it></code>\n are string representations of integers.\n ',directive
' Creates a GridLayoutFactory that creates GridLayouts with no margins and \n default dialog spacing.\n \n <p>\n Initial values are:\n </p>\n \n <ul>\n <li>numColumns(1)</li>\n <li>margins(0,0)</li>\n <li>extendedMargins(0,0,0,0)</li>\n <li>spacing(LayoutConstants.getSpacing())</li>\n <li>equalWidth(false)</li>\n </ul>\n \n @return a GridLayoutFactory that creates GridLayouts as though created with\n their default constructor\n @see #swtDefaults\n',directive
'<li><a href=\"\">##### REFER TO ANY FRAMEMAKER SPECIFICATION HERE #####</a>\n</ul>\n\n',non-directive
?,non-directive
'a range cannot be empty\n </ul>\n ',directive
'<LI>Addition of the <code>java.sql.Types.DATALINK</code> data type -- \n      allows JDBC drivers access to objects stored outside a data source\n  ',directive
?,non-directive
'If enabled,\n the content assistant inserts a proposal automatically if it is\n the only proposal. ',directive
'@param width the width of the text input field in characters,\n  or <code>UNLIMITED</code> for no limit\n ',directive
?,non-directive
' Constant for the question image, or a simple dialog with the question image and Yes/No buttons (value 3).\n \n',directive
'Returns the default-default value (<code>false</code>) if there\n is no default preference with the given name, or if the default \n value cannot be treated as a boolean.\n\n ',directive
' A local registry that shares its resources with some global registry.\n LocalResourceManager is typically used to safeguard against leaks. Clients\n can use a nested registry to allocate and deallocate resources in the\n global registry. Calling dispose() on the nested registry will deallocate\n everything allocated for the nested registry without affecting the rest\n of the global registry.\n <p>\n A nested registry can be used to manage the resources for, say, a dialog\n box.\n </p>\n @since 3.1\n',directive
'-->\n\n',non-directive
' Sets the current value of the double-valued preference with the\n given name.\n <p>\n A property change event is reported if the current value of the \n preference actually changes from its previous value. In the event\n object, the property name is the name of the preference, and the\n old and new values are wrapped as objects.\n </p>\n <p>\n Note that the preferred way of re-initializing a preference to its\n default value is to call <code>setToDefault</code>.\n </p>\n\n @param name the name of the preference\n @param value the new current value of the preference\n',directive
'@return an array of the iterator contents\n ',non-directive
' An accessor for the current key of the toggle preference.\n \n @return The preference key; this value may be <code>null</code> if no\n         preference is being used.\n',directive
'@return a <code>Range</code> with the given start and end offsets\n ',non-directive
'@return the preference store, or <code>null</code> if none\n',directive
' Returns the tray currently shown in the dialog, or <code>null</code>\n if there is no tray.\n \n',directive
'<h2>Queues</h2>\n\nThe java.util.concurrent {',directive
'When the end user selects one of\n them from the list, the first page of the selected wizard becomes\n the next page. ',directive
'@since 1.5\n\n',non-directive
' Computes the size of the color image displayed on the button.\n <p>\n This is an internal method and should not be called by clients.\n </p>\n \n @param window\n            the window to create a GC on for calculation.\n @return Point The image size\n  \n',directive
'@return an array containing the root nodes\n ',non-directive
' A field editor for a boolean type preference.\n',non-directive
'<h2>\nPackage Specification</h2>\n<tt>IPresentationReconciler</tt> defines the concept of a presentation\nreconciler. ',non-directive
'Convenience method equivalent to\n \n <pre>\n JFaceResources.getFontRegistry().get(JFaceResources.DEFAULT_FONT)\n </pre>\n \n ',directive
'Typically such information\n           will require extra logging within particular subsystems.\n\n   ',directive
'@param name the name of the preference\n ',non-directive
'@param listIterator  the iterator to make immutable\n ',non-directive
' The <code>IRunnableWithProgress</code> interface should be implemented by any\n class whose instances are intended to be executed as a long-running operation.\n Long-running operations are typically presented at the UI via a modal dialog\n showing a progress indicator and a Cancel button.\n The class must define a <code>run</code> method that takes a progress monitor.\n The <code>run</code> method is usually not invoked directly, but rather by\n passing the <code>IRunnableWithProgress</code> to the <code>run</code> method of\n an <code>IRunnableContext</code>, which provides the UI for the progress monitor\n and Cancel button.\n\n @see IRunnableContext\n',directive
'</p>\n\n ',non-directive
'@return the current information control, or <code>null</code> if none\n',directive
' Returns <code>true</code> if the receiver can provide a hover for a certain document line.\n\n ',non-directive
'@return the string\n',non-directive
'@return the text covered by <code>selection</code>\n ',non-directive
'</p>\n \n ',non-directive
'@return the color descriptor associated with the given symbolic color\n         name or the default\n ',directive
?,non-directive
'@param falseClosure  the closure called if the predicate is false\n ',directive
'@return a new FontDescriptor\n',non-directive
'@link java.util.concurrent.FutureTask} providing a common\nextensible implementation of Futures, and {',directive
'</p>\n \n ',non-directive
' Sets the proposal pop-ups\' orientation.\n ',non-directive
'@return the size of the preference page encoded as\n   <code>new Point(width,height)</code>, or \n   <code>(0,0)</code> if the page doesn\'t currently have any UI component\n',directive
'Use\n this method to disallow event processing temporarily.\n \n',directive
'Has no\n effect if an identical listener is already registered.\n \n',directive
'<LI>Ability to retrieve values from automatically generated columns\n  ',non-directive
'This job \n is now handled by the ColorRegistry.\n',directive
'Creates a new RowData instance\n and assigns it to the control by calling control.setLayoutData.\n \n',directive
'Since the resources are shared and reference counted, they should never be disposed\n directly.\n ',directive
'@since 3.1\n\n ',non-directive
'The lookup is done with <code>getString</code>. ',directive
'@link org.eclipse.swt.graphics.Resource#dispose()} \n on anything returned from this method.</p>\n \n <p>\n Callers may safely downcast the result to the resource type associated with \n the descriptor. ',directive
'The span controls how many cells\n are filled by the control. \n \n',directive
' Returns the change button for this field editor.\n\n @param parent The Composite to create the button in if required.\n @return the change button\n',directive
'The type may be domain specific. ',directive
'<p>Note: None of the classes in this package maintain global state.\n<br>&nbsp;\n',directive
' Sets the alignment of the control within its cell.\n \n',non-directive
' Gets an iterator that iterates through an array of {',non-directive
'@since 2.0\n ',non-directive
' Returns the toggle button.\n \n @return the toggle button\n',non-directive
'Note that these margins will be added to the ones specified by\n {',directive
'@return an array of context information objects or <code>null</code>\n         if no context could be found\n',directive
?,non-directive
'@exception NumberFormatException\n                if the string value does not contain a parsable number.\n ',directive
' Returns the change button for this field editor.\n \n @param parent\n            The control to create the button in if required.\n @return the change button\n',directive
'The resulting\n descriptor depends on the original Font, and disposing the original Font\n while the descriptor is still in use may cause SWT to throw a graphic\n disposed exception.\n \n',directive
'It is a\nmechanism that enables an object on one Java virtual machine to invoke\nmethods on an object in another Java virtual machine.  ',directive
' Sets the width and height hints. ',non-directive
' Returns whether the current values in this property store\n require saving.\n\n @return <code>true</code> if at least one of values of \n  the preferences known to this store has changed and \n  requires saving, and <code>false</code> otherwise.\n',directive
' Callback to signal this content assistant that the presentation of the context information has been stopped.\n ',directive
'The page is inserted at the end of the\n page list.\n \n',directive
'Returns the default font if there is no special value\n associated with that name\n \n ',directive
'  Looks up the given key in the given map, converting the result into\n  a number, using the default value if the the conversion fails.\n\n  @param map  the map whose value to look up\n  @param key  the key of the value to look up in that map\n  @param defaultValue  what to return if the value is null or if the\n     conversion fails\n  @return  the value in the map as a number, or defaultValue if the\n    original value is null, the map is null or the number conversion\n    fails\n',non-directive
'@param name the name of the preference\n ',non-directive
'<p>\n\tKnown issues:\n  <ul>\n\t\t',directive
'editor.setPreferenceName(\"font\");\n \teditor.load();\n </pre>\n </p>\n\n ',non-directive
' Gets an enumeration that wraps an iterator.\n\n ',non-directive
' Finds and returns the contribution node at the given path.\n\n @param path the path\n @return the node, or <code>null</code> if none\n',non-directive
' Sets the default value of the preference with the given name\n in the given preference store.\n\n ',non-directive
'@param closure  the closure to call repeatedly\n ',directive
'This implementation determines whether the information is valid by asking the content\n assist processor for all  context information objects for the current position. ',non-directive
'If the value is a <code>Number</code> an integer zero value returns\n <code>false</code> and non-zero returns <code>true</code>.\n ',non-directive
?,non-directive
'@throws IllegalStateException if <code>next()</code> has not yet been called\n ',directive
' Create a new Closure that calls two Closures, passing the result of\n the first into the second.\n \n @see org.apache.commons.collections.functors.ChainedClosure\n \n @param closure1  the first closure\n @param closure2  the second closure\n @return the <code>chained</code> closure\n @throws IllegalArgumentException if either closure is null\n',directive
'</p>\n\n ',non-directive
'\nProvides support for detecting and displaying hyperlinks in <tt>ISourceViewer</tt>s.\n<p>\n<tt>SourceViewer</tt> supports hyperlinked text regions inline in the displayed text. It delegates \nthe detection and presentation of hyperlinks to <tt>IHyperlinkDetector</tt> and <tt>IHyperlinkPresenter</tt>, respectively.\n</p>\n<p>\nOverride the following methods in <tt>SourceViewerConfiguration</tt> to customize the hyperlink behavior of a source viewer:\n<ul>\n  <li><tt>getHyperlinkDetectors()</tt> to specify the set of hyperlink detectors used by the viewer</li>\n  <li><tt>getHyperlinkPresenter()</tt> to specify the set of hyperlink presenters used by the viewer</li>\n  <li><tt>getHyperlinkStateMask()</tt> to specify when hyperlinks are activated</li>\n</ul>\n</p>\n\n',non-directive
?,non-directive
?,non-directive
'If the value is a <code>Number</code> an integer zero value returns\n <code>false</code> and non-zero returns <code>true</code>.\n ',non-directive
'@link Iterator}. ',non-directive
'@return the dialog settings, or <code>null</code> if none\n',directive
'\n\nProvides the classes necessary to create an applet and the classes an applet\nuses to communicate with its applet context.\n<p>\nThe applet framework involves two\nentities: the <i>applet</i> and the <i>applet context</i>. An applet is an \nembeddable window (see the Panel class) with a few extra methods that the applet \ncontext can use to initialize, start, and stop the applet.\n<p>\nThe applet context is an application that is responsible for loading and running\napplets. For example, the applet context could be a Web browser or an applet\ndevelopment environment.\n<p>\n<!--\n<h2>Package Specification</h2>\n\n##### FILL IN ANY SPECS NEEDED BY JAVA COMPATIBILITY KIT #####\n<ul>\n  <li><a href=\"\">##### REFER TO ANY FRAMEMAKER SPECIFICATION HERE #####</a>\n</ul>\n\n<h2>Related Documentation</h2>\n\nFor overviews, tutorials, examples, guides, and tool documentation, please see:\n<ul>\n  <li><a href=\"\">##### REFER TO NON-SPEC DOCUMENTATION HERE #####</a>\n</ul>\n-->\n\n@since JDK1.0\n',directive
'The implementations themselves may\nthen be written by independent third-party vendors and plugged\nin seamlessly as needed.  ',directive
'This method does not update\n the font registry or fire a property change event.\n \n',directive
?,non-directive
'@param property The property that is being updated\n ',non-directive
'To change how\nkeys are formatted in the user interface, call\n<code>KeyFormatterFactory.setDefault(IKeyFormatter)</code>.  ',directive
' Removes all contribution nodes known to this manager.\n',non-directive
?,non-directive
?,non-directive
'@throws LineIndexOutOfBoundsException if <code>end</code> &lt;= {',directive
'A decorator wraps another implementation of the interface to add some\nspecific additional functionality.\n',directive
'@param predicate  the predicate to switch on\n ',non-directive
' Button id for a \"Back\" button (value 14).\n',non-directive
'\n<p>\nThis package contains implementations of the\n{',non-directive
' Returns this content assist subject control\'s document.\n\n @return the viewer\'s input document\n',non-directive
'<LI><code>ParameterMetaData</code> interface -- provides information\n              about the parameters to <code>PreparedStatement</code> commands\n  </UL>\n  ',non-directive
'@since 3.5\n',non-directive
' The AbstractColumnLayout is a {@link Layout} used to set the size of a table\n in a consistent way even during a resize unlike a {@link TableLayout} which\n only sets initial sizes.\n \n <p>\n <b>You can only add the layout to a container whose only child is the\n table/tree control you want the layouts applied to.</b>\n </p>\n \n @since 3.4\n',directive
'This parameter has no\n            effect if <code>showDialogMenu</code> is <code>false</code>.\n ',directive
' Set the widths of the columns.\n \n',non-directive
' Sets the proposal pop-ups\' orientation.\n The following values may be used:\n <ul>\n   <li>PROPOSAL_OVERLAY<p>\n     proposal popup windows should overlay each other\n   </li>\n   <li>PROPOSAL_REMOVE<p>\n     any currently shown proposal popup should be closed\n   </li>\n   <li>PROPOSAL_STACKED<p>\n     proposal popup windows should be vertical stacked, with no overlap,\n     beneath the line containing the current cursor location\n   </li>\n </ul>\n\n @param orientation the popup\'s orientation\n',directive
'<tt>RevisionInformation</tt> defines the revision model, which contains a list of <tt>Revision</tt>s, which in turn contain <tt>RevisionRange</tt>s.\n',non-directive
' Notification that a thread change is occurring.\n \n @param thread The new thread\n',directive
' {@inheritDoc}\n \n @since 3.5\n',directive
'<li>PROPOSAL_STACKED<p>\n     proposal popup windows should be vertical stacked, with no overlap,\n     beneath the line containing the current cursor location\n   </li>\n </ul>\n\n ',directive
' Lays outs the page according to this layout.\n \n',non-directive
'@param id the subnode id\n ',non-directive
'@param colorData an <code>RGB</code> object\n',non-directive
'@param text\n            the text to be displayed in the message area\n \n ',non-directive
' Sets or clears the error message.\n If not <code>null</code>, the OK button is disabled.\n \n @param errorMessage\n            the error message, or <code>null</code> to clear\n @since 3.0\n',directive
' Interface for a wizard page.\n <p>\n The class <code>WizardPage</code> provides an abstract implementation\n of this interface. However, clients are also free to implement this \n interface if <code>WizardPage</code> does not suit their needs.\n </p>\n',non-directive
'<p>\nFrequently it is necessary to represent a value of primitive type as\nif it were an object. ',directive
'@param pageIncrement\n            a value greater than 0.\n ',directive
'The x and y values of\n        the rectangle correspond to the position of the bounds of the \n        layout with respect to the client area. ',directive
'@throws LineIndexOutOfBoundsException if <code>start</code> &lt; 0 or &gt;= {',directive
'@deprecated Use <code>getButton(IDialogConstants.CANCEL_ID)</code>\n             instead. ',directive
'Returns the default-default value (<code>COLOR_DEFAULT_DEFAULT</code>) \n if there is no preference with the given name, or if the current value \n cannot be treated as a color.\n\n ',directive
?,non-directive
'\n<p>\nThis package contains implementations of the\n{@link org.apache.commons.collections.Closure Closure},\n{@link org.apache.commons.collections.Predicate Predicate},\n{@link org.apache.commons.collections.Transformer Transformer} and\n{@link org.apache.commons.collections.Factory Factory} interfaces.\nThese provide simple callbacks for processing with collections.\n</p>\n',directive
'@return this\n ',non-directive
' A change region describes a contiguous range of lines that was changed in the same revision of a\n document. Once it is adjusted to diff information, the originally contiguous range may be split\n into several ranges or even be empty.\n\n @since 3.2\n',directive
?,non-directive
'Each <code>premain</code> method must return in order for the startup sequence to proceed.\n\n',directive
' Create a new Closure that calls another closure based on the\n result of the specified predicate.\n \n',directive
' The preference dialog implementation of this <code>Dialog</code>\n framework method sends <code>performOk</code> to all pages of the\n preference dialog, then calls <code>handleSave</code> on this dialog to\n save any state, and then calls <code>close</code> to close this dialog.\n',directive
'If there isn\'t any value under the given key, the key is\n returned.\n \n',non-directive
' Increments the nesting depth of running operations.\n \n @since 3.0\n',non-directive
'@param pack\n            the pack status\n ',non-directive
' Pack specifies whether all controls in the layout take their preferred\n size. If pack is false, all controls will have the same size which is the\n size required to accommodate the largest preferred height and the largest\n preferred width of all the controls in the layout.\n \n @param pack\n            the pack status\n @return this\n',directive
'@return the current wizard page, or <code>null</code> if the container\n   is not yet showing the wizard\n ',directive
?,non-directive
' Fill specifies whether the controls in a row should be all the same\n height for horizontal layouts, or the same width for vertical layouts.\n \n @param fill\n            the fill status\n @return this\n',directive
?,non-directive
'If the list is \n empty return <code>null</code>.\n \n',directive
'This \n                          package includes two formatters, SimpleFormatter and \n                          XMLFormatter, for formatting log records in plain text\n                          or XML respectively. ',non-directive
' Create an empty dialog settings which loads and saves its\n content to a file.\n ',non-directive
'@return this\n ',non-directive
' Creates a Closure that will call the closure <code>count</code> times.\n ',directive
'<p>\n It contains various type safe methods\n as well as other useful features like deep copying.\n ',non-directive
'@link\njava.util.concurrent.locks.AbstractOwnableSynchronizer}, a simple\nclass that helps record the thread currently holding exclusive\nsynchronization.  ',directive
' Gets the current value, which is the value associated with the last key\n returned by <code>next()</code>.\n\n @return the current value\n @throws IllegalStateException if <code>next()</code> has not yet been called\n',directive
' Informs this field editor\'s listener, if it has one, about a change\n to the value (<code>VALUE</code> property) provided that the old and\n new values are different.\n <p>\n This hook is <em>not</em> called when the text is initialized \n (or reset to the default value) from the preference store.\n </p>\n',directive
' Creates the buttons for this dialog\'s button bar.\n ',non-directive
'<b>NOTE:</b> This will open any blocked notification immediately\n even if there is a modal shell open.\n \n',directive
'@see JFacePreferences#HYPERLINK_COLOR\n',non-directive
'@param width the width of the text input field in characters,\n  or <code>UNLIMITED</code> for no limit\n ',directive
'<h2>Related Documentation</h2>\n\nFor overviews, tutorials, examples, guides, and tool documentation, please see:\n<ul>\n  ',non-directive
' Set whether or not the button is enabled.\n \n @param state\n            the enabled state.\n',non-directive
'@see #spacing(int)\n \n ',non-directive
' Returns information about possible contexts based on the specified\n location within the document that corresponds to the current cursor\n position within the content assist subject control.\n\n ',non-directive
'@param name the name of the preference this field editor works on\n ',non-directive
'\n\nProvides the management interface for monitoring and management of the \nJava virtual machine as well as the operating system on which the \nJava virtual machine is running.  ',non-directive
'</p>\n <p>\n Note that the preferred way of re-initializing a preference to its\n default value is to call <code>setToDefault</code>.\n ',directive
' Extends {@link org.eclipse.jface.text.contentassist.IContextInformationValidator} to\n allow to install a content assistant on the given\n {@linkplain org.eclipse.jface.contentassist.IContentAssistSubjectControl content assist subject control}.\n\n @since 3.0\n @deprecated As of 3.2, replaced by Platform UI\'s field assist support\n',directive
'\n The field editor preference page implementation of this \n <code>PreferencePage</code> method saves all field editors by\n calling <code>FieldEditor.store</code>. Note that this method\n does not save the preference store itself; it just stores the\n values back into the preference store.\n\n @see FieldEditor#store()\n',directive
' A selection provider for annotate revisions. ',non-directive
'@link java.util.concurrent.ConcurrentHashMap},\n{',directive
'There is no explicit model of what is synchronized.\n',directive
'Returns the default-default value (<code>COLOR_DEFAULT_DEFAULT</code>) \n is no default preference with the given name, or if the default \n value cannot be treated as a color.\n\n ',directive
?,non-directive
'</p>\n',non-directive
' Gets a float from a Map in a null-safe manner.\n <p>\n The float is obtained from the results of {@link #getNumber(Map,Object)}.\n\n @param map  the map to use\n @param key  the key to look up\n @return the value in the Map as a float, <code>0.0F</code> if null map input\n',non-directive
' Returns a previously allocated resource associated with the given descriptor, or\n null if none exists yet. \n \n',directive
'@param tableTree\n            the control\n \n ',non-directive
'This is a fallback mode for platforms where the {',directive
' Returns the default value for the rectangle-valued preference\n with the given name in the given preference store.\n ',non-directive
'\nProvides support for trim specification. \n<h2>\nPackage Specification</h2>\n<p> This package provides classes for trim widgets.\n',non-directive
'@return <code>false</code> to abort the container\'s OK\n  processing and <code>true</code> to allow the OK to happen\n',non-directive
'@deprecated As of 3.2, replaced by Platform UI\'s field assist support\n',directive
'A\nprogram may further subclass these subclasses, adding whatever fields and\nmethods are required for its purposes, or it may use these subclasses without\nchange.\n\n\n',directive
'@throws IllegalStateException if <code>next()</code> has not yet been called\n',directive
' Generates layout data to the given control, given the number of cells\n spanned by the control. ',non-directive
'@param labelText\n            the label text of the field editor\n ',non-directive
'</p>\n ',non-directive
' Creates an instance of a status dialog.\n \n @param parent\n            the parent Shell of the dialog\n',non-directive
'@since 3.5\n',non-directive
' Returns the preference page for this node.\n\n ',non-directive
'@see org.eclipse.jface.window.Window#close()\n',non-directive
'@param hunk the diff hunk to adjust to\n',non-directive
'@param key  the key to look up\n ',non-directive
' Sets the minimum page size.\n \n',non-directive
'Only listeners registered at the time this method is\n called are notified.\n \n',directive
'SWT.DEFAULT\n        indicates that the control\'s preferred size should be used. ',directive
' Adjusts this change region to a diff hunk. ',non-directive
'<li>{',non-directive
'@deprecated use {',directive
' Sets the default page image descriptor for this wizard.\n <p>\n This image descriptor will be used to generate an image for a page with\n no image of its own; the image will be computed once and cached.\n </p>\n \n @param imageDescriptor\n            the default page image descriptor\n',directive
'@param newMessage\n            the message, or <code>null</code> to clear the message\n',directive
'@param nCopies  the number of copies to add\n ',non-directive
'For example, if a dialog returns \n <code>false</code>, but also sets a style bit for a \n SWT.RESIZE border, the style bit will be honored.\n \n',directive
' Tells whether the replacer is currently replacing another information control.\n\n @return <code>true</code> while code from {@link #replaceInformationControl(IInformationControlCreator, Rectangle, Object, Rectangle, boolean)} is run\n',non-directive
'@link SWT#DEFAULT} if the dialog\n has been closed by other means.\n ',directive
' <code><pre>\n     // Construct a GridLayout whose left, right, top, and bottom \n     // margin sizes are 10, 5, 0, and 15 respectively\n      \n     Rectangle margins = Geometry.createDiffRectangle(10,5,0,15);\n     GridLayoutFactory.fillDefaults().extendedMargins(margins).applyTo(composite1);\n </pre></code>\n \n ',directive
'@return the wizard container, or <code>null</code> if this\n   wizard has yet to be added to a container\n',directive
'@param name the name of the preference this field editor works on\n ',non-directive
' @param proposal the completion proposal\n',non-directive
' A dialog to display one or more errors to the user, as contained in an\n <code>IStatus</code> object. ',non-directive
'@param name\n            the name of the preference this field editor works on\n ',non-directive
' The default-default value for String preferences (<code>\"\"</code>).\n',non-directive
?,non-directive
?,non-directive
'<li>Flat3Map - designed for good performance at size 3 or less\n',directive
'Everything allocated through the registry should also be disposed through the registry.\n ',directive
'<p>\n Calling {',directive
'A concurrent collection is thread-safe, but not\ngoverned by a single exclusion lock. ',directive
'When a problem occurs in the field, it may be necessary to return the captured logging\n         information to the original development team for diagnosis. ',directive
' Create a new Closure that calls one of the closures depending \n on the predicates. \n <p>\n The Map consists of Predicate keys and Closure values. A closure \n is called if its matching predicate returns true. Each predicate is evaluated\n until one returns true. If no predicates evaluate to true, the default\n closure is called. The default closure is set in the map with a \n null key. The ordering is that of the iterator() method on the entryset \n collection of the map.\n \n @see org.apache.commons.collections.functors.SwitchClosure\n \n @param predicatesAndClosures  a map of predicates to closures\n @return the <code>switch</code> closure\n @throws IllegalArgumentException if the map is null\n @throws IllegalArgumentException if the map is empty\n @throws IllegalArgumentException if any closure in the map is null\n @throws ClassCastException  if the map elements are of the wrong type\n',directive
'<h2>Related Documentation</h2>\n\nFor overviews, tutorials, examples, guides, and tool documentation, please see:\n<ul>\n  ',non-directive
'@param ranges the styled ranges or <code>null</code> to remove them\n',directive
'@param map  the map to use\n ',non-directive
'<p> The relationship between a registered reference object and its queue is\none-sided.  ',directive
?,non-directive
'@throws NullPointerException if array is null\n',non-directive
'This method can be used to set a tooltip for a\n <code>BooleanFieldEditor</code>. ',directive
'Template functionality can be added to a custom text editor by offering\n<tt>TemplateProposal</tt>s as content assist choices, which is\nsimplified by using a subclass of <tt>TemplateCompletionProcessor</tt>. ',directive
'@linkplain #computeHue(int) computeHue(index)}; i.e. ',directive
'No property change events are reported by changing default\n values.\n ',directive
'@exception NumberFormatException\n                if the string value does not contain a parsable number.\n ',directive
'On the first call to this method,\nit creates the platform MBeanServer and registers all platform MXBeans \nincluding platform MXBeans defined in other packages such as\n{',directive
' Creates a new sticky hover manager.\n\n ',non-directive
'The class itself defines a programming interface\nto which applications may write.  ',directive
' Computes the size for this page\'s UI control.\n <p>\n The default implementation of this <code>IPreferencePage</code>\n method returns the size set by <code>setSize</code>; if no size\n has been set, but the page has a UI control, the framework\n method <code>doComputeSize</code> is called to compute the size.\n </p>\n\n @return the size of the preference page encoded as\n   <code>new Point(width,height)</code>, or \n   <code>(0,0)</code> if the page doesn\'t currently have any UI component\n',directive
'<li>margins(0,0)</li>\n ',non-directive
' Creates a new GridLayout, and initializes it with values from the factory.\n \n',non-directive
' @param selection\n            the <code>ISelection</code> to examine.\n @return the first element, or null if empty.\n',non-directive
'The agent options are passed as a single string,\nany additional parsing should be performed by the agent itself.\n\n',directive
'@param display this <code>Display</code> must not be \n        <code>null</code> and must not be disposed in order\n        to use this registry\n',directive
'This method \n allows generated layout data to be used with controls that span multiple cells. \n ',directive
'@see IPageChangeProvider\n ',non-directive
' Adds a listener for input changes to this input change provider.\n Has no effect if an identical listener is already registered.\n\n @param inputChangeListener the listener to add\n @since 3.4\n',non-directive
'@see #createButton(Composite, int, String, boolean)\n ',non-directive
'@param visibleLines the lines (in document offsets) that are currently (perhaps only\n        partially) visible\n',directive
' <p>Returns a FontDescriptor that is equivalent to the reciever, but\n has the given style bits, in addition to any styles the reciever already has.</p>\n \n <p>Does not modify the reciever.</p>\n \n ',directive
'@return the previous wizard page, or <code>null</code> if none\n',directive
'</p>\n\n ',non-directive
'@deprecated JFaceColors no longer maintains a cache of colors.  ',directive
'<li>PROPOSAL_REMOVE<p>\n     any currently shown proposal popup should be closed\n   </li>\n   ',directive
' Sets the document partitioning this content assistant is using.\n\n @param partitioning the document partitioning for this content assistant\n',non-directive
'Converts the double <code>value</code> to a string and\n adds the pair <code>key/value</code> to this dialog settings.\n \n',non-directive
'@param value the long object\n ',non-directive
'@link\njava.util.concurrent.LinkedBlockingQueue}, {',directive
'@param showDialogMenu\n            A boolean indicating whether a menu for moving and resizing\n            the popup should be provided.\n ',non-directive
'The JVM first attempts to invoke \nthe following method on the agent class:\n\n<blockquote>\n<code>public static void\nagentmain(String agentArgs, Instrumentation inst);\n</code>\n</blockquote>\n\n<P>\nIf the agent class does not implement this method then the JVM will attempt to invoke:\n\n<blockquote>\n<code>public static void\nagentmain(String agentArgs);\n</code>\n</blockquote>\n\n<P>\nThe agent class may also have an <code>premain</code> method for use when the agent is started\nusing a command-line option. ',directive
'<p>\n The class <code>WizardPage</code> provides an abstract implementation\n of this interface. ',directive
'\n\nProvides the classes and interfaces for the security framework.\nThis includes classes that implement an easily configurable,\nfine-grained access control security architecture.\nThis package also supports\nthe generation and storage of cryptographic public key pairs,\nas well as a number of exportable cryptographic operations\nincluding those for message digest and signature generation.  Finally,\nthis package provides classes that support signed/guarded objects\nand secure random number generation.\n\nMany of the classes provided in this package (the cryptographic\nand secure random number generator classes in particular) are\nprovider-based.  The class itself defines a programming interface\nto which applications may write.  The implementations themselves may\nthen be written by independent third-party vendors and plugged\nin seamlessly as needed.  Therefore application developers may\ntake advantage of any number of provider-based implementations\nwithout having to add or rewrite code.\n\n<h2>Package Specification</h2>\n\n<ul>\n  <li><a href=\"{@docRoot}/../technotes/guides/security/crypto/CryptoSpec.html\"><b>\n    Cryptography Architecture</b></a></li>\n\n  <li>PKCS8: Private-Key Information Standard, Version 1.2, November 1993</li>\n</ul>\n\n<h2>Related Documentation</h2>\n\nFor further documentation, please see:\n<ul>\n  <li><a href=\n    \"{@docRoot}/../technotes/guides/security/spec/security-spec.doc.html\"><b>\n    Security Architecture</b></a></li>\n\n  <li><a href=\n    \"{@docRoot}/../technotes/guides/security/crypto/HowToImplAProvider.html\"><b>\n    How to Implement a Provider for the Java Cryptography Architecture\n    </b></a></li>\n  <li><a href=\n    \"{@docRoot}/../technotes/guides/security/PolicyFiles.html\"><b>\n    Default Policy Implementation and Policy File Syntax\n    </b></a></li>\n\n  <li><a href=\n    \"{@docRoot}/../technotes/guides/security/permissions.html\"><b>\n    Policy Permissions\n    </b></a></li>\n\n  <li><a href=\n    \"{@docRoot}/../technotes/guides/security/SecurityToolsSummary.html\"><b>\n    Security Tools Summary\n    </b></a></li>\n\n  <li><b>keytool</b>\n    (<a href=\"{@docRoot}/../technotes/tools/solaris/keytool.html\">\n      for Solaris/Linux</a>)\n    (<a href=\"{@docRoot}/../technotes/tools/windows/keytool.html\">\n      for Windows</a>)\n    </li>\n\n  <li><b>jarsigner</b>\n    (<a href=\"{@docRoot}/../technotes/tools/solaris/jarsigner.html\">\n      for Solaris/Linux</a>)\n    (<a href=\"{@docRoot}/../technotes/tools/windows/jarsigner.html\">\n      for Windows</a>)\n    </li>\n\n</ul>\n\n@since JDK1.1\n',directive
' Returns <code>true</code> if the receiver can provide a hover for a certain document line.\n\n @param activeLine the document line of interest\n @return <code>true</code> if the receiver can provide a hover\n',non-directive
'By\n default only return true if the custom area is a label or CLabel that\n cannot take focus.\n \n',directive
' {@inheritDoc}\n \n @since 3.5\n',directive
'The <code>javax.sql</code> package extends the functionality of the JDBC API \nfrom a client-side API to a server-side API, and it is an essential part\nof the Java<sup><font size=-2>TM</font></sup>  Enterprise Edition\n(Java EE<sup><font size=-2>TM</font></sup>) technology. \n',directive
'@throws BadLocationException if <code>selection</code> is not valid regarding the target\n             document\n',directive
'It may, however, be used to\n move to another page in response to some custom\n action such as double clicking in a list.\n ',directive
'@link #PopupDialog(Shell, int, boolean, boolean, boolean, boolean, boolean, String, String)}\n',directive
' Gets the dialog settings that should be used for remembering the bounds of\n of the dialog, according to the dialog bounds strategy.\n \n',non-directive
' Constructs an uninitialized composite image.\n',non-directive
'Attaches a GridData to the control. ',non-directive
'Usually, clients instantiate this class and configure it before using it.\n\n ',directive
'<h2>\nPackage Specification</h2>\nA dialog is a specialized window, typically consisting of a dialog area\nand a button bar, designed for narrow-focussed communication with the user.\n',non-directive
' Sets the hover enrich mode. ',non-directive
' Gets a double from a Map in a null-safe manner,\n using the default value if the the conversion fails.\n <p>\n The double is obtained from the results of {@link #getNumber(Map,Object)}.\n\n @param map  the map to use\n @param key  the key to look up\n @param defaultValue  return if the value is null or if the\n     conversion fails\n @return the value in the Map as a double, <code>defaultValue</code> if null map input\n',non-directive
'@return the node, or <code>null</code> if none\n',directive
'If pack is false, all controls will have the same size which is the\n size required to accommodate the largest preferred height and the largest\n preferred width of all the controls in the layout.\n \n',directive
' Shell style appropriate for an info popup that can get focus.\n',non-directive
?,non-directive
'<p>\n This method waits until the dialog is closed by the end user, and then it\n returns the dialog\'s return code. ',directive
' Returns the descriptor for JFace\'s standard font. Convenience method\n equivalent to\n \n <pre>\n JFaceResources.getFontRegistry().getDescriptor(JFaceResources.DEFAULT_FONT)\n </pre>\n \n @return the font\n @since 3.3\n',non-directive
' The dialog area; <code>null</code> until dialog is layed out.\n',directive
'<p>\n This method is called by the container itself\n when its wizard changes and may be called\n by the wizard at other times to force a window \n size change.\n ',directive
'However, clients are also free to implement this \n interface if <code>WizardDialog</code> does not suit their needs.\n ',directive
?,non-directive
'</p>\n <p>\n Clients usually instantiate and configure this class before using it. ',directive
'If the preference\'s current\n is different from its old default value, its current value is\n unaffected. ',directive
' Set the preference store for the receiver.\n \n',non-directive
'NOTE: Setting this to false and not forking a process may starve any\n asyncExec that tries to open the dialog later.\n \n',directive
'@author Berin Loritsch\n ',non-directive
'This package is internal and may disappear if the changes are merged with the API content assist package. ',directive
' The dialog area; <code>null</code> until dialog is layed out.\n',non-directive
'A program may also arrange to\nbe notified some time after the collector has determined that the reachability\nof a given object has changed.\n\n\n',directive
' Default control creator.\n',non-directive
'@link java.util.concurrent.CopyOnWriteArraySet}.\n',directive
' @param display the display the color is from\n @return the Color used for banner foregrounds\n @see SWT#COLOR_LIST_FOREGROUND\n @see Display#getSystemColor(int)\n',non-directive
' Sets the size of all pages. ',non-directive
' Instructs the GridLayout to ignore this control when performing layouts.\n \n @param shouldExclude\n            true iff the control should be excluded from layouts\n @return this\n',directive
'@param titleText\n            Text to be shown in an upper title area, or <code>null</code>\n            if there is no title.\n ',directive
'@link Table} control you want the {',directive
'Convenience method equivalent to\n \n <pre>\n JFaceResources.getFontRegistry().get(JFaceResources.HEADER_FONT)\n </pre>\n \n ',directive
' Get the specified {@link SortedMap} as an {@link IterableSortedMap}.\n @param <K>\n @param <V>\n @param sortedMap to wrap if necessary\n @return {@link IterableSortedMap}<K, V>\n @since Commons Collections 5\n @TODO fix version\n',directive
'<p>\n A property change event is reported if the current value of the \n preference actually changes from its previous value. ',directive
' Returns <code>true</code> if a revision model has been set, <code>false</code> otherwise.\n\n @return <code>true</code> if a revision model has been set, <code>false</code> otherwise\n',non-directive
?,non-directive
?,non-directive
'@param layout The SWT grid bag layout used by the part. ',non-directive
'@link Collection#removeAll(Collection)} method specifies\n that cardinality should <i>not</i> be respected; this method should\n remove <i>all</i> occurrences of every object contained in the \n given collection.\n\n ',directive
' Recomputes the page\'s error state by calling <code>isValid</code> for\n every field editor.\n',directive
'<h4><a name=\"extension\">Platform Extension</a></h4>\n\nA Java virtual machine implementation may add its platform extension to\nthe management interface by defining platform-dependent\ninterfaces that extend the standard management interfaces to include\nplatform-specific metrics and management operations.  \n',directive
' Create a new section in the receiver and return it.\n \n @param name\n            the name of the new section\n @return the new section\n',non-directive
' The default-default value for float preferences (<code>0.0f</code>).\n',non-directive
' Creates a factory that creates copies of the given layout.\n \n',non-directive
'<h2>Related Documentation</h2>\n\nFor tool documentation, please see:\n<ul>\n  ',non-directive
'@throws LineIndexOutOfBoundsException if the passed {',directive
'<li><a href=\"../../../../technotes/guides/security/crypto/CryptoSpec.html\"><b>Cryptography\n   Architecture</b></a>\n  ',non-directive
' @param listener the proposal listener\n',non-directive
'@since 3.1\n',non-directive
' Returns an enumeration of all preferences known to this store which have\n current values other than their default value.\n \n @return an array of preference names\n',non-directive
?,non-directive
'@param foreground the foreground color\n ',non-directive
'To allocate shorter-lived\n resources, manage them with <code>create</code>, and <code>destroy</code>\n rather than this method.\n ',directive
'</p>\n',non-directive
?,non-directive
' Fires a <code>PropertyChangeEvent</code>.\n \n',non-directive
' Wrap specifies whether a control will be wrapped to the next row if there\n is insufficient space on the current row.\n \n @param wrap\n            the wrap status\n @return this\n',non-directive
' Factory for control animators used by JFace to animate the display of an SWT\n Control. ',directive
'@param title\n            the title of this dialog page, or <code>null</code> if none\n',directive
' Creates an empty image registry.\n \n @param display this <code>Display</code> must not be \n        <code>null</code> and must not be disposed in order\n        to use this registry\n',directive
'<p>\nThe applet framework involves two\nentities: the <i>applet</i> and the <i>applet context</i>. ',directive
'@link org.apache.commons.collections.IterableMap IterableMap},\n{',non-directive
' Constant for an info message (value 1).\n',non-directive
'If an input parameter is required, then {',directive
' {@inheritDoc}\n \n @since 3.5\n',directive
' Gets a button in this dialog\'s button bar.\n \n',non-directive
'This method is usually invoked by an <code>IRunnableContext</code>\'s <code>run</code> method,\n which supplies the progress monitor.\n ',directive
'<li>Map Entry - various map entry implementations\n',non-directive
'<li>margins(0,0)</li>\n ',non-directive
'This attribute is required, if it is not present the agent\n                        will not be started.\n                        ',directive
'@param name the name of the preference\n ',non-directive
' Returns the JFace\'s banner font. Convenience method equivalent to\n \n <pre>\n JFaceResources.getFontRegistry().get(JFaceResources.BANNER_FONT)\n </pre>\n \n @return the font\n',non-directive
?,non-directive
'</p>\n\n<p>Note: None of the classes in this package maintain global state.\n',directive
'@link\njava.util.concurrent.BlockingQueue} interface, that defines blocking\nversions of put and take: {',directive
' Create the contents for the receiver.\n \n @param parent\n            the Composite that the children will be created in\n',non-directive
'the progress indicator ',non-directive
'\n @return the set of keys this manager knows about.  This collection \n should be immutable.\n',directive
' Message type constant used to display a warning icon with the message.\n \n @since 2.0\n @deprecated\n',directive
'<P>\n<P>\n<h3><code>java.sql</code> and <code>javax.sql</code> Features Introduced in the JDBC 3.0 API</h3>\n<UL>\n  ',non-directive
'@link ILabelProvider} becomes owned by the {',directive
' Gets an iterator that provides an ordered iteration over the elements\n contained in a collection of {',non-directive
'@param <V> the type of the value\n ',non-directive
'@param title the title of this dialog page, \n  or <code>null</code> if none\n',directive
'@param newValue the new value.\n',non-directive
?,non-directive
'@return the long-valued preference\n',non-directive
' Set whether or not the controls in the field editor\n are enabled.\n @param enabled The enabled state.\n @param parent The parent of the controls in the group.\n  Used to create the controls if required.\n',directive
' The value of the preference when the user wishes to prompted for an\n answer every time the question is to be asked.\n',non-directive
'@return the wizard page with the given name, or <code>null</code> if none\n',directive
' The label for retry buttons.\n',non-directive
'@deprecated use bestDataArray in order to support Motif multiple entry\n             fonts.\n',directive
'@deprecated As of 3.2, replaced by Platform UI\'s field assist support\n',directive
' Sets the default value for the integer-valued preference with the\n given name. \n <p>\n Note that the current value of the preference is affected if\n the preference\'s current value was its old default value, in which\n case it changes to the new default value. If the preference\'s current\n is different from its old default value, its current value is\n unaffected. No property change events are reported by changing default\n values.\n </p>\n\n @param name the name of the preference\n @param value the new default value for the preference\n',directive
'<li>Actions in a thread prior to placing an object into any concurrent\n  collection <i>happen-before</i> actions subsequent to the access or\n  removal of that element from the collection in another thread.\n\n  ',directive
' Returns the original (before applying diff information) line range of this change region.\n\n @return the original (before applying diff information) line range of this change region\n',directive
'Does not create the GridData of any of the controls in the composite.\n \n',directive
'@param newValue\n            the new value\n',non-directive
?,non-directive
'@author Avalon\n ',non-directive
'@param image\n            the dialog title image, or <code>null</code> if none\n ',directive
' Get the IDialogBlockedHandler to be used by WizardDialogs and\n ModalContexts.\n \n @return Returns the blockedHandler.\n',non-directive
'Note\n that these margins will be added to the ones specified by\n {',directive
'Has no effect if an identical listener is not registered.\n\n ',directive
?,non-directive
'@param key  the key to look up\n ',non-directive
'@link #start()}\n',directive
' Workaround for https://bugs.eclipse.org/bugs/show_bug.cgi?id=23980 : Shells without borders are\n not resizable on GTK.\n \n',directive
'@param labelText the label text of the field editor\n ',non-directive
'\n<p>\nThis package contains implementations of the\n{@link java.util.Collection Collection} interface.\n<p>\nThe following implementations are provided in the package:\n<ul>\n<li>CompositeCollection - a collection that combines multiple collections into one\n</ul>\nThe following decorators are provided in the package:\n<ul>\n<li>Synchronized - synchronizes method access for multi-threaded environments\n<li>Unmodifiable - ensures the collection cannot be altered\n<li>Predicated - ensures that only elements that are valid according to a predicate can be added\n<li>Typed - ensures that only elements that are of a specific type can be added\n<li>Transformed - transforms elements as they are added\n</ul>\n</pre>\n',directive
'@deprecated As of 3.4, replaced by\n             {',directive
'@link #end()}\n ',directive
'@param iControl information control or <code>null</code> if none\n ',directive
' Show the receiver as showing an error.\n ',non-directive
' Moves the start offset to <code>start</code>, keeping {@link #end()} constant.\n\n @param start the new start, must be &gt;= 0 and &lt; {@link #end()}\n @throws LineIndexOutOfBoundsException if <code>start</code> &lt; 0 or &gt;= {@link #end()}\n',directive
'@return Comparator<? super V>\n',directive
'If a <code>null</code> value is given, <code>null</code>\n is returned.\n \n',directive
'@return the height, or <code>-1</code> if no previewer\n  is installed\n',directive
?,non-directive
'@param background Color the background color (maybe <code>null</code>)\n',directive
' Reset the progress bar to it\'s normal style.\n @since 3.4\n',non-directive
'@link #appendVerifyKeyListener(VerifyKeyListener)} might work.\n ',directive
' Creates new layout object.\n \n',non-directive
'If no predicates evaluate to true, the default\n closure is called.\n \n',directive
' Sets the width and height hints. The width and height hints override the\n control\'s preferred size. If either hint is set to SWT.DEFAULT, the\n control\'s preferred size is used.\n \n @param hint\n            size (pixels) to be used instead of the control\'s preferred\n            size. If the x or y values are set to SWT.DEFAULT, the\n            control\'s computeSize() method will be used to obtain that\n            dimension of the preferred size.\n @return this\n',directive
'<p>\n The default implementation of this framework method delegates the request\n to the supplied input validator object; if it finds the input invalid,\n the error message is displayed in the dialog\'s message line. ',directive
' Sets whether the columns should be forced to be equal width\n \n @param equal true iff the columns should be forced to be equal width\n @return this\n',directive
'@param closures  an array of closures to chain\n ',non-directive
'<p>\n A valid rectangle representation is a string of the form\n <code><it>x</it>,<it>y</it>,<it>width</it>,<it>height</it></code>\n where <code><it>x</it></code>, <code><it>y</it></code>,\n <code><it>width</it></code>, and <code><it>height</it></code>\n are valid ints.\n ',directive
' Interface for UI components which can execute a long-running operation\n in the form of an <code>IRunnableWithProgress</code>.\n The context is responsible for displaying a progress indicator and Cancel\n button to the end user while the operation is in progress; the context\n supplies a progress monitor to be used from code running inside the operation.\n Note that an <code>IRunnableContext</code> is not a runnable itself.\n <p>\n For examples of UI components which implement this interface,\n see <code>ApplicationWindow</code>, <code>ProgressMonitorDialog</code>,\n and <code>WizardDialog</code>.\n </p>\n\n @see IRunnableWithProgress\n @see org.eclipse.jface.window.ApplicationWindow\n @see org.eclipse.jface.dialogs.ProgressMonitorDialog\n @see org.eclipse.jface.wizard.WizardDialog\n',directive
' Creates and returns a new SWT <code>ImageData</code> object\n for this image descriptor.\n Note that each call returns a new SWT image data object.\n <p>\n This framework method is declared public so that it is\n possible to request an image descriptor\'s image data without\n creating an SWT image object.\n </p>\n <p>\n Returns <code>null</code> if the image data could not be created.\n </p>\n\n @return a new image data or <code>null</code>\n',directive
' Constant for the warning image, or a simple dialog with the warning image and a single OK button (value 4).\n \n',directive
'<p>\n A Map Entry has considerable additional semantics over and above a simple\n key-value pair. ',directive
'<p>At the most abstract level, the protocol is given by 3 interfaces:\n<ul>\n',non-directive
'<p>\n Included for backwards compatibility.  ',directive
'@param key  the key of the value to look up in that map\n  ',non-directive
'If the same resource was \n created multiple times, this may decrement a reference count rather than \n disposing the actual resource.  \n \n',directive
'\n\nProvides the management interface for monitoring and management of the \nJava virtual machine as well as the operating system on which the \nJava virtual machine is running.  It allows both local and remote \nmonitoring and management of the running Java virtual machine.  \n\n<h4>Platform MXBeans</h4>\n\nThis package defines the management interface of the following\ncomponents:\n\n<blockquote>\n<table cellspacing=1 summary=\"Description of the MBeans\">\n<tr>\n<th><p align=\"left\">Management Interface</p></th>\n<th><p align=\"left\">Description</p></th>\n</tr>\n<tr>\n<td> <tt>{@link java.lang.management.ClassLoadingMXBean}</tt> </td>\n<td> Class loading system of the Java virtual machine.</td>\n</tr>\n<tr>\n<td> <tt>{@link java.lang.management.CompilationMXBean}</tt> </td>\n<td> Compilation system of the Java virtual machine.</td>\n</tr>\n<tr>\n<td> <tt>{@link java.lang.management.MemoryMXBean}</tt> </td>\n<td> Memory system of the Java virtual machine.</td>\n</tr>\n<tr>\n<td> <tt>{@link java.lang.management.ThreadMXBean}</tt> </td>\n<td> Threads system of the Java virtual machine.</td>\n</tr>\n<tr>\n<td> <tt>{@link java.lang.management.RuntimeMXBean}</tt> </td>\n<td> Runtime system of the Java virtual machine.</td>\n</tr>\n<tr>\n<td> <tt>{@link java.lang.management.OperatingSystemMXBean}</tt> </td>\n<td> Operating system on which the Java virtual machine is running.</td>\n</tr>\n<tr>\n<td> <tt>{@link java.lang.management.GarbageCollectorMXBean}</tt> </td>\n<td> Garbage collector in the Java virtual machine.</td>\n</tr>\n<tr>\n<td> <tt>{@link java.lang.management.MemoryManagerMXBean}</tt> </td>\n<td> Memory manager in the Java virtual machine.</td>\n</tr>\n<tr>\n<td> <tt>{@link java.lang.management.MemoryPoolMXBean}</tt> </td>\n<td> Memory pool in the Java virtual machine.</td>\n</tr>\n</table>\n</blockquote>\n\n<p>\nA platform MXBean is a <i>managed bean</i> that defines the management\ninterface for one component for the platform and is specified in the\n<a href=\"ManagementFactory.html#MXBean\">\nManagementFactory</a> class.\n\n<p>An application can monitor the instrumentation of the \nJava virtual machine and manage certain characteristics in\nthe following ways:\n<ul>\n<li><i>Direct access to an MXBean interface</i>\n    <ol type=\"a\">\n    <li>Get the MXBean instance through the static factory method\n        and access the MXBean interface locally of the running\n        virtual machine.</li>\n    <li>Construct an MXBean proxy instance that\n        forwards the method calls to a given \n        {@link javax.management.MBeanServer MBeanServer}\n        by calling\n        {@link java.lang.management.ManagementFactory#newPlatformMXBeanProxy\n         ManagementFactory.newPlatformMXBeanProxy}.\n         A proxy is typically constructed to remotely access\n         an MXBean of another running virtual machine.</li>\n    </ol></li>\n<li><i>Indirect access via {@link javax.management.MBeanServer MBeanServer} \n       interface</i>\n    <ol type=\"a\">\n    <li>Go through the \n        {@link java.lang.management.ManagementFactory#getPlatformMBeanServer\n        platform MBeanServer} to access MXBeans locally or\n        a specific <tt>MBeanServerConnection</tt> to access\n        MXBeans remotely.\n        The attributes and operations of an MXBean use only\n        <em>JMX open types</em> which include basic data types, \n        {@link javax.management.openmbean.CompositeData CompositeData},\n        and {@link javax.management.openmbean.TabularData TabularData} \n        defined in {@link javax.management.openmbean.OpenType OpenType}.\n       </li>\n    </ol></li>\n</ul>\n\nBelow shows a few <a href=\"#examples\">examples</a> of different\nways to access MXBeans.\n\n<h4>ManagementFactory</h4>\n\nThe {@link java.lang.management.ManagementFactory} class is the management\nfactory class for the Java platform.  This class provides a set of \nstatic factory methods to obtain the MXBeans for the Java platform\nto allow an application to access the MXBeans directly.\n\n<p>A <em>platform MBeanServer</em> can be accessed with the\n{@link java.lang.management.ManagementFactory#getPlatformMBeanServer\n getPlatformMBeanServer} method.  On the first call to this method,\nit creates the platform MBeanServer and registers all platform MXBeans \nincluding platform MXBeans defined in other packages such as\n{@link java.util.logging.LoggingMXBean}.  \nEach platform MXBean is registered with a unique name defined in the\n{@link java.lang.management.ManagementFactory ManagementFactory} class\nfor constructing {@link javax.management.ObjectName ObjectName}. \nThis is a single MBeanServer that can be shared by different managed \ncomponents running within the same Java virtual machine.\n \n<h4>Interoperability</h4>\n\nA management application and a platform MBeanServer of a running\nvirtual machine can interoperate \nwithout requiring classes used by the platform MXBean interfaces.\nThe data types being transmitted between the JMX connector\nserver and the connector client are JMX\n{@link javax.management.openmbean.OpenType open types} and\nthis allows interoperation across versions.\n\n<p>A data type used by the MXBean interfaces are mapped to\nan open type when being accessed via MBeanServer interface.\nThe data type mapping is specified in the\n{@link java.lang.management.ManagementFactory ManagementFactory} class.\n\n<h4><a name=\"examples\">Ways to Access MXBeans</a></h4>\n\nThere are three different ways to access the management interfaces. \n\n<p>\n<ol>\n<li>Call the methods in the MXBean directly within the same \n    Java virtual machine.\n<blockquote><pre>\n   RuntimeMXBean mxbean = ManagementFactory.getRuntimeMXBean();\n\n   // Get the standard attribute \"VmVendor\"\n   String vendor = mxbean.getVmVendor();\n\n</pre>\n</blockquote>\n</li>\n\n<li>Go through a <tt>MBeanServerConnection</tt> connecting \n    to the <tt>platform MBeanServer</tt> of a running virtual machine.</li>\n<blockquote><pre>\n   MBeanServerConnection mbs;\n\n   // Connect to a running JVM (or itself) and get MBeanServerConnection\n   // that has the JVM MXBeans registered in it\n   ...\n\n   try {\n       // Assuming the RuntimeMXBean has been registered in mbs\n       ObjectName oname = new ObjectName(ManagementFactory.RUNTIME_MXBEAN_NAME);\n    \n       // Get standard attribute \"VmVendor\"\n       String vendor = (String) mbs.getAttribute(oname, \"VmVendor\");\n   } catch (....) {\n       // Catch the exceptions thrown by ObjectName constructor\n       // and MBeanServer.getAttribute method\n       ...\n   }\n\n</pre></blockquote>\n\n<li>Use MXBean proxy.</li>\n<blockquote><pre>\n   MBeanServerConnection mbs;\n\n   // Connect to a running JVM (or itself) and get MBeanServerConnection\n   // that has the JVM MBeans registered in it\n   ...\n\n   // Get a MBean proxy for RuntimeMXBean interface\n   RuntimeMXBean proxy = \n       ManagementFactory.newPlatformMXBeanProxy(mbs,\n                                                ManagementFactory.RUNTIME_MXBEAN_NAME,\n                                                RuntimeMXBean.class);\n   // Get standard attribute \"VmVendor\" \n   String vendor = proxy.getVmVendor();\n</pre></blockquote>\n</ol>\n\n\n<h4><a name=\"extension\">Platform Extension</a></h4>\n\nA Java virtual machine implementation may add its platform extension to\nthe management interface by defining platform-dependent\ninterfaces that extend the standard management interfaces to include\nplatform-specific metrics and management operations.  \nThe static factory methods in the <tt>ManagementFactory</tt> class will\nreturn the MBeans with the platform extension.\n\n<p>\nIt is recommended to name the platform-specific attributes with\na vendor-specific prefix such as the vendor\'s name to\navoid collisions of the attribute name between the future extension\nto the standard management interface and the platform extension.\nIf the future extension to the standard management interface defines\na new attribute for a management interface and the attribute name\nis happened to be same as some vendor-specific attribute\'s name,\nthe applications accessing that vendor-specific attribute would have\nto be modified to cope with versioning and compatibility issues.\n\n<p>Below is an example showing how to access a platform-specific\nattribute from Sun\'s implementation of the <tt>RuntimeMXBean</tt>.\n\n<p>\n1) Direct access to the Sun-specific MXBean interface\n<blockquote><pre>\n   com.sun.management.RuntimeMXBean mxbean = \n       (com.sun.management.RuntimeMXBean) ManagementFactory.getRuntimeMXBean();\n\n   // Get the standard attribute \"VmVendor\"\n   String vendor = mxbean.getVmVendor();\n\n   // Get the platform-specific attribute \"Bar\"\n   BarType bar = mxbean.getBar();\n\n</pre>\n</blockquote>\n\n<p>\n2) Access the Sun-specific MXBean interface via <tt>MBeanServer</tt>\n\n<blockquote><pre>\n   MBeanServerConnection mbs;\n\n   // Connect to a running JVM (or itself) and get MBeanServerConnection\n   // that has the JVM MXBeans registered in it\n   ...\n\n   try {\n       // Assuming the RuntimeMXBean has been registered in mbs\n       ObjectName oname = new ObjectName(ManagementFactory.RUNTIME_MXBEAN_NAME);\n    \n       // Get standard attribute \"VmVendor\"\n       String vendor = (String) mbs.getAttribute(oname, \"VmVendor\");\n\n       // Check if this MXBean contains Sun\'s extension\n       if (mbs.isInstanceOf(oname, \"com.sun.management.RuntimeMXBean\")) {\n           // Get platform-specific attribute \"Bar\"\n           BarType bar = (String) mbs.getAttribute(oname, \"Bar\");\n       }\n   } catch (....) {\n       // Catch the exceptions thrown by ObjectName constructor\n       // and MBeanServer methods\n       ...\n   }\n\n</pre></blockquote>\n\n<p> Unless otherwise noted, passing a <tt>null</tt> argument to a constructor\nor method in any class or interface in this package will cause a {@link\njava.lang.NullPointerException NullPointerException} to be thrown.\n\n<p> The java.lang.management API is thread-safe.\n\n@see <a href=\"../../../javax/management/package-summary.html\">\n     JMX Specification.</a>\n\n@author  Mandy Chung\n@version 1.15, 04/02/10\n@since   1.5\n\n',directive
'This method fails if the value does not represent a point.\n ',non-directive
'<li>adapt the revision information to (quick) diff scripts</li>\n</ul>\n',directive
' Returns the Restore Defaults button.\n \n @return the Restore Defaults button\n',non-directive
'@throws LineIndexOutOfBoundsException if <code>-delta</code> &gt;= {',directive
'Note that the pages need not all belong\n to the same wizard.\n ',directive
'@param dflt the default value\n ',non-directive
' Tests if dialogs that have help control should show it\n all the time or only when explicitly requested for\n each dialog instance.\n \n @return <code>true</code> if dialogs that support help\n control should show it by default, <code>false</code> otherwise.\n @since 3.2\n',directive
?,non-directive
'@return the value in the Map as a float, <code>defaultValue</code> if null map input\n',non-directive
'The program may remove references from a queue either\nby polling or by blocking until a reference becomes available.  ',directive
'@param defaultClosure  the default to call if no predicate matches\n ',directive
' Display the given error message. The currently displayed message is saved\n and will be redisplayed when the error message is set to\n <code>null</code>.\n \n @param newErrorMessage\n            the errorMessage to display or <code>null</code>\n',directive
'@link java.util.concurrent.ConcurrentHashMap} is\n\"concurrent\".  ',directive
'<p>\n The closure at array location 0 is called if the predicate at array\n location 0 returned true. ',directive
' The label for next buttons.\n',non-directive
'@link java.util.concurrent.locks.LockSupport}\nclass provides lower-level blocking and unblocking support that is\nuseful for those developers implementing their own customized lock\nclasses.\n\n',directive
'\nProvides support for managing resources such as SWT\nfonts and images.\n',non-directive
' The control and/or font must not be disposed at the time the PixelConverter\n is created.\n \n',directive
'<p>\n Usage:\n <pre>\n IPreferenceStore store = ...;\n PreferenceConverter.setValue(store, \"bg\", new RGB(127,127,127));\n ...\n ',directive
?,non-directive
?,non-directive
'@see #margins(int, int)\n',non-directive
' Property name constant (value <code>\"field_editor_is_valid\"</code>)\n to signal a change in the validity of the value of this field editor.\n',non-directive
' Creates a copy of the receiver.\n \n',non-directive
'@see MultiValueMap\n ',non-directive
'<p>\nThe following implementations are provided in the package:\n<ul>\n',non-directive
' Margin height (in pixels) to be used in layouts inside popup dialogs\n (value is 0).\n',non-directive
' Creates a ProgressMonitorPart.\n ',non-directive
'@since 3.4\n',non-directive
'</p>\n\n ',non-directive
'Depending on the hue, the brightness range within the RGB gamut may be\n different, outside values are clipped. ',directive
'\n\nProvides interfaces for generating RSA (Rivest, Shamir and\nAdleman AsymmetricCipher algorithm)\nkeys as defined in the RSA Laboratory Technical Note\nPKCS#1, and DSA (Digital Signature\nAlgorithm) keys as defined in NIST\'s FIPS-186.\n',directive
' A mutator for the array of buttons in the button bar.\n \n @param buttons\n            The buttons in the button bar; must not be <code>null</code>.\n',directive
'In the JFace provided dialogs this will be\n            an <code>IDialogPage</code>.\n ',directive
' Create a new Closure that calls one of the closures depending \n on the predicates.\n ',directive
?,non-directive
'@since 3.0\n',non-directive
'\n<p>Provides support for bindings between commands and keys.</p>\n\n<h2>Package Specification</h2>\n<p>\nThis just a key-specific implementation of the generic bindings and trigger\nsupport.  This package provides an abstraction layer between the SWT key events\nand key bindings within JFace.\n</p>\n<p>\n<code>KeySequence</code> is a <code>TriggerSequence</code> that has\n<code>KeyStroke</code> instances as triggers.  A <code>KeyStroke</code> is\ncomposed of one or more keys held down at the same time.  A key stroke ends\nwhen the keys are released.  A key stroke can contain zero or more modifiers\nkeys, but it always contains exactly one natural key.  A modifier key is one of\nCtrl, Shift, Alt, or Command.  A natural key is anything else.</p>\n<p>\nNatural keys are further subdivided into special keys and character keys.\nCharacter keys are keys that have an ASCII representation (e.g., Space, \'A\' and\nBackspace).  Special keys are ones that do not (e.g., Arrow Up, F11, and\nNumLock).\n</p>\n<p>\n<code>SWTKeySupport</code> is a static class that provides the link between SWT\nand these internal representations.  It has methods for converting between SWT\nkey events and the internal representation, and vice versa.  It also provides\naccess to the native-style key formatting facilities.\n</p>\n',directive
'And finally it shows the first page.\n',non-directive
?,non-directive
'@link\n SWTException} being thrown.\n ',directive
'Equivalent to {',directive
'@param map  the map to use\n ',non-directive
'</p>\n \n ',non-directive
'@see ProgressMonitorWrapper\n',non-directive
'@param title the title for this wizard page,\n   or <code>null</code> if none\n ',directive
'@since 3.1\n',non-directive
'If the method invocation results in an exception being\nthrown, the exception is indicated to caller.\n\n',directive
' Notifies any selection changed listeners that the selected page has\n changed. Only listeners registered at the time this method is called are\n notified.\n \n @param event\n            a selection changed event\n \n @see IPageChangedListener#pageChanged\n \n @since 3.1\n',directive
'@link Hunk} information\n',non-directive
'@link Layout} applied to.\n ',directive
' Sets the information control replacer for this manager and disposes the\n old one if set.\n\n @param replacer the information control replacer for this manager, or\n            <code>null</code> if no information control replacing should\n            take place\n',directive
'When the agent is started using a command-line option, the <code>agentmain</code>\nmethod is not invoked.\n\n\n',directive
'@param iterators  the iterators to use, not null or empty or contain nulls\n ',non-directive
' Returns an iterator over the subnodes (immediate children)\n of this contribution node.\n\n @return an IPreferenceNode array containing the child nodes\n',non-directive
' Static to prevent opening of error dialogs for automated testing.\n',directive
'<p><tt>WizardSelectionPage</tt>, a special abstract subclass of <tt>WizardPage</tt>,\nallows whole other wizards to be connected to a root page.\n',directive
?,non-directive
?,non-directive
?,non-directive
' Gets a String from a Map in a null-safe manner.\n ',non-directive
'@link #length()}\n',directive
'@param length the length of the selection based on the subject\'s model e.g. ',non-directive
' Button id for a \"Yes to All\" button (value 4).\n',non-directive
' Identifier for the color used to show extra informations in labels, as a\n qualified name. ',non-directive
'@return the wizard, or <code>null</code> if this page has not been\n   added to any wizard\n ',directive
'An information provider presents information for a certain subject in a\nspecific information control. ',non-directive
'generateLayout must be called after all the child controls have\n been created. ',directive
'Has no affect if the listener is not registered.\n\n ',directive
' Sets the current value of the preference with the given name to\n the given string value without sending a property change.\n <p>\n This method does not fire a property change event and \n should only be used for setting internal preferences \n that are not meant to be processed by listeners.\n Normal clients should instead call #setValue.\n </p>\n\n @param name the name of the preference\n @param value the new current value of the preference\n',directive
' Creates this wizard\'s controls in the given parent control.\n ',non-directive
'@see org.eclipse.jface.resource.ResourceManager\n \n ',non-directive
'</p>\n\n ',non-directive
' Returns this content assist subject control\'s document.\n\n ',non-directive
'\n\nProvides classes and interfaces for key specifications and algorithm\nparameter specifications.\n\n<p>A key specification is a transparent representation of the key material\nthat constitutes a key. A key may be specified in an algorithm-specific\nway, or in an algorithm-independent encoding format (such as ASN.1).\nThis package contains key specifications for DSA public and private keys,\nRSA public and private keys, PKCS #8 private keys in DER-encoded format,\nand X.509 public and private keys in DER-encoded format.\n\n<p>An algorithm parameter specification is a transparent representation\nof the sets of parameters used with an algorithm. This package contains\nan algorithm parameter specification for parameters used with the\nDSA algorithm.\n\n<h2>Package Specification</h2>\n\n<ul>\n  <li>PKCS #1: RSA Encryption Standard, Version 1.5, November 1993</li>\n  <li>PKCS #8: Private-Key Information Syntax Standard, \n    Version 1.2, November 1993</li>\n  <li>Federal Information Processing Standards Publication (FIPS PUB) 186:\n    Digital Signature Standard (DSS)</li>\n</ul>\n\n<h2>Related Documentation</h2>\n\nFor documentation that includes information about algorithm parameter\nand key specifications, please see:\n<ul>\n  <li>\n    <a href=\n      \"{@docRoot}/../technotes/guides/security/crypto/CryptoSpec.html\">\n      <b>Java<FONT SIZE=-2><SUP>TM</SUP></FONT>\n      Cryptography Architecture API Specification and Reference\n      </b></a></li>\n  <li>\n    <a href=\n      \"{@docRoot}/../technotes/guides/security/crypto/HowToImplAProvider.html\">\n      <b>How to Implement a Provider for the\n      Java<FONT SIZE=-2><SUP>TM</SUP></FONT> Cryptography Architecture\n      </b></a></li>\n</ul>\n\n@since 1.2\n',directive
' Updates the message (or error message) shown in the message line to \n reflect the state of the currently active page in this container.\n <p>\n This method is called by the container itself\n when its wizard page changes and may be called\n by the page at other times to force a message \n update.\n </p>\n',directive
' Creates a new dialog page with the given title and image.\n \n @param title\n            the title of this dialog page, or <code>null</code> if none\n @param image\n            the image for this dialog page, or <code>null</code> if none\n',non-directive
'<li><a href=\"\">##### REFER TO NON-SPEC DOCUMENTATION HERE #####</a>\n</ul>\n',non-directive
'</p>\n',non-directive
'@see #generateLayout\n ',non-directive
'@return a new RowDataFactory that creates copies of the argument by\n         default\n',non-directive
'@link Iterator#next()} method will return the lesser of\n <code>A.next()</code> and <code>B.next()</code> and so on.\n ',non-directive
'@param map  the map to convert to a Properties object, may not be null\n ',directive
'@return <code>true</code> if this call changed the collection\n',directive
' Create a new Transformer that calls one of two transformers depending \n on the specified predicate.\n \n @see org.apache.commons.collections.functors.SwitchTransformer\n \n @param predicate  the predicate to switch on\n @param trueTransformer  the transformer called if the predicate is true\n @param falseTransformer  the transformer called if the predicate is false\n @return the transformer\n @throws IllegalArgumentException if the predicate is null\n @throws IllegalArgumentException if either transformer is null\n',directive
?,non-directive
'<p>\n This flag should be set on wizards where the first wizard page adds\n follow-on wizard pages based on user input.\n ',directive
'@since 3.4\n',non-directive
'Once it is adjusted to diff information, the originally contiguous range may be split\n into several ranges or even be empty.\n\n ',directive
' The field editor preference page implementation of this <code>IPreferencePage</code>\n (and <code>IPropertyChangeListener</code>) method intercepts <code>IS_VALID</code> \n events but passes other events on to its superclass.\n',directive
'@param parent\n            the parent of the field editor\'s control\n',non-directive
'Otherwise, the subclass contract is the same as <code>WizardPage</code>.\n ',directive
' Creates a new context information validator which is ready to be installed on\n a particular context information.\n\n ',non-directive
?,non-directive
' <p>\n This class is the abstract superclass of all dialog trays. ',directive
?,non-directive
'\nProvides a framework for preferences.\n<h2>\nPackage Specification</h2>\nA <b>preference manager</b> (class <tt>PreferenceManager</tt>) maintains\na tree of <b>preference nodes</b>. Preferences are presented to the end\nuser in a <b>preference dialog</b> consisting of <b>preference pages</b>.\nA preference page consists of multiple preference fields, which can be\ndisplayed and modified though <b>field editors</b>. The framework contains\nan abstract base class for preference dialogs (<tt>PreferenceDialog</tt>),\nand an abstract preference page class (<tt>FieldEditorPreferencePage</tt>)\nfor hosting these field editors.\n<p>The individual preference values are maintained in a <b>preference store</b>\n(<tt>IPreferenceStore</tt>). Each preference has a current value and a\ndefault value use to (re-)initialize it. The framework provides a concrete\npreference store implementation (<tt>PreferenceStore</tt>) based on an\ninternal <tt>java.util.Properties</tt> object, with support for persisting\nthe non-default preference values to files or streams.\n<p>A field editor presents the value of a single preference to the end\nuser. The value is loaded from the preference store; if modified by the\nend user, the value is validated and eventually stored back to the preference\nstore.\n<p>This package contains ready-to-use field editors for various types of\npreferences:\n<ul>\n<li>\n<tt>BooleanFieldEditor</tt> - booleans</li>\n\n<li>\n<tt>IntegerFieldEditor</tt> - integers</li>\n\n<li>\n<tt>StringFieldEditor</tt> - text strings</li>\n\n<li>\n<tt>RadioGroupFieldEditor</tt> - enumerations</li>\n\n<li>\n<tt>ColorFieldEditor</tt> - RGB colors</li>\n\n<li>\n<tt>FontFieldEditor</tt> - fonts</li>\n\n<li>\n<tt>DirectoryFieldEditor</tt> - directories</li>\n\n<li>\n<tt>FileFieldEditor</tt> - files</li>\n\n<li>\n<tt>PathEditor</tt> - paths</li>\n</ul>\nAll field editors are subclasses of the abstract base class <tt>FieldEditor</tt>;\nthe framework allows new kinds of field editors to be defined by subclassing\nthis class or one of its subclasses.\n<p>Note: None of the classes in this package maintain global state.\n<br>&nbsp;\n',directive
'Some time after the\ngarbage collector determines that the reachability of the referent has changed\nto the value corresponding to the type of the reference, it will add the\nreference to the associated queue.  ',directive
'@link java.util.concurrent.Executors}\nclass provides factory methods for the most common kinds and\nconfigurations of Executors, as well as a few utility methods for\nusing them. ',directive
' Sets the current page.\n ',non-directive
'They may contain variables\nwhich are only resolved at the time when the template is inserted\nwithin a context. ',directive
'@link Control} is disposed\n or when another {',directive
' The label for show details buttons.\n',non-directive
' Returns the font data associated with the given symbolic font name.\n Returns the default font data if there is no special value associated\n with that name.\n\n @param symbolicName symbolic font name\n @return the font\n',non-directive
' Returns the value that will be used for Scale.setIncrement(int).\n \n @return the value.\n @see org.eclipse.swt.widgets.Scale#setIncrement(int)\n',non-directive
'<li>\na <b>content provider</b> - mediates between the model and viewer</li>\n\n',directive
' This class manages SWT resources. It manages reference-counted instances of resources\n such as Fonts, Images, and Colors, and allows them to be accessed using descriptors.\n Everything allocated through the registry should also be disposed through the registry.\n Since the resources are shared and reference counted, they should never be disposed\n directly.\n <p>\n ResourceManager handles correct allocation and disposal of resources. It differs from \n the various JFace *Registry classes, which also map symbolic IDs onto resources. In \n general, you should use a *Registry class to map IDs onto descriptors, and use a \n ResourceManager to convert the descriptors into real Images/Fonts/etc.\n </p>\n \n @since 3.1\n',directive
'}\n\n</pre></blockquote>\n\n<p> Unless otherwise noted, passing a <tt>null</tt> argument to a constructor\nor method in any class or interface in this package will cause a {',directive
'@link GridLayout#marginHeight marginHeight} and expects that the added area\n is not being shrunken or used in any way by other parties.\n \n',directive
'@exception IllegalArgumentException if the key already exists\n',directive
' Called just after the operation is run. ',directive
' The difference in lines compared to the corresponding line range in the original. Positive\n for added lines, negative for deleted lines.\n',non-directive
'A key may be specified in an algorithm-specific\nway, or in an algorithm-independent encoding format (such as ASN.1).\n',directive
?,non-directive
' Called just before the operation is run. Default behaviour is to open or\n create the dialog, based on the setting of <code>getOpenOnRun</code>,\n and increment the nesting depth.\n \n @since 3.0\n',directive
'@since 3.4\n',non-directive
'@return a newly created ColorDescriptor that describes the given Color.\n',non-directive
'</p>\n\n ',non-directive
'<li>{',non-directive
'@return the shell, or <code>null</code> if this wizard\n   container does not have a shell\n',directive
' <p>Returns a new FontDescriptor that is equivalent to the reciever, but\n has the given height.</p>\n \n <p>Does not modify the reciever.</p>\n \n @param height a height, in points\n @return a new FontDescriptor with the height, in points\n @since 3.3\n',non-directive
'<li>A call to {@code start} on a thread <i>happens-before</i> any action in the\n  started thread.\n\n  ',directive
'Note that the root node is a special internal node\n that is used to collect together all the nodes that\n have no parent; it is not given out to clients.\n\n ',directive
'@link java.util.concurrent.CountDownLatch} is a very simple yet very\ncommon utility for blocking until a given number of signals, events,\nor conditions hold.  ',directive
'\n<P>\nProvides the classes and interfaces of \nthe Java<SUP><FONT SIZE=\"-2\">TM</FONT></SUP> 2\n platform\'s core logging facilities.\nThe central goal of the logging APIs is to support maintaining and servicing\nsoftware at customer sites. \n\n<P>\nThere are four main target uses of the logs:\n</P>\n\n<OL>\n   <LI> <I>Problem diagnosis by end users and system administrators</I>. \n          This consists of simple logging of common problems that can be fixed \n          or tracked locally, such as running out of resources, security failures,\n          and simple configuration errors.\n        \n   <LI> <I>Problem diagnosis by field service engineers</I>. The logging information\n           used by field service engineers may be considerably more complex and\n           verbose than that required by system administrators.  Typically such information\n           will require extra logging within particular subsystems.\n\n   <LI> <I>Problem diagnosis by the development organization</I>.\n         When a problem occurs in the field, it may be necessary to return the captured logging\n         information to the original development team for diagnosis. This logging\n         information may be extremely detailed and fairly inscrutable. Such information might include\n         detailed tracing on the internal execution of particular subsystems.           \n\n   <LI> <I>Problem diagnosis by developers</I>. The Logging APIs may also be\n           used to help debug an application under development. This may \n           include logging information generated by the target application\n           as well as logging information generated by lower-level libraries.          \n           Note however that while this use is perfectly reasonable,\n           the logging APIs are not intended to replace the normal debugging \n           and profiling tools that may already exist in the development environment. \n</OL>\n\n</P>\nThe key elements of this package include:\n<UL>\n   <LI> <I>Logger</I>: The main entity on which applications make \n                logging calls. A Logger object is used to log messages \n                for a specific system or application\n                component.\n   <LI> <I>LogRecord</I>: Used to pass logging requests between the logging\n                   framework and individual log handlers.\n   <LI> <I>Handler</I>: Exports LogRecord objects to a variety of destinations\n                 including memory, output streams, consoles, files, and sockets.\n                 A variety of Handler subclasses exist for this purpose. Additional Handlers\n                 may be developed by third parties and delivered on top of the core platform.\n   <LI> <I>Level</I>: Defines a set of standard logging levels that can be used\n                      to control logging output. Programs can be configured to output logging\n                      for some levels while ignoring output for others.\n   <LI> <I>Filter</I>: Provides fine-grained control over what gets logged,\n                       beyond the control provided by log levels. The logging APIs support a general-purpose\n                       filter mechanism that allows application code to attach arbitrary filters to \n                       control logging output. \n                       \n   <LI> <I>Formatter</I>: Provides support for formatting LogRecord objects. This \n                          package includes two formatters, SimpleFormatter and \n                          XMLFormatter, for formatting log records in plain text\n                          or XML respectively. As with Handlers, additional Formatters \n                          may be developed by third parties.\n</UL>\n<P>\nThe Logging APIs offer both static and dynamic configuration control.\nStatic control enables field service staff to set up a particular configuration and then re-launch the \napplication with the new logging settings. Dynamic control allows for updates to the \nlogging configuration within a currently running program. The APIs also allow for logging to be \nenabled or disabled for different functional areas of the system. For example, \na field service engineer might be interested in tracing all AWT events, but might have no interest in \nsocket events or memory management.\n</P>\n\n<h2>Null Pointers</h2>\n<p>\nIn general, unless otherwise noted in the javadoc, methods and\nconstructors will throw NullPointerException if passed a null argument.\nThe one broad exception to this rule is that the logging convenience\nmethods in the Logger class (the config, entering, exiting, fine, finer, finest, \nlog, logp, logrb, severe, throwing, and warning methods)  \nwill accept null values \nfor all arguments except for the initial Level argument (if any).\n<p>\n<H2>Related Documentation</H2>\n<P>\nFor an overview of control flow, \nplease refer to the \n<a href=\"../../../../technotes/guides/logging/overview.html\">\nJava Logging Overview</a>.\n</P>\n\n<!-- Put @see and @since tags down here. -->\n\n@since 1.4\n\n\n',directive
'The dialog\'s return code is either the\n index of the button the user pressed, or {',directive
' Returns the subnode of this contribution node with the given node id.\n\n @param id the preference node id\n @return the subnode, or <code>null</code> if none\n',non-directive
' Returns the number of basic controls this field editor consists of.\n\n @return the number of controls\n',non-directive
'A\nserver registers its remote objects with the registry so that they can\nbe looked up.  ',non-directive
' Adds a new column of data to this table layout.\n \n @param column\n            the column\n \n @param data\n            the column layout data\n',non-directive
'Convenience method equivalent to\n \n <pre>\n JFaceResources.getFontRegistry().get(JFaceResources.VIEWER_FONT)\n </pre>\n \n ',directive
'@param transformer2  the second transformer\n ',non-directive
'@return a new image data or <code>null</code>\n',directive
' Computes the diff hunks from an {',non-directive
' Identifier for the Active Hyperlink Colour\n',non-directive
'</p>\n <p>\n Note that the preferred way of re-initializing a preference to its\n default value is to call <code>setToDefault</code>.\n ',directive
' The label for ignore buttons.\n',non-directive
?,non-directive
'@link #start()}\n ',directive
'The context is responsible for displaying a progress indicator and Cancel\n button to the end user while the operation is in progress; the context\n supplies a progress monitor to be used from code running inside the operation.\n ',directive
'<P>\n<h3><code>java.sql</code> and <code>javax.sql</code> Features Introduced in the JDBC 4.0 API</h3>\n<UL>\n  ',non-directive
'@return the error message, or <code>null</code> if none\n',directive
'As of 3.4 if this color is not defined then an unspecified color\n is returned. ',directive
' Installs this validator for the given context information.\n\n @param info the context information which this validator should check\n @param contentAssistSubjectControl the content assist subject control\n @param offset the document offset for which the information\n           has been computed\n',directive
' Return the Remove button.  \n \n',non-directive
' <p>\n Note that this API does not update any other settings that may\n be dependant upon it. ',directive
'Window managers are useful in\napplications which create many different windows (dialogs, wizards, etc.)\nin addition to a main window. ',directive
'</p>\n\n<p> Unless otherwise noted, passing a <tt>null</tt> argument to a method\nin any class or interface in this package will cause a\n{',directive
' Return whether the Details button should be included. This method is\n invoked once when the dialog is built. Default implementation is tight to\n default implementation of {@link #createDropDownList(Composite)} and \n displays details button if there is anything on the display list.\n \n @return whether the Details button should be included\n @since 3.1\n @see #createDropDownList(Composite)\n',directive
'</p>\n <p>\n Note that for backward compatibility, a message of type\n <code>ERROR</code> is different than an error message (set using\n <code>setErrorMessage</code>). ',directive
' ControlAnimator provides a simple implementation to display or hide a control\n at the bottom of the parent composite. ',non-directive
'Only a single implementation, {',directive
' Returns an array of colors with hues evenly distributed on the hue wheel defined by the <a\n href=\"http://en.wikipedia.org/wiki/HSV_color_space\">HSB color space</a>. ',directive
' Creates a new range with the given start offset and length.\n\n @param start the first line of the new range, must be &gt;= 0\n @param length the number of lines included in the new range, must be &gt; 0\n @return a <code>Range</code> with the given start and length\n @throws LineIndexOutOfBoundsException if the parameters violate the invariant of\n         {@link Range}\n',directive
'@link\njava.util.concurrent.Future} returns the results of a function, allows\ndetermination of whether execution has completed, and provides a means to\ncancel execution.  ',directive
' Returns the descriptor associated with the given key in this registry, \n or <code>null</code> if none.\n\n @param key the key\n @return the descriptor, or <code>null</code> if none\n @since 2.1\n',non-directive
'@param <I> the input type to the transformer\n ',non-directive
'See the superclass constructor\n for info on the other parameters.\n \n',directive
'@link #end()}\n',directive
' Generates layout data to the given control, given the number of cells\n spanned by the control. Attaches GridData to the control. This method \n allows generated layout data to be used with controls that span multiple cells. \n <p>\n The generated layout data is the same as what would be generated by \n GridLayoutFactory.generateLayout, except that the span is configurable\n </p>  \n \n @see GridLayoutFactory#generateLayout(org.eclipse.swt.widgets.Composite)\n @param theControl\n @param span The x coordinate indicates the number of\n columns spanned, and the y coordinate indicates the number of rows.\n @since 3.3\n',non-directive
'No property change events are reported by changing default\n values.\n ',directive
' Fires a property change event corresponding to a change to the\n current value of the preference with the given name.\n <p>\n This method is provided on this interface to simplify the implementation \n of decorators. There is normally no need to call this method since\n <code>setValue</code> and <code>setToDefault</code> report such\n events in due course. Implementations should funnel all preference\n changes through this method.\n </p>\n\n @param name the name of the preference, to be used as the property\n  in the event object\n @param oldValue the old value\n @param newValue the new value\n',directive
?,non-directive
'Convenience method\n equivalent to\n \n <pre>\n JFaceResources.getFontRegistry().getDescriptor(JFaceResources.DEFAULT_FONT)\n </pre>\n \n ',directive
'@param category the new category.\n',non-directive
'@param enforceAbsolute <code>true</code> if the file path\n  must be absolute, and <code>false</code> otherwise\n ',non-directive
'@param value\n            the value to be associated with the <code>key</code>\n',non-directive
'As FontDatas are stored as \n arrays this method is only provided for backwards compatibility.\n ',directive
'@return the current information control replacer or <code>null</code> if none has been installed\n',directive
'In other cases in\nwhich multiple threads are expected to access a common collection,\n\"concurrent\" versions are normally preferable. ',directive
' Returns information about possible contexts based on the specified\n location within the document that corresponds to the current cursor\n position within the content assist subject control.\n\n @param contentAssistSubjectControl the content assist subject control whose\n           document is used to compute the possible contexts\n @param documentOffset an offset within the document for which context\n           information should be computed\n @return an array of context information objects or <code>null</code>\n         if no context could be found\n',directive
' <p>\n <b>You can only add the {',directive
' Updates the window title to reflect the state of the current wizard.\n <p>\n This method is called by the container itself\n when its wizard changes and may be called\n by the wizard at other times to force a window \n title change.\n </p>\n',directive
' Create a new Closure that calls each closure in turn, passing the \n result into the next closure.\n \n',directive
'@return the number of lines contained in this range\n',non-directive
'@param textValue\n            the original string or <code>null</code>\n ',directive
' Convenience method to open a standard error dialog.\n \n @param parent\n            the parent shell of the dialog, or <code>null</code> if none\n @param title\n            the dialog\'s title, or <code>null</code> if none\n @param message\n            the message\n',directive
' An information control replacer can replace an {@link AbstractInformationControlManager}\'s\n control.\n <p>\n The {@link AbstractInformationControlManager} can be configured with such a replacer by calling\n <code>setInformationControlReplacer</code>.\n </p>\n\n @since 3.4\n',directive
'@return the value\n',non-directive
'@return a previously allocated resource for the given descriptor or null if none.\n',directive
'<LI>The <code>DataSource</code> interface as a means of making a connection.  ',non-directive
'<p>\n This hook is <em>not</em> called when the text is initialized \n (or reset to the default value) from the preference store.\n ',directive
' Creates a ColorDescriptor from an existing Color, given the Device associated\n with the original Color. This is the usual way to convert a Color into\n a ColorDescriptor. Note that the returned ColorDescriptor depends on the\n original Color, and disposing the Color will invalidate the ColorDescriptor.\n \n @deprecated use {@link ColorDescriptor#createFrom(Color)}\n \n @since 3.1\n\n @param toCreate Color to convert into a ColorDescriptor.\n @param originalDevice this must be the same Device that was passed into the\n original Color\'s constructor.\n @return a newly created ColorDescriptor that describes the given Color.\n',directive
' Defines a map that is bounded in size.\n ',non-directive
'If the list is empty return null. ',directive
'</p>\n\n ',non-directive
'Returns the default font if there is no special value associated\n with that name.\n ',directive
' Sets whether ModalContext is running in debug mode.\n \n',non-directive
' Constant for a simple dialog with the question image and Yes/No/Cancel buttons (value 6).\n \n',non-directive
' A value that can be used for stored dialog width or height that\n indicates that the default bounds should be used.\n \n @since 3.2\n',directive
' The symbolic font name for the dialog font (value\n <code>\"org.eclipse.jface.dialogfont\"</code>).\n',non-directive
'<P>\n',non-directive
'If null is passed the part uses its default layout.\n',directive
'<p>\n A valid font data representation is a string of the form\n <code><it>fontname</it>-<it>style</it>-<it>height</it></code> where\n <code><it>fontname</it></code> is the name of a font,\n <code><it>style</it></code> is a font style (one of\n <code>\"regular\"</code>, <code>\"bold\"</code>,\n <code>\"italic\"</code>, or <code>\"bold italic\"</code>)\n and <code><it>height</it></code> is an integer representing the\n font height. ',directive
'@param closures  an array of closures to call, not null\n ',directive
'@param size\n            the page size encoded as <code>new Point(width,height)</code>\n ',non-directive
'\nProvides a revision model and a protocol to display revision information in a vertical ruler column.\n',non-directive
' Constant for an error message (value 3).\n',directive
'\nService provider classes for the classes in the java.text package.\n<!--\n<h2>Package Specification</h2>\n\n##### FILL IN ANY SPECS NEEDED BY JAVA COMPATIBILITY KIT #####\n<ul>\n  <li><a href=\"\">##### REFER TO ANY FRAMEMAKER SPECIFICATION HERE #####</a>\n</ul>\n\n<h2>Related Documentation</h2>\n\nFor overviews, tutorials, examples, guides, and tool documentation, please see:\n<ul>\n  <li><a href=\"\">##### REFER TO NON-SPEC DOCUMENTATION HERE #####</a>\n</ul>\n-->\n\n@since 1.6\n',non-directive
'@link Range}\n',directive
?,non-directive
?,non-directive
'@since 3.4\n',non-directive
'@return the text control, or <code>null</code> if no\n text field is created yet\n',directive
' An abstract base class for dialogs with a status bar and OK/CANCEL buttons.\n The status message is specified in an IStatus which can be of severity ERROR,\n WARNING, INFO or OK. The OK button is enabled or disabled depending on the\n status.\n \n @since 3.1\n',directive
'The input object will be cloned using one of these\n techniques (in order):\n <ul>\n ',non-directive
'<li>\n<tt>BooleanFieldEditor</tt> - booleans</li>\n\n',non-directive
'@param comparator  the comparator to use, may be null for natural order\n ',directive
'This class must implement the\n\t  <code>SQLData</code> interface.\n  ',directive
' Return the <code>Image</code> to be used when displaying an error.\n \n',non-directive
' Returns whether the current page is valid.\n \n @return <code>false</code> if the current page is not valid, or or\n         <code>true</code> if the current page is valid or there is no\n         current page\n',non-directive
'@since 3.1\n',non-directive
' Returns the number of occurrences (cardinality) of the given\n object currently in the bag. ',non-directive
?,non-directive
'@param parent\n            The parent shell.\n ',non-directive
' Hides the proposal popup.\n',non-directive
'</UL>\n',non-directive
'All dialog pages are\n subclasses of this one.\n',directive
' Moves the receiver to <code>start</code>, keeping {',non-directive
'When startup is complete the method should \nreturn. ',directive
'In the JFace provided dialogs this will be an\n            <code>IDialogPage</code>.\n',directive
' Default value is <code>true</code>.\n',directive
'Yellows are darkened, while blues and reds\n are lightened. ',directive
'@param message\n            the message to show in this dialog, or <code>null</code> to\n            indicate that the error\'s message should be shown as the\n            primary message\n ',directive
'<LI><code>DataTruncation</code> -- thrown to indicate that data may have\n     \t  been truncated\n\t  ',directive
?,non-directive
' Adds a revision listener.\n\n ',non-directive
?,non-directive
'<li><tt>ContributionTemplateStore</tt> and <tt>ContributionContextTypeRegistry</tt>\nadd awareness for the  <tt>org.eclipse.ui.editors.templates</tt>\nextension point.</li>\n  ',directive
'@link java.util.concurrent.CopyOnWriteArrayList}, and\n{',directive
'@since 3.1\n',non-directive
?,non-directive
'Disposing\n the original colour while the color descriptor is still in use may cause \n SWT to throw a graphic disposed exception.\n \n',directive
' Creates a new GridLayout and attaches it to the given composite.\n Does not create the GridData of any of the controls in the composite.\n \n @param c composite whose layout will be set\n @see #generateLayout\n @see #create\n @see GridLayoutFactory\n',non-directive
' Create a new Closure that calls each closure in turn, passing the \n result into the next closure. The ordering is that of the iterator()\n method on the collection.\n \n @see org.apache.commons.collections.functors.ChainedClosure\n \n @param closures  a collection of closures to chain\n @return the <code>chained</code> closure\n @throws IllegalArgumentException if the closures collection is null\n @throws IllegalArgumentException if the closures collection is empty\n @throws IllegalArgumentException if any closure in the collection is null\n',directive
'@param value the value to be converted\n ',non-directive
'@param title\n            the dialog\'s title, or <code>null</code> if none\n ',directive
?,non-directive
'<li><a href=\"\">##### REFER TO NON-SPEC DOCUMENTATION HERE #####</a>\n</ul>\n',non-directive
?,non-directive
'@exception DataFormatException if the given value does not represent\n\ta long\n',non-directive
'The value is loaded from a preference store; if\n modified by the end user, the value is validated and eventually\n stored back to the preference store. ',directive
' @param display the display the color is from\n @return the background Color for widgets that display errors.\n @see SWT#COLOR_WIDGET_BACKGROUND\n @see Display#getSystemColor(int)\n',directive
'<p>The only global state maintained by classes in this package is a default\nimage for window title bars (<tt>Window.setDefaultImage</tt>).\n',directive
'@link #getColorDescriptor(String, ColorDescriptor)} instead.\n \n',directive
?,non-directive
' Returns the <code>color</code> associated with the given symbolic color \n name, or <code>null</code> if no such definition exists.\n \n',directive
' The symbolic font name for the banner font (value\n <code>\"org.eclipse.jface.bannerfont\"</code>).\n',non-directive
'If either hint is set to SWT.DEFAULT,\n the control\'s preferred size is used.\n \n',directive
?,non-directive
' Creates a new string button field editor \n',non-directive
'\nProvides support for dialogs.\n<h2>\nPackage Specification</h2>\nA dialog is a specialized window, typically consisting of a dialog area\nand a button bar, designed for narrow-focussed communication with the user.\n<p>The dialog framework consists of an abstract base class (<tt>Dialog</tt>),\nalong with more concrete dialog subclasses for displaying messages (<tt>MessageDialog</tt>),\nsoliciting text input (<tt>InputDialog</tt>), and displaying progress during\na long-running operation (<tt>ProgressMonitorDialog</tt>).\n<p>Dialog stores (<tt>IDialogStore</tt>, <tt>DialogStore</tt>) provide\na general framework for organizing a dialog\'s settings into key/value pairs.\nMulti-page dialogs are made easier through the use of dialog pages (<tt>IDialogPage</tt>,\n<tt>DialogPage</tt>).\n<p>Note: None of the classes in this package maintain global state.\n<br>&nbsp;\n<br>&nbsp;\n<br>&nbsp;\n',directive
'Both of these classes may be subclassed to define additional\ntypes of window as required.\n',directive
' Constructs a new instance of <code>PopupDialog</code>.\n \n @param parent\n            The parent shell.\n @param shellStyle\n            The shell style.\n @param takeFocusOnOpen\n            A boolean indicating whether focus should be taken by this\n            popup when it opens.\n @param persistBounds\n            A boolean indicating whether the bounds (size and location) of\n            the dialog should be persisted upon close of the dialog. The\n            bounds can only be persisted if the dialog settings for\n            persisting the bounds are also specified. If a menu action\n            will be provided that allows the user to control this feature,\n            then the last known value of the user\'s setting will be used\n            instead of this flag.\n @param showDialogMenu\n            A boolean indicating whether a menu for moving and resizing\n            the popup should be provided.\n @param showPersistActions\n            A boolean indicating whether actions allowing the user to\n            control the persisting of the dialog size and location should\n            be shown in the dialog menu. This parameter has no effect if\n            <code>showDialogMenu</code> is <code>false</code>.\n @param titleText\n            Text to be shown in an upper title area, or <code>null</code>\n            if there is no title.\n @param infoText\n            Text to be shown in a lower info area, or <code>null</code>\n            if there is no info area.\n \n @see PopupDialog#getDialogSettings()\n @deprecated As of 3.4, replaced by\n             {@link #PopupDialog(Shell, int, boolean, boolean, boolean, boolean, boolean, String, String)}\n',directive
'@param factor the mixing factor, must be in [0,&nbsp;1]\n\n ',directive
'@param message\n            The new text of the toggle button; if it is <code>null</code>,\n            then used the default toggle message.\n',directive
'@author\t  Josh Bloch\n',non-directive
' Returns this page\'s name.\n\n @return the name of this page\n',non-directive
'See \n      <a href=\"../zip/package-summary.html#package_description\">java.util.zip\n      package description.</a> <p>\n      In JAR files, all file names must be encoded in the UTF-8 encoding. \n',directive
' Gets a transformer that returns a clone of the input\n object. The input object will be cloned using one of these\n techniques (in order):\n <ul>\n <li>public clone method\n <li>public copy constructor\n <li>serialization clone\n <ul>\n \n @see org.apache.commons.collections.functors.CloneTransformer\n \n @return the transformer\n',non-directive
'@param button\n',non-directive
?,non-directive
'@link AbstractControlContentAssistSubjectAdapter},\n i.e. ',directive
'Convert the value of the given key in this dialog\n settings to a long and return it.\n \n',non-directive
' Get the comparator used for the values in the value-to-key map aspect.\n @return Comparator<? super V>\n',directive
' Sets the layout data on the given control. ',non-directive
'@see org.eclipse.jface.window.Window#open()\n',non-directive
'<h2>\nPackage Specification</h2>\n<p> This package provides classes that can be used to generate layouts.\n',non-directive
' Creates a new wizard dialog for the given wizard.\n \n',non-directive
?,non-directive
' Returns this dialog page\'s image.\n\n ',non-directive
'@link ILineRange} does not adhere to the\n         contract of {',directive
'@param manager The manager to set.\n \n',non-directive
'@see RowLayoutFactory\n',non-directive
'Window managers are not required for simple\napplications.\n',directive
' Callback to signal this content assistant that the presentation of the possible completions has been stopped.\n ',directive
'<li>CircularFifoBuffer - implements a buffer with a fixed size that discards oldest when full\n',non-directive
'LocalResourceManager is typically used to safeguard against leaks. ',directive
'@return this\n',non-directive
?,non-directive
?,non-directive
'Returns the default-default value (<code>0.0f</code>) if there\n is no default preference with the given name, or if the default \n value cannot be treated as a float.\n\n ',directive
'If none are valid, return the first irregardless.  ',directive
' Lightweight descriptor for a font. ',non-directive
'@param titleMessage\n            String for the titke\n ',non-directive
'No property change events are reported by changing default\n values.\n ',directive
' Returns the current error message for this dialog page.\n May be <code>null</code> to indicate no error message.\n <p>\n An error message should describe some error state,\n as opposed to a message which may simply provide instruction\n or information to the user.\n </p>\n \n @return the error message, or <code>null</code> if none\n',directive
'@param value\n            the value to be associated with the <code>key</code>\n',non-directive
'<p>\n Use the methods <code>load()</code> and <code>save()</code> to load\n and store this preference store.\n ',directive
'<p>\n The class <code>Wizard</code> provides an abstract implementation\n of this interface. ',directive
'@return the position category\n',non-directive
'If\n the x or y values are set to SWT.DEFAULT, the control\'s computeSize() method will\n be used to obtain that dimension of the preferred size.\n ',directive
'@param image the image for this preference page,\n  or <code>null</code> if none\n',directive
?,non-directive
'@return <code>true</code> if the iterator has more elements\n',non-directive
?,non-directive
?,non-directive
'@since 3.3\n',non-directive
'@deprecated As of 3.2, replaced by Platform UI\'s field assist support\n',directive
'<li><a href=\n    \"{@docRoot}/../technotes/guides/security/SecurityToolsSummary.html\"><b>\n    Security Tools Summary\n    </b></a></li>\n\n  ',non-directive
'@return the subnode, or <code>null</code> if none\n',directive
' Clears the normal message from the message line.\n',non-directive
?,non-directive
?,non-directive
'<LI> <I>LogRecord</I>: Used to pass logging requests between the logging\n                   framework and individual log handlers.\n   ',directive
'Always \ncheck your driver\'s documentation to see whether it supports a feature before\nyou try to use it.\n',directive
' Creates a factory that creates copies of the given layout.\n \n @param layout\n            layout to copy\n @return a new RowLayoutFactory instance that creates copies of the given\n         layout\n',non-directive
' Replaces this manager\'s information control as defined by\n the information control replacer.\n <strong>Must only be called when the information control is instanceof {@link IInformationControlExtension3}!</strong>\n\n @param takeFocus <code>true</code> iff the replacing information control should take focus\n',directive
' Returns the dialog settings for this wizard.\n ',non-directive
' @see Dialog#createDialogArea(Composite)\n',non-directive
' Creates a new preference manager.\n',non-directive
'@param parentShell\n            the parent shell, or <code>null</code> to create a top-level\n            shell\n',directive
' Returns the default value for the string-valued preference\n with the given name.\n ',non-directive
' Creates this wizard\'s controls in the given parent control.\n <p>\n The wizard container calls this method to create the controls\n for the wizard\'s pages before the wizard is opened. This allows\n the wizard to size correctly; otherwise a resize may occur when\n moving to a new page.\n </p>\n\n @param pageContainer the parent control\n',directive
'@deprecated This constant is no longer in use.\n ',directive
'In most cases this will be a copy\n of the layoutData used in setTitleLayoutData.\n \n',directive
'Users of the colors in this class should add a IPropertyChangeListener\n to detect when any of these colors change.\n ',directive
' Returns the JFace\'s dialog font. Convenience method equivalent to\n \n <pre>\n JFaceResources.getFontRegistry().get(JFaceResources.DIALOG_FONT)\n </pre>\n \n @return the font\n',non-directive
' An accessor for the labels to use on the buttons.\n \n @return The button labels to used; never <code>null</code>.\n',directive
'A newly-created object is\nstrongly reachable by the thread that created it.\n\n',directive
'@see #getPreferenceStore\n',non-directive
'<li>Unmodifiable - ensures the map cannot be altered\n<!--\n',non-directive
'@param value the new current value of the preference\n \n ',non-directive
'<LI><code>ResultSet</code> holdability -- ability to specify whether cursors\n      should be held open or closed at the end of a transaction\n  ',directive
' Constructs a new instance of <code>PopupDialog</code>.\n \n @param parent\n            The parent shell.\n @param shellStyle\n            The shell style.\n @param takeFocusOnOpen\n            A boolean indicating whether focus should be taken by this\n            popup when it opens.\n @param persistSize\n            A boolean indicating whether the size should be persisted upon\n            close of the dialog. The size can only be persisted if the\n            dialog settings for persisting the bounds are also specified.\n            If a menu action will be provided that allows the user to\n            control this feature and the user hasn\'t changed that setting,\n            then this flag is used as initial default for the menu.\n @param persistLocation\n            A boolean indicating whether the location should be persisted\n            upon close of the dialog. The location can only be persisted\n            if the dialog settings for persisting the bounds are also\n            specified. If a menu action will be provided that allows the\n            user to control this feature and the user hasn\'t changed that\n            setting, then this flag is used as initial default for the\n            menu. default for the menu until the user changed it.\n @param showDialogMenu\n            A boolean indicating whether a menu for moving and resizing\n            the popup should be provided.\n @param showPersistActions\n            A boolean indicating whether actions allowing the user to\n            control the persisting of the dialog bounds and location\n            should be shown in the dialog menu. This parameter has no\n            effect if <code>showDialogMenu</code> is <code>false</code>.\n @param titleText\n            Text to be shown in an upper title area, or <code>null</code>\n            if there is no title.\n @param infoText\n            Text to be shown in a lower info area, or <code>null</code>\n            if there is no info area.\n \n @see PopupDialog#getDialogSettings()\n \n @since 3.4\n',directive
'The status message is specified in an IStatus which can be of severity ERROR,\n WARNING, INFO or OK. ',directive
'<li><tt><big><strong>org.eclipse.ui.workbench.texteditor.templates</strong></big></tt></li>\n  ',directive
' Returns the font descriptor for the font with the given symbolic\n font name. Returns the default font if there is no special value\n associated with that name\n \n @param symbolicName symbolic font name\n @return the font descriptor (never null)\n \n @since 3.3\n',directive
'@param node the starting node\n ',non-directive
'Equivalent to <code>String.valueOf(value.doubleValue())</code>.\n\n ',directive
'<p>\nClasses in this package, along with <code>java.lang.Class</code>\naccommodate applications such as debuggers, interpreters, object\ninspectors, class browsers, and services such as Object Serialization\nand JavaBeans that need access to either the public members of a\ntarget object (based on its runtime class) or the members declared by\na given class.\n\n',directive
'@return the value coverted to double, or throws\n         <code>NumberFormatException</code> if none\n \n ',directive
' The margin height; <code>5</code> pixels by default.\n',non-directive
'Note: GridLayout treats a minimum size of 0\n as an undocumented special value, so the smallest possible minimum size \n is a size of 1. ',directive
'And unsynchronized\ncollections are preferable when either collections are unshared, or\nare accessible only when holding other locks.\n\n',directive
' Creates a DeviceResourceException indicating an error attempting to\n create a resource \n \n @param missingResource\n',directive
'<li>NOP - does nothing\n ',non-directive
'@link java.util.concurrent.Semaphore} is a classic concurrency tool.\n',directive
'<li>The same factory can be used many times to create several GridData instances</li>\n ',non-directive
'The default implementation of this framework method simply calls\n <code>performOk</code> to simulate the pressing of the page\'s OK button.\n ',directive
'@linkplain #length() length}.\n\n ',directive
'@link\njava.util.concurrent.ThreadPoolExecutor} and {',directive
'@return the value coverted to long, or throws\n         <code>NumberFormatException</code> if none\n \n ',directive
'The content assistant is not automatically activated,\n overlays the completion proposals with context information list if necessary, and\n shows the context information above the location at which it was activated. ',directive
'@see #getDialogBoundsStrategy()\n',non-directive
' Returns the string typed into this input dialog.\n \n',non-directive
'If it cannot be read then the default FontData\n will be returned.\n \n',directive
?,non-directive
' Returns the text regions covered by the given selection.\n \n',non-directive
?,non-directive
' Sets the information control replacer for this manager and disposes the\n old one if set.\n\n ',non-directive
' Layout constant (value <code>1</code>) indicating that\n the field editors\' basic controls are put into a grid layout.\n',non-directive
'By\n default, ModalContext will process events while running operations. ',directive
'<p>\n This is the last message that should ever be sent to this node.\n ',directive
?,non-directive
'There is one static instance\n of this class used by WizardDialog and ModalContext.\n ',directive
'@return the first line after this range\n',non-directive
'<p>\n If the content has not yet been created, calling this method\n does not trigger the creation of the wizard. ',directive
' Adjusts the enable state of the OK \n button to reflect the state of the currently active \n page in this container.\n ',non-directive
' Creates a content assist subject control adapter for the given text widget.\n\n ',non-directive
' Sets the title image to be shown in the title area of this dialog.\n \n @param newTitleImage\n            the title image to be shown\n',non-directive
'@param show <code>true</code> to show the author, <code>false</code> to hide it\n',non-directive
'<li>Invoker - invokes a method on the input object\n ',directive
'The primitives will be wrapped in the appropriate wrapper class.\n\n ',non-directive
'@return the wizard container, or <code>null</code> if this\n   wizard page has yet to be added to a wizard, or the\n   wizard has yet to be added to a container\n',directive
'Additionally, there are utility classes\nfor computing the CRC-32 and Adler-32 checksums of arbitrary\ninput streams.\n\n\n',directive
' Moves the progress indicator by the given amount of work units\n @param work the amount of work to increment by.\n',non-directive
?,non-directive
?,non-directive
'Each\n instance describes a particular resource (such as a Color, Font, or Image)\n and can create and destroy that resource on demand. ',non-directive
'This method is\n invoked once when the dialog is built. ',directive
'<p>\n Note that the current value of the preference is affected if\n the preference\'s current value was its old default value, in which\n case it changes to the new default value. ',directive
' Returns the font associated with the given symbolic font name.\n Returns the default font if there is no special value associated\n with that name.\n <p>\n This method should only be called from the UI thread. If you are not on the UI\n thread then wrap the call with a\n <code>PlatformUI.getWorkbench().getDisplay().synchExec()</code> in order to\n guarantee the correct result. Failure to do this may result in an {@link\n SWTException} being thrown.\n </p>\n @param symbolicName symbolic font name\n @return the font\n',directive
'@param labelProvider a {',directive
'Such parents may use this notification to save state etc. ',directive
' Sets whether ModalContext may process events (by calling\n <code>Display.readAndDispatch()</code>) while running operations. By\n default, ModalContext will process events while running operations. Use\n this method to disallow event processing temporarily.\n \n @param allowReadAndDispatch\n            <code>true</code> (the default) if events may be processed\n            while running an operation, <code>false</code> if\n            Display.readAndDispatch() should not be called from\n            ModalContext.\n @since 3.2\n',directive
' Gets an immutable version of an {',non-directive
'In the event\n object, the property name is the name of the preference, and the\n old and new values are wrapped as objects.\n ',directive
'@param key\n            the key\n ',non-directive
'@return a newly allocated SWT Color object (never null)\n ',directive
'@deprecated org.eclipse.swt.widgets.Display.getSystemImage(SWT.ICON_QUESTION)\n',directive
' Sets the margins for layouts created with this factory. ',non-directive
'@since JDK1.0\n',non-directive
'@since 3.3\n',non-directive
'Convenience method\n equivalent to\n \n <pre>\n JFaceResources.getFontRegistry().getDescriptor(JFaceResources.TEXT_FONT)\n </pre>\n \n ',directive
'@throws IllegalArgumentException if the array is not an array\n ',non-directive
?,non-directive
'@link java.lang.ClassLoader#getSystemClassLoader ClassLoader.getSystemClassLoader}) must\n      support a mechanism to add an agent JAR file to the system class path. ',directive
' IteratorUtils is not normally instantiated.\n',non-directive
'@param wrap\n            the wrap status\n ',non-directive
'@return an array of <code>steps</code> colors evenly distributed on the color wheel\n',directive
'@param parent The parent {',non-directive
'<p>Note: None of the classes in this package maintain global state.\n<br>&nbsp;\n',directive
'@param processor the content assist processor to register, or <code>null</code> to remove an existing one\n ',directive
' Sets the context information popup\'s orientation.\n The following values may be used:\n <ul>\n   <li>CONTEXT_ABOVE<p>\n     context information popup should always appear above the line containing\n     the current cursor location\n   </li>\n   <li>CONTEXT_BELOW<p>\n     context information popup should always appear below the line containing\n     the current cursor location\n   </li>\n </ul>\n\n @param orientation the popup\'s orientation\n',directive
'@return the first element, or null if empty.\n',directive
'@return The default button index.\n',non-directive
'try {\n       // Assuming the RuntimeMXBean has been registered in mbs\n       ObjectName oname = new ObjectName(ManagementFactory.RUNTIME_MXBEAN_NAME);\n    \n       // Get standard attribute \"VmVendor\"\n       String vendor = (String) mbs.getAttribute(oname, \"VmVendor\");\n   } catch (....) {\n       // Catch the exceptions thrown by ObjectName constructor\n       // and MBeanServer.getAttribute method\n       ...\n   ',directive
'In addition to standard arithmetic operations, BigInteger\nprovides modular arithmetic, GCD calculation, primality testing, prime\ngeneration, bit manipulation, and a few other miscellaneous operations.\n\n',directive
'This allows\n this node to suggest an extent in advance of actually creating \n the wizard.\n ',directive
'@param element must be an instance of <code>IPreferenceNode</code>.\n ',directive
' Creates a Closure that will invoke a specific method on the closure\'s\n input object by reflection.\n\n ',directive
'<p>\n Note that the current value of the preference is affected if\n the preference\'s current value was its old default value, in which\n case it changes to the new default value. ',directive
' Creates a file field editor.\n \n @param name the name of the preference this field editor works on\n @param labelText the label text of the field editor\n @param enforceAbsolute <code>true</code> if the file path\n  must be absolute, and <code>false</code> otherwise\n @param validationStrategy either {@link StringButtonFieldEditor#VALIDATE_ON_KEY_STROKE}\n  to perform on the fly checking, or {@link StringButtonFieldEditor#VALIDATE_ON_FOCUS_LOST}\n  (the default) to perform validation only after the text has been typed in\n @param parent the parent of the field editor\'s control.\n @since 3.4\n @see StringButtonFieldEditor#VALIDATE_ON_KEY_STROKE\n @see StringButtonFieldEditor#VALIDATE_ON_FOCUS_LOST\n',directive
'<li>font-weight</li>\n ',non-directive
'@param description the description text for this dialog\n  page, or <code>null</code> if none\n',directive
'This interface\n is used primarily by the page\'s container \n',directive
'@throws NullPointerException if either iterator is null\n',non-directive
'@return the transformer\n ',non-directive
'@return the Device associated with this ResourceManager\n',non-directive
'@param parent\n            The parent of the button.\n',non-directive
'@link\njava.util.concurrent.BlockingDeque} interface extends\n<tt>BlockingQueue</tt> to support both FIFO and LIFO (stack-based)\noperations. ',directive
' Image registry key for info message image (value\n <code>\"dialog_messasge_info_image\"</code>).\n \n',non-directive
' Returns the selected range.\n\n @return start and length of the selection, x is the offset and y the\n         length based on the subject\'s model (e.g. document)\n',non-directive
'@deprecated As of 3.2, replaced by Platform UI\'s field assist support\n',directive
'@link GridLayout#marginWidth\n marginWidth} and {',directive
' Create a new instance of the receiver.\n \n @param display the <code>Display</code> to hook into\n @param cleanOnDisplayDisposal\n            whether all fonts allocated by this <code>ColorRegistry</code>\n            should be disposed when the display is disposed\n @since 3.1\n',directive
' Creates a new object and saves in it the current enable/disable state of\n the given control and its descendents except for the given list of\n exception cases; the controls that are saved are also disabled.\n \n',directive
'@author Stephen Colebourne\n',non-directive
'<p>\nYou may also consider using \n{',directive
'Note the difference to {',directive
' Interface for containers that can host a wizard. It displays\n wizard pages, at most one of which is considered\n the current page. <code>getCurrentPage</code> returns the\n current page; <code>showPage</code> programmatically changes the\n the current page. Note that the pages need not all belong\n to the same wizard.\n <p>\n The class <code>WizardDialog</code> provides a fully functional \n implementation of this interface which will meet the needs of\n most clients. However, clients are also free to implement this \n interface if <code>WizardDialog</code> does not suit their needs.\n </p>\n <p>\n Implementors are responsible for disposing of their wizards.\n </p>\n \n @see org.eclipse.jface.wizard.IWizardContainer2\n',directive
' A field editor for a combo box that allows the drop-down selection of one of\n a list of items.\n \n',non-directive
'<p>\n Code in a long-running operation should call this method regularly so\n that a request to cancel will be honored.\n ',directive
'<li>Synchronized - synchronizes method access for multi-threaded environments</li>\n',directive
'@return a new transforming iterator\n ',non-directive
?,non-directive
'@return the set of keys this manager knows about.  ',non-directive
'<li><a href=\"http://java.sun.com/docs/books/tutorial/jdbc\">Chapters on the JDBC \n     API</a>--from the online version of <i>The Java Tutorial Continued</i>\n<P>\n  ',non-directive
' The label control for the subtask.\n',non-directive
'<p>\n A property change event is reported if the current value of the \n preference actually changes from its previous value. ',directive
'@see org.eclipse.jface.window.Window#getLayout()\n ',non-directive
'Use the methods <code>load(String)</code> and <code>store(String)</code>\n to load and store this dialog settings.\n\n ',non-directive
?,non-directive
'@since 3.1\n',non-directive
'If the <code>agentmain</code> method throws an uncaught exception it will be ignored.\n\n\n\n',non-directive
?,non-directive
'@param parent\n            the parent shell of the dialog, or <code>null</code> if none\n ',directive
'<li>extendedMargins(0,0,0,0)</li>\n ',non-directive
'@link\njava.util.concurrent.ExecutorService} provides a more complete\nasynchronous task execution framework.  ',directive
'The\nregistry returns to the calling object a reference to the remote\nobject, using which a remote method can be invoked.\n\n',directive
' Creates a new wizard page with the given name, and\n with no title or image.\n\n @param pageName the name of the page\n',non-directive
' Gets an int from a Map in a null-safe manner.\n ',non-directive
'@since JDK1.1\n',non-directive
' Sets the margins for layouts created with this factory. ',non-directive
' Returns a text edit describing the text modification that would be executed if the delete key\n was pressed on the given selection.\n \n @param selection the selection to delete\n @return a text edit describing the operation needed to delete <code>selection</code>\n @throws BadLocationException if computing the edit failed\n',non-directive
'A closure \n is called if its matching predicate returns true. ',directive
'@param key  the key to look up\n ',non-directive
'This method \n allows generated layout data to be used with controls that span multiple cells. \n ',directive
' Notifies that help has been requested for this dialog page.\n',non-directive
' Update the dialog\'s status line to reflect the given status. It is safe\n to call this method before the dialog has been opened.\n \n @param status\n            the status to set\n',directive
'@since 3.0\n',non-directive
' <p>Returns a FontDescriptor that is equivalent to the reciever, but whose height\n is larger by the given number of points.</p>\n \n <p>Does not modify the reciever.</p>\n \n ',directive
'<p>Image descriptors are objects that knows how to create an image on demand.\n',non-directive
' Sets the width and height hints. The width and height hints override the\n control\'s preferred size. If either hint is set to SWT.DEFAULT, the\n control\'s preferred size is used.\n \n @param xHint\n            horizontal hint (pixels), or SWT.DEFAULT to use the control\'s\n            preferred size\n @param yHint\n            vertical hint (pixels), or SWT.DEFAULT to use the control\'s\n            preferred size\n @return this\n',directive
' Returns the currently selected page in the dialog.\n \n @return the selected page in the dialog or <code>null</code> if none is\n         selected. The type may be domain specific. In \n         the JFace provided dialogs this will be an instance of \n         <code>IDialogPage</code>. \n',directive
'If either hint is set to SWT.DEFAULT, the\n control\'s preferred size is used.\n \n',directive
'If this name does not exist within the registry the supplied\n default value will be used.\n \n',directive
'@link java.util.concurrent.CyclicBarrier} is a\nresettable multiway synchronization point useful in some styles of\nparallel programming. ',directive
'<li>Predicated - ensures that only elements that are valid according to a predicate can be added\n',directive
'<dd>A variation of the native formatter that provides a more compact representation.</dd>\n<dt>EmacsKeyFormatter</dt>\n',non-directive
'<li>All actions in a thread <i>happen-before</i> any other thread\n  successfully returns from a {@code join} on that thread.\n\n',directive
' Sets the spacing for layouts created with this factory. The spacing\n is the distance between cells within the layout. \n \n @param spacing space between controls in the layout (pixels)\n @return this\n @see #margins(Point)\n @see #margins(int, int)\n',directive
?,non-directive
' Sets the error message that will be displayed when and if \n an error occurs.\n\n @param message the error message\n',directive
'</p>\n\n ',non-directive
'<LI> <I>Level</I>: Defines a set of standard logging levels that can be used\n                      to control logging output. ',non-directive
' Returns the current value of the double-valued preference with the\n given name.\n Returns the default-default value (<code>0.0</code>) if there\n is no preference with the given name, or if the current value \n cannot be treated as a double.\n\n @param name the name of the preference\n @return the double-valued preference\n',non-directive
'@param value the new default value for the preference\n',non-directive
' The <code>WizardSelectionPage</code> implementation of \n this <code>IWizardPage</code> method returns the first page \n of the currently selected wizard if there is one.\n',non-directive
?,non-directive
'@param name the name of the preference\n ',non-directive
'@deprecated This font is not in use\n',directive
'It collaborates with a quick assist processor (<tt>IQuickAssistProcessor</tt>)\nin order to generate quick fix and quick assist completion proposals (<tt>ICompletionProposal</tt>)\navailable at the current quick assist invocation context (<tt>IQuickAssistInvocationContext</tt>).\n',directive
' Moves the start offset to <code>start</code>, keeping {',non-directive
'Has no effect if the given runnable was not previously registered with\n disposeExec.\n \n',directive
'@see #open(int, Shell, String, String, int)\n',non-directive
' Returns whether or not context help is available for this dialog. This\n can affect whether or not the dialog will display additional help\n mechanisms such as a help control in the button bar.\n \n @return whether or not context help is available for this dialog\n',directive
'<p>\n This method is called by the container itself\n when its page changes and may be called\n by the page at other times to force a title  \n update.\n ',directive
'<p>\n The given {',directive
'@return this\n \n ',non-directive
'@throws NullPointerException if iterators array is null or contains a null\n',non-directive
' Sets the end of this range, keeping {@link #start()} constant.\n\n @param end the new end, must be &gt; {@link #start()}\n @throws LineIndexOutOfBoundsException if <code>end</code> &lt;= {@link #start()}\n',directive
' Save a dialog settings to a stream\n \n ',non-directive
'@since 3.1\n',non-directive
'\n\n\nProvides reference-object classes, which support a limited degree of\ninteraction with the garbage collector.  A program may use a reference object\nto maintain a reference to some other object in such a way that the latter\nobject may still be reclaimed by the collector.  A program may also arrange to\nbe notified some time after the collector has determined that the reachability\nof a given object has changed.\n\n\n<h2>Package Specification</h2>\n\nA <em>reference object</em> encapsulates a reference to some other object so\nthat the reference itself may be examined and manipulated like any other\nobject.  Three types of reference objects are provided, each weaker than the\nlast: <em>soft</em>, <em>weak</em>, and <em>phantom</em>.  Each type\ncorresponds to a different level of reachability, as defined below.  Soft\nreferences are for implementing memory-sensitive caches, weak references are\nfor implementing canonicalizing mappings that do not prevent their keys (or\nvalues) from being reclaimed, and phantom references are for scheduling\npre-mortem cleanup actions in a more flexible way than is possible with the\nJava finalization mechanism.\n\n<p> Each reference-object type is implemented by a subclass of the abstract\nbase <code>{@link java.lang.ref.Reference}</code> class.  An instance of one of\nthese subclasses encapsulates a single reference to a particular object, called\nthe <em>referent</em>.  Every reference object provides methods for getting and\nclearing the reference.  Aside from the clearing operation reference objects\nare otherwise immutable, so no <code>set</code> operation is provided.  A\nprogram may further subclass these subclasses, adding whatever fields and\nmethods are required for its purposes, or it may use these subclasses without\nchange.\n\n\n<h3>Notification</h3>\n\nA program may request to be notified of changes in an object\'s reachability by\n<em>registering</em> an appropriate reference object with a <em>reference\nqueue</em> at the time the reference object is created.  Some time after the\ngarbage collector determines that the reachability of the referent has changed\nto the value corresponding to the type of the reference, it will add the\nreference to the associated queue.  At this point, the reference is considered\nto be <em>enqueued</em>.  The program may remove references from a queue either\nby polling or by blocking until a reference becomes available.  Reference\nqueues are implemented by the <code>{@link java.lang.ref.ReferenceQueue}</code>\nclass.\n\n<p> The relationship between a registered reference object and its queue is\none-sided.  That is, a queue does not keep track of the references that are\nregistered with it.  If a registered reference becomes unreachable itself, then\nit will never be enqueued.  It is the responsibility of the program using\nreference objects to ensure that the objects remain reachable for as long as\nthe program is interested in their referents.\n\n<p> While some programs will choose to dedicate a thread to removing reference\nobjects from one or more queues and processing them, this is by no means\nnecessary.  A tactic that often works well is to examine a reference queue in\nthe course of performing some other fairly-frequent action.  For example, a\nhashtable that uses weak references to implement weak keys could poll its\nreference queue each time the table is accessed.  This is how the <code>{@link\njava.util.WeakHashMap}</code> class works.  Because the <code>{@link\njava.lang.ref.ReferenceQueue#poll ReferenceQueue.poll}</code> method simply\nchecks an internal data structure, this check will add little overhead to the\nhashtable access methods.\n\n\n<h3>Automatically-cleared references</h3>\n\nSoft and weak references are automatically cleared by the collector before\nbeing added to the queues with which they are registered, if any.  Therefore\nsoft and weak references need not be registered with a queue in order to be\nuseful, while phantom references do.  An object that is reachable via phantom\nreferences will remain so until all such references are cleared or themselves\nbecome unreachable.\n\n\n<a name=\"reachability\"></a>\n<h3>Reachability</h3>\n\nGoing from strongest to weakest, the different levels of reachability reflect\nthe life cycle of an object.  They are operationally defined as follows:\n\n<ul>\n\n<li> An object is <em>strongly reachable</em> if it can be reached by some\nthread without traversing any reference objects.  A newly-created object is\nstrongly reachable by the thread that created it.\n\n<li> An object is <em>softly reachable</em> if it is not strongly reachable but\ncan be reached by traversing a soft reference.\n\n<li> An object is <em>weakly reachable</em> if it is neither strongly nor\nsoftly reachable but can be reached by traversing a weak reference.  When the\nweak references to a weakly-reachable object are cleared, the object becomes\neligible for finalization.\n\n<li> An object is <em>phantom reachable</em> if it is neither strongly, softly,\nnor weakly reachable, it has been finalized, and some phantom reference refers\nto it.\n\n<li> Finally, an object is <em>unreachable</em>, and therefore eligible for\nreclamation, when it is not reachable in any of the above ways.\n\n</ul>\n\n\n@version  1.11, 04/02/10\n@author\t  Mark Reinhold\n@since\t  1.2\n\n<!--\n<h2>Related Documentation</h2>\n\nFor overviews, tutorials, examples, guides, and tool documentation, please see:\n<ul>\n  <li><a href=\"\">##### REFER TO NON-SPEC DOCUMENTATION HERE #####</a>\n</ul>\n-->\n',directive
' Disposes all currently allocated resources.\n',non-directive
' Resizes the range by <code>delta</code> lines by moving the start offset, {@link #end()} remains unchanged.\n\n @param delta the number of lines to resize the range\n @throws LineIndexOutOfBoundsException if <code>-delta</code> &gt;= {@link #length()}\n',non-directive
'<p>\n ResourceManager handles correct allocation and disposal of resources. ',non-directive
' Returns whether the given thread is running a modal context.\n \n @param thread\n            The thread to be checked\n @return <code>true</code> if the given thread is running a modal\n         context, <code>false</code> if not\n',directive
'@see #isPageComplete()\n',non-directive
' Processes {@link ITextSelection}s.\n \n @since 3.5\n',non-directive
'@return the removed subnode, or <code>null</code> if none\n',directive
'Equivalent to <code>String.valueOf(value.longValue())</code>.\n\n ',directive
'<li>equalWidth(false)</li>\n </ul>\n ',non-directive
'<p>An application can monitor the instrumentation of the \nJava virtual machine and manage certain characteristics in\nthe following ways:\n<ul>\n',non-directive
' Button id for a \"Cancel\" button (value 1).\n',non-directive
?,non-directive
'<h3>Starting Agents After VM Startup</h3>\n\n<p>\nAn implementation may provide a mechanism to start agents sometime after the\nthe VM has started. ',directive
' Constructs an <code>LineIndexOutOfBoundsException</code> with the specified detail message.\n\n @param s the detail message.\n',non-directive
'<p>\n Afterward, the methods <code>load()</code> and <code>save()</code>\n can be used to load and store this preference store.\n ',directive
'Font will also be applied to\n            its children. ',non-directive
'@deprecated use #getPage()\n',directive
'\n\nProvides services that allow Java programming language agents to instrument programs running on the JVM. \n',non-directive
'<li>Typed - ensures that only elements that are of a specific type can be added\n',directive
'\n\nProvides classes for reading and writing the JAR (Java ARchive) file\nformat, which is based on the standard ZIP file format with an\noptional manifest file.  The manifest stores meta-information about the\nJAR file contents and is also used for signing JAR files.\n\n\n<h2>Package Specification</h2>\n\nThe <code>java.util.jar</code> package is based on the following specifications:\n<ul>\n  <li><b>Info-ZIP file format</b> - The JAR format is based on the Info-ZIP \n      file format. See \n      <a href=\"../zip/package-summary.html#package_description\">java.util.zip\n      package description.</a> <p>\n      In JAR files, all file names must be encoded in the UTF-8 encoding. \n<p>\n  <li><a href=\"../../../../technotes/guides/jar/jar.html\">\n      Manifest and Signature Specification</a> - The manifest format specification.\n</ul>\n\n<!--\n<h2>Related Documentation</h2>\n\nFor overviews, tutorials, examples, guides, and tool documentation, please see:\n<ul>\n  <li><a href=\"\">##### REFER TO NON-SPEC DOCUMENTATION HERE #####</a>\n</ul>\n-->\n\n@since 1.2\n',directive
'<li><code>MessageDialog.ERROR</code> for a dialog with an\n            error image</li>\n            ',directive
' {@inheritDoc}\n \n @since 3.5\n',directive
' Tests if dialogs that have help control should show it\n all the time or only when explicitly requested for\n each dialog instance.\n \n',non-directive
' Creates a ColorDescriptor from an existing color. \n \n The returned ColorDescriptor depends on the original Color. Disposing\n the original colour while the color descriptor is still in use may cause \n SWT to throw a graphic disposed exception.\n \n @since 3.1\n\n @param toCreate Color to generate a ColorDescriptor from\n @return a newly created ColorDescriptor\n',directive
'By default,\n <code>open</code> blocks for dialogs.\n \n',directive
' Adds the given preference node as a subnode of this\n preference node.\n\n ',non-directive
'@link\njava.util.concurrent.ExecutorCompletionService}, that assists in\ncoordinating the processing of groups of asynchronous tasks.\n\n',directive
'-->\n\n',non-directive
'@deprecated As of 3.2, replaced by Platform UI\'s field assist support\n',directive
'\n<p>\nThis package contains the interfaces and utilities shared across all the subpackages of this component.\n</p>\n<p>\nThe following collection implementations are provided in the package:\n<ul>\n<li>ArrayStack - a non synchronized Stack that follows the same API as java util Stack\n<li>ExtendedProperties - extends the Properties class to add extra functionality\n</ul>\n<p>\n\n',directive
'@param errorMessage\n            the error message, or <code>null</code> to clear\n ',directive
'This allows\n the wizard to size correctly; otherwise a resize may occur when\n moving to a new page.\n ',directive
'<li><a href=\"http://www.isi.edu/in-notes/rfc1951.txt\">\n      DEFLATE Compressed Data Format Specification version 1.3</a>\n      &nbsp;\n      <a href=\"http://www.isi.edu/in-notes/rfc1951.ps\">\n      (PostScript)</a>\n      (RFC 1951)\n<p>\n  ',directive
'@param map  the map whose value to look up\n  ',non-directive
'<li>Actions prior to \"releasing\" synchronizer methods such as\n  {@code Lock.unlock}, {@code Semaphore.release}, and\n  {@code CountDownLatch.countDown} <i>happen-before</i> actions\n  subsequent to a successful \"acquiring\" method such as\n  {@code Lock.lock}, {@code Semaphore.acquire},\n  {@code Condition.await}, and {@code CountDownLatch.await} on the\n  same synchronizer object in another thread.\n\n  ',directive
' Defines a collection that counts the number of times an object appears in\n the collection.\n ',non-directive
'</p>\n \n <p>\n This method should only be used for resources that should remain\n allocated for the lifetime of the resource manager. ',directive
' Checks if the given parent is the current parent of the\n supplied control; throws an (unchecked) exception if they\n are not correctly related.\n\n ',directive
'<li>Get the MXBean instance through the static factory method\n        and access the MXBean interface locally of the running\n        virtual machine.</li>\n    ',non-directive
'At the end, the list is returned.\n\n ',non-directive
'<p>\n The valid message types are one of <code>NONE</code>,\n <code>INFORMATION</code>,<code>WARNING</code>, or\n <code>ERROR</code>.\n ',directive
'@link java.lang.management.GarbageCollectorMXBean}</tt> </td>\n<td> Garbage collector in the Java virtual machine.</td>\n</tr>\n<tr>\n<td> <tt>{',non-directive
'This object will be compared so hashCode(...) and equals(...) must \n return meaningful values.\n \n',directive
' Provides input for a {@link BrowserInformationControl}.\n\n @since 3.4\n',non-directive
' Returns the current value of the string-valued preference with the\n given name.\n Returns the default-default value (the empty string <code>\"\"</code>)\n if there is no preference with the given name, or if the current value \n cannot be treated as a string.\n\n @param name the name of the preference\n @return the string-valued preference\n',non-directive
?,non-directive
'@throws NullPointerException if iterator is null\n',non-directive
' Returns the button created when <code>createButton</code> is called\n with an ID of <code>IDialogConstants.CANCEL_ID</code>. ',non-directive
' Returns a list of string values corresponding to the given list of keys.\n ',non-directive
'@throws LineIndexOutOfBoundsException if <code>-delta</code> &gt; {',directive
'@since JDK1.1\n',non-directive
'When the RMI server returns an object to\nits client (caller of the remote method), it tracks the remote\nobject\'s usage in the client. ',directive
' Starting button id reserved for use by clients of JFace (value 1024).\n ',directive
'@param labelText\n            the label text of the field editor\n ',non-directive
'@param heightDelta a change in height, in points. ',non-directive
'When an agent is specified at JVM launch time this attribute\n\t\t\tis required. ',directive
' Sets the width and height hints. ',non-directive
'Kept for backwards compatibility.\n',directive
' Converts the given SWT point object to a string.\n <p>\n The string representation of a point has the form\n <code><it>x</it>,<it>y</it></code> where\n <code><it>x</it></code> and <code><it>y</it></code>\n are string representations of integers.\n </p>\n\n @param value the point object\n @return the string representing the given point\n',non-directive
'@param dflt the default value\n ',non-directive
' Returns the human-perceived brightness of a color as float in [0.0, 1.0]. The used RGB\n weights come from http://www.poynton.com/notes/colour_and_gamma/ColorFAQ.html#RTFToC9.\n\n @param rgb the color\n @return the gray-scale value\n',directive
?,non-directive
?,non-directive
'<p></li>\n</ol>  \n\n',non-directive
'A minimum size of SWT.DEFAULT indicates that the result\n of computeSize(int, int, boolean) should be used as the control\'s minimum\n size.\n \n',directive
'@link #setInput(Object)}\n',directive
'<LI>Programmatic updates--using <code>ResultSet</code> updater methods\n  ',non-directive
?,non-directive
?,non-directive
'It collaborates\nwith content type specific reconciling strategies (<tt>IReconcilingStrategy</tt>)\nwhich perform the synchronization for a given dirty region. ',directive
?,non-directive
'@return the <code>while</code> closure\n ',non-directive
' <code>TransformerUtils</code> provides reference implementations and \n utilities for the Transformer functor interface. The supplied transformers are:\n <ul>\n <li>Invoker - returns the result of a method call on the input object\n <li>Clone - returns a clone of the input object\n <li>Constant - always returns the same object\n <li>Closure - performs a Closure and returns the input object\n <li>Predicate - returns the result of the predicate as a Boolean\n <li>Factory - returns a new object from a factory\n <li>Chained - chains two or more transformers together\n <li>Switch - calls one transformer based on one or more predicates\n <li>SwitchMap - calls one transformer looked up from a Map\n <li>Instantiate - the Class input object is instantiated\n <li>Map - returns an object from a supplied Map\n <li>Null - always returns null\n <li>NOP - returns the input object, which should be immutable\n <li>Exception - always throws an exception\n <li>StringValue - returns a <code>java.lang.String</code> representation of the input object\n </ul>\n All the supplied transformers are Serializable.\n\n @since Commons Collections 3.0\n @version $Revision: 815106 $ $Date: 2009-09-15 07:56:51 +0200 (Tue, 15 Sep 2009) $\n\n @author Stephen Colebourne\n @author James Carman\n',directive
'No property change events are reported by changing default\n values.\n ',directive
'<p>\n This method is called by the container itself\n when its preference page changes and may be called\n by the page at other times to force a message \n update.\n ',directive
'A minimum size of SWT.DEFAULT indicates that the result\n of computeSize(int, int, boolean) should be used as the control\'s minimum\n size.\n \n',directive
' Returns the revision hover.\n\n ',non-directive
'<li>Typed - ensures that only elements that are of a specific type can be added\n',directive
' Shortens the given text <code>textValue</code> so that its width in\n pixels does not exceed the width of the given control. Overrides\n characters in the center of the original string with an ellipsis (\"...\")\n if necessary. If a <code>null</code> value is given, <code>null</code>\n is returned.\n \n @param textValue\n            the original string or <code>null</code>\n @param control\n            the control the string will be displayed on\n @return the string to display, or <code>null</code> if null was passed\n         in\n \n @since 3.0\n',directive
' An abstract field editor for a string type preference that presents\n a string input field with a change button to its right to edit the\n input field\'s content. When the user presses the change button, the\n abstract framework method <code>changePressed()</code> gets called\n to compute a new string.\n',directive
' Returns this dialog page\'s title.\n\n ',non-directive
'@see Reader#read(char[],int,int)\n',non-directive
' Sets the size of all pages. The given size takes precedence over computed\n sizes.\n \n @param size\n            the page size encoded as <code>new Point(width,height)</code>\n @see #setPageSize(int,int)\n',non-directive
'Decorations can be\nused to show additional information about a field, such as its status, or a cue\nthat shows availability of content proposals.  ',directive
' Creates a new range with the same start and length as the passed line range.\n\n ',directive
'A program may use a reference object\nto maintain a reference to some other object in such a way that the latter\nobject may still be reclaimed by the collector.  ',directive
'@return <code>true</code> if a revision model has been set, <code>false</code> otherwise\n',non-directive
'@param cancelable\n            <code>true</code> if the end user can cancel this progress\n            dialog, and <code>false</code> if it cannot be canceled\n',non-directive
?,non-directive
'Has no effect if an identical listener is already registered.\n\n ',directive
' Creates a GridLayoutFactory that creates GridLayouts with the default SWT\n values.\n \n <p>\n Initial values are:\n </p>\n \n <ul>\n <li>numColumns(1)</li>\n <li>margins(5,5)</li>\n <li>extendedMargins(0,0,0,0)</li>\n <li>spacing(5,5)</li>\n <li>equalWidth(false)</li>\n </ul>\n \n @return a GridLayoutFactory that creates GridLayouts as though created with\n their default constructor\n @see #fillDefaults\n',directive
'@return a new FontDescriptor with the given style\n \n ',non-directive
'@return the gray-scale value\n',non-directive
'@param delta the number of lines to resize the range\n ',directive
'A range is illegal if its length is &lt;= 0 or if its start\n line is &lt; 0.\n\n ',directive
' Retained for backward compatibility.\n \n Returns the title area composite. There is no composite in this\n implementation so the shell is returned.\n \n @return Composite\n @deprecated\n',non-directive
' Sets the current value of the float-valued preference with the\n given name.\n <p>\n A property change event is reported if the current value of the \n preference actually changes from its previous value. In the event\n object, the property name is the name of the preference, and the\n old and new values are wrapped as objects.\n </p>\n <p>\n Note that the preferred way of re-initializing a preference to its\n default value is to call <code>setToDefault</code>.\n </p>\n\n @param name the name of the preference\n @param value the new current value of the preference\n',directive
?,non-directive
'<li>Synchronized - synchronizes method access for multi-threaded environments\n',directive
' The TableColumnLayout is the {@link Layout} used to maintain\n {@link TableColumn} sizes in a {@link Table}.\n \n <p>\n <b>You can only add the {@link Layout} to a container whose <i>only</i> child\n is the {@link Table} control you want the {@link Layout} applied to. Don\'t\n assign the layout directly the {@link Table}</b>\n </p>\n \n @since 3.3\n',directive
'The width and height hints override\n the control\'s preferred size. ',directive
'Equivalent to <code>String.valueOf(value)</code>.\n\n ',directive
' Returns the extent of the wizard for this node.\n <p>\n If the content has not yet been created, calling this method\n does not trigger the creation of the wizard. This allows\n this node to suggest an extent in advance of actually creating \n the wizard.\n </p>\n\n @return the extent, or <code>(-1, -1)</code> extent is not known\n',directive
'@see org.apache.commons.collections.functors.ChainedTransformer\n \n ',non-directive
' The DialogMessageArea is a resusable component for adding an accessible\n message area to a dialog.\n \n When the message is normal a CLabel is used but an errors replaces the\n message area with a non editable text that can take focus for use by screen\n readers.\n \n @since 3.0\n',directive
' Return the <code>Image</code> to be used when displaying an error.\n \n @return image the error image\n',directive
' Create a new instance of the receiver.\n @param title The displayable name of the action.\n @param preferenceStore The preference store to propogate changes to\n @param property The property that is being updated\n @throws IllegalArgumentException Thrown if preferenceStore or\n property are <code>null</code>.\n',non-directive
' Constant for the info image, or a simple dialog with the info image and a single OK button (value 2).\n \n',directive
' Return the Add button.  \n \n @return the button\n @since 3.5\n',non-directive
'<p>\n Null returns false.\n\n ',non-directive
'@return the float-valued preference\n',non-directive
'A closure \n is called if the input object equals the key. ',directive
?,non-directive
'\n The margin height used by layout styles <code>FLAT</code> \n and <code>GRID</code>.\n',non-directive
' A preference dialog is a hierarchical presentation of preference pages. Each\n page is represented by a node in the tree shown on the left hand side of the\n dialog; when a node is selected, the corresponding page is shown on the right\n hand side.\n',non-directive
'<p>\n If the listed font attributes are not contained in the passed style list, nothing happens.\n ',directive
'@param methodName  the name of the method\n ',non-directive
' Sets the current value of the preference with the given name\n in the given preference store. ',non-directive
'Used for dialogs which can\n switch between multiple pages.\n \n',directive
'@param info the context information which this validator should check\n ',non-directive
' Image registry key for error image (value\n <code>\"dialog_error_image\"</code>).\n \n @deprecated use\n             org.eclipse.swt.widgets.Display.getSystemImage(SWT.ICON_ERROR)\n',directive
'This is designed to take up the full width of the page.\n \n',directive
'@link #margins(int, int)}.\n \n',directive
?,non-directive
'@link #start()} constant.\n\n ',non-directive
'@link Layout} to a container whose <i>only</i>\n child is the {',directive
'<li><code>FileFieldEditor</code> - files</li>\n   ',non-directive
'<li>For each pair of threads that successfully exchange objects via\n  an {@code Exchanger}, actions prior to the {@code exchange()}\n  in each thread <i>happen-before</i> those subsequent to the\n  corresponding {@code exchange()} in another thread.\n\n  ',directive
'<p>\nA quick fix is a completion that can correct a problem reported and visible through an <tt>Annotation</tt>\nwhile a quick assist is not related to a problem or <tt>Annotation</tt>. ',directive
'\n\nProvides classes for reading and writing the standard ZIP and GZIP\nfile formats.  Also includes classes for compressing and decompressing\ndata using the DEFLATE compression algorithm, which is used by the\nZIP and GZIP file formats. Additionally, there are utility classes\nfor computing the CRC-32 and Adler-32 checksums of arbitrary\ninput streams.\n\n\n<h2>Package Specification</h2>\n\n</a>\n<ul>\n  <li><a href=\"ftp://ftp.uu.net/pub/archiving/zip/doc/appnote-970311-iz.zip\">\n      Info-ZIP Application Note 970311\n      </a> - a detailed description of the Info-ZIP format upon which\n      the <code>java.util.zip</code> classes are based.\n<p>\n  <li><a href=\"http://www.isi.edu/in-notes/rfc1950.txt\">\n      ZLIB Compressed Data Format Specification version 3.3</a>\n      &nbsp;\n      <a href=\"http://www.isi.edu/in-notes/rfc1950.ps\">\n      (PostScript)</a>\n      (RFC 1950)\n<p>\n  <li><a href=\"http://www.isi.edu/in-notes/rfc1951.txt\">\n      DEFLATE Compressed Data Format Specification version 1.3</a>\n      &nbsp;\n      <a href=\"http://www.isi.edu/in-notes/rfc1951.ps\">\n      (PostScript)</a>\n      (RFC 1951)\n<p>\n  <li><a href=\"http://www.isi.edu/in-notes/rfc1952.txt\">\n      GZIP file format specification version 4.3</a>\n      &nbsp;\n      <a href=\"http://www.isi.edu/in-notes/rfc1952.ps\">\n      (PostScript)</a>\n      (RFC 1952)\n<p>\n  <li>CRC-32 checksum is described in RFC 1952 (above)\n<p>\n  <li>Adler-32 checksum is described in RFC 1950 (above)\n\n</ul>\n\n\n<!--\n<h2>Related Documentation</h2>\n\nFor overviews, tutorials, examples, guides, and tool documentation, please see:\n<ul>\n  <li><a href=\"\">##### REFER TO NON-SPEC DOCUMENTATION HERE #####</a>\n</ul>\n-->\n\n@since JDK1.1\n',directive
?,non-directive
'<li><code>MessageDialog.NONE</code> for a dialog with no\n            image</li>\n            ',directive
' Gets an empty ordered map iterator.\n <p>\n This iterator is a valid map iterator object that will iterate\n over nothing.\n\n @return  a map iterator over nothing\n',non-directive
'<p>\n This method is called by the container itself\n when its preference page changes and may be called\n by the page at other times to force a button state\n update.\n ',directive
' Indentifier for the error image\n',directive
'@return the shell\n',non-directive
' Replace the information control.\n\n ',non-directive
' Sets the layout data on the given control. Creates a new GridData instance and\n assigns it to the control by calling control.setLayoutData.\n  \n @param control control whose layout data will be initialized\n',directive
' Updates the window size to reflect the state of the current wizard.\n <p>\n This method is called by the container itself\n when its wizard changes and may be called\n by the wizard at other times to force a window \n size change.\n </p>\n',directive
?,non-directive
'\n<p>\nThis package contains implementations of the\n{@link java.util.Iterator Iterator} interface.\n<p>\nYou may also consider using \n{@link org.apache.commons.collections.IteratorUtils IteratorUtils},\nwhich is a single class that uses static methods to construct instances\nof the classes in this package.\n',directive
'@param id\n            the node id\n',non-directive
'@since 3.0\n',non-directive
'<P>\nThe <code>agentmain</code> method should do any necessary initialization \nrequired to start the agent. ',directive
' The label for yes buttons.\n',non-directive
'<p>\n The {',non-directive
' Find the <code>IPreferenceNode</code> that has data the same id as the\n supplied value.\n \n @param nodeId\n            the id to search for.\n @return <code>IPreferenceNode</code> or <code>null</code> if not\n         found.\n',non-directive
'Currently, the smallest supported minimum size\n is (1,1) so this is the default. ',directive
' The <code>ProgressMonitorDialog</code> implementation of this method\n only closes the dialog if there are no currently running runnables.\n',directive
'@since 3.0\n',non-directive
'@param chars\n            the number of characters\n ',non-directive
'  Looks up the given key in the given map, converting the result into\n  a map, using the default value if the the conversion fails.\n\n  ',non-directive
?,non-directive
' Sets the current value of the preference with the given name\n in the given preference store. This method does not update\n the font registry or fire a property change event.\n \n @param store the preference store\n @param name the name of the preference\n @param value the new current value of the preference\n \n @see PreferenceConverter#setValue(IPreferenceStore, String, FontData[])\n',non-directive
'@param delta the number of lines to resize the range\n ',directive
?,non-directive
'@param out\n            the print writer\n',non-directive
'<li>The same factory can be used many times to create several RowData\n instances</li>\n ',directive
'@param width\n            margin width (pixels)\n ',non-directive
?,non-directive
'<p>\n The generated layout data is the same as what would be generated by \n GridLayoutFactory.generateLayout, except that the span is configurable\n </p>  \n \n ',directive
'@return this\n ',non-directive
'These are similar in usage to the implicit monitors accessed using\n<tt>Object.wait</tt>, but offer extended capabilities.  ',directive
?,non-directive
'Writes and reads of\n  {@code volatile} fields have similar memory consistency effects\n  as entering and exiting monitors, but do <em>not</em> entail\n  mutual exclusion locking.\n\n  ',directive
?,non-directive
'@return IDialogSettings (the section), or <code>null</code> if none\n',directive
'Equivalent to <code>String.valueOf(value)</code>.\n\n ',directive
'@return the <code>invoker</code> closure\n ',directive
'@param r runnable to cancel\n',non-directive
'Similarly, valid representations of <code>false</code> include the strings\n \"<code>f</code>\", \"<code>false</code>\", or equivalent in mixed\n or upper case. \n ',non-directive
' The label for no buttons.\n',non-directive
'@link Iterator#remove} method.\n\n ',non-directive
'\n A small red square used to warn that an image cannot be created.\n <p>\n',directive
' Disposes any remaining resources allocated by this manager. \n',non-directive
'@param map  the map to check, may be null\n ',directive
'Note however that while this use is perfectly reasonable,\n           the logging APIs are not intended to replace the normal debugging \n           and profiling tools that may already exist in the development environment. \n',directive
'@since 3.3\n',non-directive
'@link #brightness(RGB) brightness}.\n\n ',directive
'<li>PROPOSAL_OVERLAY<p>\n     proposal popup windows should overlay each other\n   </li>\n   ',directive
'<code>DeviceResourceManager</code> should only be used directly when managing\n resources for a device other than a Display (such as a printer).  \n ',directive
'<p>\n Note that several static convenience methods are also provided on this\n class for directly accessing JFace\'s standard fonts.\n ',directive
' The progress indicator control.\n',non-directive
'@param key  the key of the value to look up in that map\n  ',non-directive
' Creates and returns a new image descriptor for the given image. Note \n that disposing the original Image will cause the descriptor to become invalid.\n \n @since 3.1 \n\n @param img image to create\n @return a newly created image descriptor\n',directive
'@return the text label for this node, or <code>null</code>\n   if there is no label for this node\n',directive
' Gets the key from the pair.\n\n ',non-directive
' Constant for a warning message (value 2).\n',directive
' Constant for the error image, or a simple dialog with the error image and a single OK button (value 1).\n \n @see #MessageDialog(Shell, String, Image, String, int, String[], int)\n @see #open(int, Shell, String, String, int)\n',directive
' Load the FontRegistry using the ClassLoader from the PlatformUI\n plug-in\n <p>\n This method should only be called from the UI thread. If you are not on the UI\n thread then wrap the call with a\n <code>PlatformUI.getWorkbench().getDisplay().synchExec()</code> in order to\n guarantee the correct result. Failure to do this may result in an {@link\n SWTException} being thrown.\n </p>\n @param location the location to read the resource bundle from\n @throws MissingResourceException Thrown if a resource is missing\n',directive
'</p>\n \n <p>\n This method should never be called on the global resource manager,\n since all resources will remain allocated for the lifetime of the app and\n will be effectively leaked.\n ',directive
'<li><a href=\"http://www.isi.edu/in-notes/rfc1952.txt\">\n      GZIP file format specification version 4.3</a>\n      &nbsp;\n      <a href=\"http://www.isi.edu/in-notes/rfc1952.ps\">\n      (PostScript)</a>\n      (RFC 1952)\n<p>\n  ',directive
'@link #start() start} &gt;= 0\n ',directive
?,non-directive
'@return the radio group control\n',non-directive
' Create a new <code>TreeViewer</code>.\n \n @param parent\n            the parent <code>Composite</code>.\n @return the <code>TreeViewer</code>.\n @since 3.0\n',non-directive
?,non-directive
'@link Range} failed because it would\n have resulted in an illegal range. ',non-directive
'@param display the display the color is from\n ',non-directive
'<p>\n NOTE: From version 3.0, this exception extends NoSuchElementException.\n\n ',directive
' The <code>WizardPage</code> implementation of this method declared on\n <code>DialogPage</code> returns the shell of the container.\n The advantage of this implementation is that the shell is accessable\n once the container is created even though this page\'s control may not \n yet be created.\n',directive
' Saves the current enable/disable state of the given control and its\n descendents in the returned object; the controls are all disabled.\n \n',directive
'@since 3.0\n',non-directive
'This is most\n important for calls to <code>cancel()</code>.\n ',directive
' Updates the message (or error message) shown in the message line to \n reflect the state of the currently active page in this container.\n <p>\n This method is called by the container itself\n when its preference page changes and may be called\n by the page at other times to force a message \n update.\n </p>\n',directive
'@param vSpan number of rows spanned by the control\n ',non-directive
' Creates a new GridLayout, and initializes it with values from the factory.\n \n @return a new initialized GridLayout.\n @see #applyTo\n',non-directive
?,non-directive
'@since 3.1\n',non-directive
'<lI>SQLException enhancements -- Added support for cause chaining; New SQLExceptions\n added for common SQLState class value codes\n ',non-directive
' Creates a dialog instance. Note that the window will have no visual\n representation (no widgets) until it is told to open. By default,\n <code>open</code> blocks for dialogs.\n \n @param parentShell\n            the parent shell, or <code>null</code> to create a top-level\n            shell\n',directive
'@see Display#getSystemColor(int)\n',non-directive
'@deprecated JFaceColors no longer maintains a cache of colors.  ',directive
'Other animations will be written as\n subclasses of this class. ',directive
' Opens an error dialog to display the given error. Use this method if the\n error object being displayed does not contain child items, or if you wish\n to display all such items without filtering.\n \n @param parent\n            the parent shell of the dialog, or <code>null</code> if none\n @param dialogTitle\n            the title to use for this dialog, or <code>null</code> to\n            indicate that the default title should be used\n @param message\n            the message to show in this dialog, or <code>null</code> to\n            indicate that the error\'s message should be shown as the\n            primary message\n @param status\n            the error to show to the user\n @return the code of the button that was pressed that resulted in this\n         dialog closing. This will be <code>Dialog.OK</code> if the OK\n         button was pressed, or <code>Dialog.CANCEL</code> if this\n         dialog\'s close window decoration or the ESC key was used.\n',directive
?,non-directive
'The size can only be persisted if the\n            dialog settings for persisting the bounds are also specified.\n            ',directive
?,non-directive
'<p>\n Valid representations of <code>true</code> include the strings\n \"<code>t</code>\", \"<code>true</code>\", or equivalent in mixed\n or upper case.\n ',non-directive
'<li>While - repeatedly calls a closure while a predicate is true\n ',directive
'@deprecated\n',directive
'@return the value coverted to float, or throws\n         <code>NumberFormatException</code> if none\n \n ',directive
'<p>\n Note that the preferred way of re-initializing a preference to the\n appropriate default value is to call <code>setToDefault</code>.\n ',directive
'@link #start()}\n',directive
'<h3>Notification</h3>\n\nA program may request to be notified of changes in an object\'s reachability by\n<em>registering</em> an appropriate reference object with a <em>reference\nqueue</em> at the time the reference object is created.  ',directive
'<p>\n Standard implementations of common transformers are provided by\n {',non-directive
'The results of a write by one thread are\nguaranteed to be visible to a read by another thread only if the write\noperation <i>happens-before</i> the read operation.  ',directive
'<li>Actions in a thread prior to the submission of a {@code Runnable}\n  to an {@code Executor} <i>happen-before</i> its execution begins.\n  ',directive
' Defines a collection that counts the number of times an object appears in\n the collection.\n <p>\n Suppose you have a Bag that contains <code>{a, a, b, c}</code>.\n Calling {@link #getCount(Object)} on <code>a</code> would return 2, while\n calling {@link #uniqueSet()} would return <code>{a, b, c}</code>.\n <p>\n <i>NOTE: This interface violates the {@link Collection} contract.</i> \n The behavior specified in many of these methods is <i>not</i> the same\n as the behavior specified by <code>Collection</code>.\n The noncompliant methods are clearly marked with \"(Violation)\".\n Exercise caution when using a bag as a <code>Collection</code>.\n <p>\n This violation resulted from the original specification of this interface.\n In an ideal world, the interface would be changed to fix the problems, however\n it has been decided to maintain backwards compatibility instead.\n\n @param <E> the type held in the bag\n @since Commons Collections 2.0\n @version $Revision: 815019 $ $Date: 2009-09-15 07:54:10 +0200 (Tue, 15 Sep 2009) $\n\n @author Chuck Burdick\n @author Stephen Colebourne\n',directive
'<p>\n Instances of this class can be created using an AnimatorFactory.\n \n',directive
'The binding manager manages a collection of bindings, and\ndecides which bindings are active at any point in time.  ',non-directive
?,non-directive
' Get the specified {',non-directive
'@return boolean\n',non-directive
?,non-directive
'@return the value, or <code>null</code> if none\n',directive
' {@inheritDoc}\n \n @since 3.5\n',directive
'@param title\n            the dialog\'s title, or <code>null</code> if none\n ',directive
'<h2>\nPackage Specification</h2>\n<p>The deferred viewers are viewers that can handle concurrent updates from a \n  variety of Threads.<br>\n  &nbsp; \n',directive
'However, clients are also free to implement this \n interface if <code>WizardPage</code> does not suit their needs.\n ',directive
' Image registry key for banner image (value\n <code>\"dialog_title_banner_image\"</code>).\n',non-directive
'</p>\n \n ',non-directive
' Creates a Closure that will call the closure <code>count</code> times.\n <p>\n A null closure or zero count returns the <code>NOPClosure</code>.\n\n @see org.apache.commons.collections.functors.ForClosure\n \n @param count  the number of times to loop\n @param closure  the closure to call repeatedly\n @return the <code>for</code> closure\n',directive
'There is no composite in this\n implementation so the shell is returned.\n \n',directive
'@since 3.4\n',non-directive
'@return a copy of the receiver\n',non-directive
'<p>\n A nested registry can be used to manage the resources for, say, a dialog\n box.\n ',non-directive
'@link java.util.concurrent.ConcurrentSkipListSet},\n{',directive
' Gets a transformer that always returns null.\n \n @see org.apache.commons.collections.functors.ConstantTransformer\n \n @return the transformer\n',non-directive
' Gets an iterator that provides an ordered iteration over the elements\n contained in a collection of ordered {@link Iterator}s.\n <p>\n Given two ordered {@link Iterator}s <code>A</code> and <code>B</code>,\n the {@link Iterator#next()} method will return the lesser of\n <code>A.next()</code> and <code>B.next()</code>.\n <p>\n The comparator is optional. If null is specified then natural order is used.\n\n @param comparator  the comparator to use, may be null for natural order\n @param iterator1  the first iterators to use, not null\n @param iterator2  the first iterators to use, not null\n @return a combination iterator over the iterators\n @throws NullPointerException if either iterator is null\n',directive
'The only new methods introduced by this class are \n <code>getSelectedNode</code> and <code>setSelectedNode</code>. \n ',directive
' An accessor for the current key of the toggle preference.\n \n',non-directive
' Sets the number of columns in the layout\n \n @param numColumns number of columns in the layout\n @return this\n',non-directive
' Creates a string field editor.\n Use the method <code>setTextLimit</code> to limit the text.\n \n @param name the name of the preference this field editor works on\n @param labelText the label text of the field editor\n @param width the width of the text input field in characters,\n  or <code>UNLIMITED</code> for no limit\n @param strategy either <code>VALIDATE_ON_KEY_STROKE</code> to perform\n  on the fly checking (the default), or <code>VALIDATE_ON_FOCUS_LOST</code> to\n  perform validation only after the text has been typed in\n @param parent the parent of the field editor\'s control\n @since 2.0\n',directive
' The <code>IPreferenceStore</code> interface represents a table mapping\n named preferences to values. ',non-directive
'@param color\n            the title bar color\n',non-directive
' An accessor for the current preference store for this dialog.\n \n @return The preference store; this value may be <code>null</code> if no\n         preference is being used.\n',directive
?,non-directive
'@deprecated\n',directive
'Typically this involves temporarily disabling\nmost controls and displaying a busy cursor and progress indicator; while\nthe operation is in progress, the only requests that will be accepted will\nbe ones to cancel the operation.\n',directive
'Note that an <code>IRunnableContext</code> is not a runnable itself.\n ',directive
'This hook\n method is called whenever the text changes in the input field.\n ',directive
'@link #replaceInformationControl(IInformationControlCreator, Rectangle, Object, Rectangle, boolean)} is run\n',directive
'<LI><code>SQLWarning</code> -- thrown to indicate a warning\n\t  ',directive
'@param pageName the name of the page\n',non-directive
'@return the node, or <code>null</code> if none\n \n ',directive
'@see #isHelpAvailable()\n',non-directive
'@link IterableSortedMap}<K, V>\n ',non-directive
' Sets the visibility of this dialog page.\n\n ',non-directive
'<p>\n For examples of UI components which implement this interface,\n see <code>ApplicationWindow</code>, <code>ProgressMonitorDialog</code>,\n and <code>WizardDialog</code>.\n ',directive
'<li>ExtendedProperties - extends the Properties class to add extra functionality\n</ul>\n',directive
' <p>\n Populates a Map using the supplied <code>Transformer</code> to transform the collection\n values into keys, using the unaltered collection value as the value in the <code>Map</code>.\n ',non-directive
'@return a button in the dialog\'s button bar\n',non-directive
'Consequently, it is generally bad practice to open\n a dialog without a parent. ',directive
?,non-directive
'If the layout is <code>null</code>\n the part\'s default layout is used.\n ',directive
'@since 1.2\n',non-directive
'<p>\n The Double is obtained from the results of {',non-directive
'@param minWidth\n            the minimum page width\n ',non-directive
' Creates a message dialog with a toggle. See the superclass constructor\n for info on the other parameters.\n \n @param parentShell\n            the parent shell\n @param dialogTitle\n            the dialog title, or <code>null</code> if none\n @param image\n            the dialog title image, or <code>null</code> if none\n @param message\n            the dialog message\n @param dialogImageType\n            one of the following values:\n            <ul>\n            <li><code>MessageDialog.NONE</code> for a dialog with no\n            image</li>\n            <li><code>MessageDialog.ERROR</code> for a dialog with an\n            error image</li>\n            <li><code>MessageDialog.INFORMATION</code> for a dialog\n            with an information image</li>\n            <li><code>MessageDialog.QUESTION </code> for a dialog with a\n            question image</li>\n            <li><code>MessageDialog.WARNING</code> for a dialog with a\n            warning image</li>\n            </ul>\n @param dialogButtonLabels\n            an array of labels for the buttons in the button bar\n @param defaultIndex\n            the index in the button label array of the default button\n @param toggleMessage\n            the message for the toggle control, or <code>null</code> for\n            the default message\n @param toggleState\n            the initial state for the toggle\n  \n',directive
' Generates layout data to the given control, given the number of cells\n spanned by the control. Attaches a GridData to the control. This method \n allows generated layout data to be used with controls that span multiple cells. \n <p>\n The generated layout data is the same as what would be generated by \n GridLayoutFactory.generateLayout, except that the span is configurable\n </p>  \n \n @see GridLayoutFactory#generateLayout(org.eclipse.swt.widgets.Composite)\n @param theControl\n @param hSpan number of columns spanned by the control\n @param vSpan number of rows spanned by the control\n @since 3.3\n',non-directive
'<p>\n Note that the current value of the preference is affected if\n the preference\'s current value was its old default value, in which\n case it changes to the new default value. ',directive
'@deprecated As of 3.2, replaced by Platform UI\'s field assist support\n',directive
' Style bits will never be removed based on the return value \n of this method.  ',directive
'@link\njava.lang.NullPointerException NullPointerException} to be thrown.\n\n',non-directive
?,non-directive
?,non-directive
'If the preference\'s current\n is different from its old default value, its current value is\n unaffected. ',directive
'Callers must\n additionally call applyTo(theControl) if they wish to use the generated values.\n \n',directive
' Set the foreground and background colors of the\n control to the specified values. ',non-directive
'<li><code>MessageDialog.INFORMATION</code> for a dialog\n            with an information image</li>\n            ',directive
' <p>\n Initial values are:\n </p>\n \n <ul>\n ',non-directive
'@see #setPageSize(int,int)\n',non-directive
'@param parent\n            The Composite to create the receiver in.\n \n',non-directive
' The <code>IRunnableWithProgress</code> interface should be implemented by any\n class whose instances are intended to be executed as a long-running operation.\n ',directive
'@return  the value in the map, or defaultValue if the original value\n    is null or the map is null\n',non-directive
?,non-directive
'Failure to do this may result in an {',directive
'It then calls\n <code>IWizard.createPageControls</code> to allow the wizard to\n pre-create their page controls prior to opening, so that the wizard opens\n to the correct size. ',directive
'</pre>\n',non-directive
?,non-directive
' Sets this dialog page\'s image.\n\n @param image the image for this dialog page, \n  or <code>null</code> if none\n',non-directive
'@param start the new start, must be &gt;= 0 and &lt; {',directive
'That is, if the\n given collection <code>coll</code> contains <code>n</code> copies\n of a given object, calling {',directive
' Changes the rendering mode and triggers redrawing if needed.\n\n ',non-directive
'@param preferencePage the preference page, or <code>null</code> if none\n ',directive
'@deprecated use #setPage(DialogPage)\n',directive
'@return whether the Details button should be included\n ',non-directive
' Disposes the SWT resources used by this field editor.\n',non-directive
?,non-directive
' The tray dialog\'s default layout is a modified version of the default\n <code>Window</code> layout that can accomodate a tray, however it still\n conforms to the description of the <code>Window</code> default layout.\n <p>\n Note: Trays may not be supported with all custom layouts on the dialog\'s\n Shell. To avoid problems, use a single outer <code>Composite</code> for\n your dialog area, and set your custom layout on that <code>Composite</code>.\n </p>\n \n @see org.eclipse.jface.window.Window#getLayout()\n @return a newly created layout or <code>null</code> for no layout\n',directive
' Creates a RowLayoutFactory that creates RowLayouts with no margins, fill\n behavior, and default dialog spacing.\n \n <p>\n Initial values are:\n </p>\n \n <ul>\n <li>margins(0,0)</li>\n <li>extendedMargins(0,0,0,0)</li>\n <li>wrap(true)</li>\n <li>pack(true)</li>\n <li>fill(false)</li>\n <li>justify(false)</li>\n <li>spacing(LayoutConstants.getSpacing().x</li>\n </ul>\n \n @return a RowLayoutFactory that creates RowLayouts with no margins\n @see #swtDefaults\n',directive
'@see IProgressMonitor#worked(int)\n',non-directive
'@return DialogPage or <code>null</code> if it \n has not been set.\n \n',directive
'@param key  the key to look up\n ',non-directive
' Sets the delay after which the content assistant is automatically invoked\n if the cursor is behind an auto activation character.\n\n @param delay the auto activation delay\n',directive
'@since 3.3\n',non-directive
'@param parent\n            the parent shell of the dialog, or <code>null</code> if none\n ',non-directive
' Returns the wizard this dialog is currently displaying.\n \n',non-directive
'<li> An object is <em>strongly reachable</em> if it can be reached by some\nthread without traversing any reference objects.  ',directive
'@see SWT#COLOR_WIDGET_BACKGROUND\n ',non-directive
'@param key  the key of the value to look up in that map\n  ',non-directive
'Normally this method is only called on the container\'s\n current wizard. ',directive
?,non-directive
'Note that this is an approximation; the returned RGB\n is not guaranteed to have the requested {',directive
' Implements <code>IProgressMonitor.isCanceled</code>.\n @see IProgressMonitor#isCanceled()\n',non-directive
'@see <a href=\"../../../javax/management/package-summary.html\">\n     JMX Specification.</a>\n\n',non-directive
'<li>\nimage descriptors (<tt>ImageDescriptor</tt>) - surrogate object for creating\nSWT images</li>\n\n',non-directive
'<li>CONTEXT_ABOVE<p>\n     context information popup should always appear above the line containing\n     the current cursor location\n   </li>\n   ',directive
' Gets a Long from a Map in a null-safe manner.\n ',non-directive
'@param path the path\n ',non-directive
'@deprecated This font is not in use\n',directive
'@param start the first line of the new range, must be &gt;= 0\n ',directive
' Returns a parent composite for a field editor.\n <p>\n This value must not be cached since a new parent\n may be created each time this method called. Thus\n this method must be called each time a field editor\n is constructed.\n </p>\n\n @return a parent\n',directive
'The shell must have a {',directive
'<p>\n This method is called by the container itself\n when its wizard page changes and may be called\n by the page at other times to force a title bar \n update.\n ',directive
'@param buttonLabels\n            The button labels to use; must not be <code>null</code>.\n',directive
'BigDecimal provides arbitrary-precision signed decimal numbers suitable for\ncurrency calculations and the like.   ',non-directive
' Defines a simple key value pair.\n <p>\n A Map Entry has considerable additional semantics over and above a simple\n key-value pair. This interface defines the minimum key value, with just the\n two get methods.\n\n @param <K> the type of the key\n @param <V> the type of the value\n @since Commons Collections 3.0\n @version $Revision: 815006 $ $Date: 2009-09-15 07:44:36 +0200 (Tue, 15 Sep 2009) $\n\n @author Stephen Colebourne\n',directive
' Returns the cause of this throwable or <code>null</code> if the\n cause is nonexistent or unknown. \n \n',directive
?,non-directive
'@param indent the indent (in pixels)\n',non-directive
'The string representation is\n \"font name-style-height\" (for example \"Times New Roman-bold-36\").\n ',directive
'<li>Transformed - transforms each element added to the bag\n</ul>\n',non-directive
'@throws BadLocationException if accessing the document failed\n',non-directive
?,non-directive
' Moves this range such that the {',non-directive
'<li><code>boolean</code> = <code>false</code></li>\n \t',non-directive
' Gets a Byte from a Map in a null-safe manner.\n ',non-directive
?,non-directive
'Called on workbench\n shutdown.\n \n',directive
'If the shell is not resizable, this method enlarges the {',directive
'In most cases this will be a copy\n of the layoutData used in setMessageLayoutData.\n \n',directive
' Creates a list field editor.\n \n @param name the name of the preference this field editor works on\n @param labelText the label text of the field editor\n @param parent the parent of the field editor\'s control\n',non-directive
'Returns the default-default value (<code>POINT_DEFAULT_DEFAULT</code>) \n if there is no preference with the given name, or if the current value \n cannot be treated as a point.\n\n ',directive
' Converts a font data object to a string representation for display. \n \t',non-directive
'@param data\n            the column layout data\n',non-directive
'<LI> The JDBC 3.0 API\n ',non-directive
'@return an empty variant of <code>selection</code>\n ',non-directive
' Creates a new GridData instance. ',non-directive
'<li>Typed - ensures that only elements that are of a specific type can be added\n',directive
'@param value the value to be converted\n ',non-directive
'The source of the event is\n this registry; the property name is the symbolic font name.\n ',directive
?,non-directive
' The label for not to all buttons.\n',non-directive
' Delegates the painting of the quick diff colors to this painter. ',directive
'@link org.apache.commons.collections.Bag Bag} and \n{',non-directive
'Any object that\ncan be invoked this way must implement the Remote interface. ',directive
'<li> An object is <em>weakly reachable</em> if it is neither strongly nor\nsoftly reachable but can be reached by traversing a weak reference.  ',directive
?,non-directive
'This is generally\n done when the color preferences changed and any cached colors\n may be disposed. ',directive
'@link #lazyMap(Map,Transformer)}\n  ',non-directive
'@param name the name of the preference\n ',non-directive
?,non-directive
'@param count  the number of times to loop\n ',non-directive
'This class is used to prevent unauthorized\naccess to the logging stream associated with the <code>DriverManager</code>,\nwhich may contain information such as table names, column data, and so on.\n',directive
'@since 3.0\n',non-directive
'</p>\n\n ',non-directive
'@param hSpan number of columns spanned by the control\n ',non-directive
' Runnable that cleans up the manager on disposal of the display.\n',non-directive
'@param proposals the proposals\n',non-directive
'@return this\n',non-directive
'@link java.util.concurrent.ConcurrentSkipListMap},\n{',directive
' Create a new Closure that calls each closure in turn, passing the \n result into the next closure. ',directive
'@param manager the resource manager used to allocate images\n \n ',non-directive
'@param args  the arguments\n ',non-directive
'Through the use of the method\n {',directive
'@since 3.1\n',non-directive
'Returns the default-default value (<code>0L</code>) if there\n is no preference with the given name, or if the current value \n cannot be treated as a long.\n\n ',directive
?,non-directive
?,non-directive
' Creates a new RowDataFactory that creates copies of the given RowData by\n default.\n \n @param data\n            RowData to copy\n @return a new RowDataFactory that creates copies of the argument by\n         default\n',non-directive
