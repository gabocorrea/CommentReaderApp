@relation 'dataset_corrected_only_comments_and_manually_revised_subset_(only comments and class)-weka.filters.unsupervised.instance.RemoveWithValues-S0.0-Clast-Lfirst-weka.filters.unsupervised.instance.Randomize-S42'

@attribute text string
@attribute is_directive {directive,non-directive}

@data
'@since 3.3\n',non-directive
'<li>Transformer - wraps a Transformer as a Closure\n ',non-directive
?,non-directive
'@link TransformerUtils}. ',non-directive
' Identifier for the Hyperlink Color\n',non-directive
' Set the page to be the receiver.\n ',non-directive
'When these \"since\" tags are used in\nJavadoc<sup><font size=-2>TM</font></sup> comments for the JDBC API,\nthey indicate the following:\n<UL>\n ',non-directive
'Font will also be applied to\n            its children. ',non-directive
?,non-directive
'@param height a height, in points\n ',non-directive
' Thrown to indicate that an attempt to create or modify a {@link Range} failed because it would\n have resulted in an illegal range. A range is illegal if its length is &lt;= 0 or if its start\n line is &lt; 0.\n\n @since 3.2\n',non-directive
?,non-directive
'@since 3.0\n',non-directive
'@return the value\n ',non-directive
'</p>\n\n ',non-directive
' Creates a new string field editor \n',non-directive
' Set the manager for the preferences.\n @param manager The manager to set.\n \n @since 3.1\n',non-directive
'@param name the name of the preference\n ',non-directive
' Indicates whether the Cancel button is to be shown.\n',non-directive
'@throws NullPointerException if either parameter is null\n',non-directive
?,non-directive
?,non-directive
' Returns this field editor\'s scale control.\n \n @return the scale control, or <code>null</code> if no scale field is\n         created yet\n',non-directive
'<li>margins(0,0)</li>\n ',non-directive
'@since 3.1 \n\n ',non-directive
' Returns the text area.\n \n',non-directive
'@param differenceRect rectangle which, when added to the client area of the\n        layout, returns the outer area of the layout. ',non-directive
' Margin width (in pixels) to be used in layouts inside popup dialogs\n (value is 0).\n',non-directive
?,non-directive
'@link Composite}\n ',non-directive
' A field editor for a boolean type preference.\n',non-directive
' Returns the descriptor associated with the given key in this registry, \n or <code>null</code> if none.\n\n @param key the key\n @return the descriptor, or <code>null</code> if none\n @since 2.1\n',non-directive
' Sets whether this field editor is presenting the default value.\n\n @param booleanValue <code>true</code> if the default value is being presented,\n  and <code>false</code> otherwise\n',non-directive
'@since 3.4 this field is protected.\n',non-directive
?,non-directive
'<p>\n The double is obtained from the results of {',non-directive
'@param selection the selection\n ',non-directive
' Returns the set of FontData associated with this font. ',non-directive
' The cancel button has been pressed.\n \n',non-directive
?,non-directive
'A field editor reports\n an event when the value, or the validity of the value, changes.\n ',non-directive
' Fills this field editor\'s basic controls into the given parent. \n\n ',non-directive
' Creates the preference page for this node.\n',non-directive
' Style constant (value <code>0</code>) indicating the default layout where\n the field editor\'s check box appears to the left of the label.\n',non-directive
'-->\n\n',non-directive
?,non-directive
' Sets the GridData span. The span controls how many cells\n are filled by the control. \n \n @param span the new span. The x coordinate indicates the number of\n columns spanned, and the y coordinate indicates the number of rows.\n @return this\n',non-directive
'These interfaces are not intended for key \nimplementations whose key material resides in \ninaccessible, protected storage (such as in a \nhardware device). \n',non-directive
?,non-directive
'@return the value as a float\n ',non-directive
' Disposes this image registry, disposing any images\n that were allocated for it, and clearing its entries.\n \n',non-directive
?,non-directive
'@version $Revision: 814997 $ $Date: 2009-09-15 07:29:56 +0200 (Tue, 15 Sep 2009) $\n\n ',non-directive
'@see java.lang.Long#valueOf(java.lang.String)\n',non-directive
'For example, the applet context could be a Web browser or an applet\ndevelopment environment.\n',non-directive
'\n<p>Provides support for formatting key sequences.</p>\n\n<h2>Package Specification</h2>\n<p>\nThis is a collection fo various formatters for key sequences.  ',non-directive
'<tt>ContributionManager</tt>\nmaintains the contributions as a dynamic list of contribution items (<tt>IContributionItems</tt>).\n',non-directive
'@param selection the selection\n ',non-directive
' The label for no buttons.\n',non-directive
' The selected page.\n',non-directive
'<li>when the caret is moved to a revision\'s line (only on post-selection)</li>\n </ul>\n ',non-directive
?,non-directive
'@param id\n            the node id\n ',non-directive
'It delegates \nthe detection and presentation of hyperlinks to <tt>IHyperlinkDetector</tt> and <tt>IHyperlinkPresenter</tt>, respectively.\n',non-directive
'@return the value in the Map as a Short, <code>null</code> if null map input\n',non-directive
' Copies the given GridLayout instance\n \n @param l layout to copy\n @return a new GridLayout\n',non-directive
' Sets the information control creator for the additional information control.\n\n ',non-directive
?,non-directive
?,non-directive
?,non-directive
'@return {',non-directive
' Sets the selected range. ',non-directive
' Returns this dialog page\'s image.\n\n ',non-directive
' Message type constant used to display a warning icon with the message.\n \n',non-directive
'The manifest stores meta-information about the\nJAR file contents and is also used for signing JAR files.\n\n\n',non-directive
' A delayed input change listener that forwards delayed input changes to an information control replacer.\n\n @since 3.4\n',non-directive
'</p>\n',non-directive
'@param key  the key to look up\n ',non-directive
'@since 3.5\n',non-directive
?,non-directive
?,non-directive
'@param xHint\n            horizontal hint (pixels), or SWT.DEFAULT to use the control\'s\n            preferred size\n ',non-directive
' Creates and returns an SWT label under the given composite.\n\n @param parent the parent composite\n @return the new label\n',non-directive
' Converts the given value into a double.\n ',non-directive
' The label for back buttons.\n',non-directive
' Returns the first line contained in this range. ',non-directive
' The value of the preference when the user has asked that the answer to\n the question always be \"no\".\n',non-directive
'@param parent\n            The widgets parent\n',non-directive
' Gets a byte from a Map in a null-safe manner.\n <p>\n The byte is obtained from the results of {@link #getNumber(Map,Object)}.\n\n @param map  the map to use\n @param key  the key to look up\n @return the value in the Map as a byte, <code>0</code> if null map input\n',non-directive
'@param proposal the completion proposal\n',non-directive
' Save a dialog settings to a file.\n \n @param fileName\n            the name of the file the settings are written in.\n @throws IOException\n',non-directive
'@param monitor1\n            the first progress monitor\n ',non-directive
'@since 3.1\n',non-directive
?,non-directive
'<LI><code>NClob</code> interface -- mapping for SQL <code>NCLOB</code>\n\t ',non-directive
?,non-directive
'\n\nProvides classes and interface for RMI distributed\ngarbage-collection (DGC).  ',non-directive
'@param style either <code>GRID</code> or <code>FLAT</code>\n',non-directive
' Creates a radio group field editor.\n ',non-directive
' <p>Returns a FontDescriptor that is equivalent to the reciever, but whose height\n is larger by the given number of points.</p>\n \n <p>Does not modify the reciever.</p>\n \n @param heightDelta a change in height, in points. Negative values will return smaller\n fonts. \n @return a FontDescriptor whose height differs from the reciever by the given number\n of points. \n @since 3.3\n',non-directive
'@return the <code>ColorRegistry</code>.\n ',non-directive
' Returns <code>true</code> if the receiver can provide a hover for a certain document line.\n\n @param activeLine the document line of interest\n @return <code>true</code> if the receiver can provide a hover\n',non-directive
'\n<p>\nThis package contains implementations of the\n{',non-directive
?,non-directive
' Returns whether the named preference is known to this preference\n store.\n\n ',non-directive
' Creates a new {',non-directive
?,non-directive
?,non-directive
' A delayed input change listener that forwards delayed input changes to an information control replacer.\n\n ',non-directive
'<li><a href=\"\">##### REFER TO NON-SPEC DOCUMENTATION HERE #####</a>\n</ul>\n',non-directive
?,non-directive
?,non-directive
'@see #spacing(Point)\n ',non-directive
'\nProvides a reconciler add-on for an <tt>ITextViewer</tt>.\n',non-directive
'@since 1.4\n',non-directive
'@param title\n            the title.\n',non-directive
'@return the HTML contents\n',non-directive
'@param value the new current value of the preference\n',non-directive
?,non-directive
?,non-directive
'@param color\n            the title bar color\n',non-directive
' Sets this dialog page\'s image.\n\n ',non-directive
'@since 3.0\n',non-directive
' Returns the color data associated with the given symbolic color name.\n\n @param symbolicName symbolic color name.\n @return the <code>RGB</code> data, or <code>null</code> if the symbolic name\n is not valid.\n',non-directive
'@return the font\n',non-directive
'</p>\n',non-directive
'@param oldValue the old value\n ',non-directive
?,non-directive
'@since 3.5\n',non-directive
'@param pageIncrement\n            the value used for Scale.setPageIncrement(int).\n',non-directive
'@see org.eclipse.jface.dialogs.IPageChangeProvider#removePageChangedListener(org.eclipse.jface.dialogs.IPageChangedListener)\n ',non-directive
?,non-directive
?,non-directive
' Returns the font data associated with the given symbolic font name.\n Returns the default font data if there is no special value associated\n with that name.\n\n @param symbolicName symbolic font name\n @return the font\n',non-directive
?,non-directive
'<h2>Related Documentation</h2>\n\n<p> An excellent tutorial and overview of regular expressions is <a\nhref=\"http://www.oreilly.com/catalog/regex/\"><i>Mastering Regular\nExpressions</i>, Jeffrey E. ',non-directive
?,non-directive
'<li>\n<tt>FileFieldEditor</tt> - files</li>\n\n',non-directive
' Create a new instance of the receiver.\n @param title The displayable name of the action.\n @param preferenceStore The preference store to propogate changes to\n @param property The property that is being updated\n @throws IllegalArgumentException Thrown if preferenceStore or\n property are <code>null</code>.\n',non-directive
'@param name\n            the name of the preference this field editor works on\n ',non-directive
'<P>\nFor more developer information on how to use these \ninterfaces, including information on how to design \n<code>Key</code> classes for hardware devices, please refer\nto these cryptographic provider developer guides:\n<ul>\n  ',non-directive
'@throws NullPointerException if iterator parameter is null\n',non-directive
' Returns the section with the given name in this dialog settings.\n \n',non-directive
?,non-directive
'@param shouldExclude\n            true iff the control should be excluded from layouts\n ',non-directive
'@return the value in the Map as a Number, <code>null</code> if null map input\n',non-directive
'@param parent\n ',non-directive
'This complete JDBC API\nis included in the Java<sup><font size=-2>TM</font></sup>  \nStandard Edition (Java SE<sup><font size=-2>TM</font></sup>), version 6.  \n',non-directive
' Button id for a \"Help\" button (value 17).\n',non-directive
'<i>options</i> is the agent options.\n',non-directive
' Returns the color descriptor associated with the given symbolic color\n name. ',non-directive
'@see IProgressMonitor#beginTask(java.lang.String, int)\n',non-directive
'@param map the <code>Map</code> to populate.\n ',non-directive
'@param key\n            the key\n ',non-directive
?,non-directive
'Attaches a GridData to the control. ',non-directive
'<h2>Related Documentation</h2>\n\nFor overviews, tutorials, examples, guides, and tool documentation, please see:\n<ul>\n  ',non-directive
' Returns the font registry for JFace itself. ',non-directive
'@param path the path\n ',non-directive
' Create a new instance of the receiver.\n \n',non-directive
' Returns a copy of the given RowData\n \n ',non-directive
'@throws IllegalArgumentException if any closure in the collection is null\n',non-directive
?,non-directive
'If the value is a <code>String</code> and it equals \'true\' ignoring case\n then <code>true</code> is returned, otherwise <code>false</code>.\n ',non-directive
?,non-directive
'<li>Transformed - transforms each element added to the bag\n</ul>\n',non-directive
' Event object describing an <code>IDialogPage</code> in the midst of changing.\n \n @see IPageChangingListener\n @since 3.3\n',non-directive
?,non-directive
'<li>Transformed - transforms each element added\n',non-directive
' Sets the text of the change button.\n\n @param text the new text\n',non-directive
'@param status\n            the error to show to the user\n ',non-directive
' Returns the root level nodes of this preference manager.\n \n',non-directive
' The label control for the subtask.\n',non-directive
' Specifies whether status line appears to the left of the buttons\n (default) or above them.\n \n',non-directive
' Returns the symbolic font name used by dialog pages.\n \n',non-directive
'\n\nProvides classes and interfaces for supporting the server\nside of RMI.  A group of classes are used by the stubs and skeletons\ngenerated by the rmic stub compiler.  Another group of classes\nimplements the RMI Transport protocol and HTTP tunneling.\n\n<!--\n<h2>Package Specification</h2>\n\n##### FILL IN ANY SPECS NEEDED BY JAVA COMPATIBILITY KIT #####\n<ul>\n  <li><a href=\"\">##### REFER TO ANY FRAMEMAKER SPECIFICATION HERE #####</a>\n</ul>\n\n<h2>Related Documentation</h2>\n\nFor overviews, tutorials, examples, guides, and tool documentation, please see:\n<ul>\n  <li><a href=\"\">##### REFER TO NON-SPEC DOCUMENTATION HERE #####</a>\n</ul>\n-->\n\n@since JDK1.1\n',non-directive
'They are operationally defined as follows:\n\n<ul>\n\n',non-directive
'@since 3.0\n ',non-directive
' Returns JFace\'s viewer font. ',non-directive
' Creates a new RowDataFactory that creates copies of the given RowData by\n default.\n \n @param data\n            RowData to copy\n @return a new RowDataFactory that creates copies of the argument by\n         default\n',non-directive
?,non-directive
'@param newType\n            the message type\n ',non-directive
'  Looks up the given key in the given map, converting the result into\n  a boolean, using the default value if the the conversion fails.\n\n  ',non-directive
'@param newWizard\n            the wizard this dialog is working on\n',non-directive
'@param selection the selection to delete\n ',non-directive
' Creates a new preference dialog under the control of the given preference\n manager.\n \n',non-directive
' Adds a revision listener.\n\n ',non-directive
' Creates a new preference node with the given id. The new node has no\n subnodes.\n \n @param id\n            the node id\n',non-directive
'@param parent the parent control\n ',non-directive
' Returns the number of lines touched by <code>selection</code>. ',non-directive
'@param display the display the color is from\n ',non-directive
?,non-directive
' Copies the given RowLayout instance\n \n ',non-directive
'\nProvides classes that help communicate proper content for fields in dialogs and wizards.\n',non-directive
?,non-directive
' Returns the change button for this field editor.\n \n',non-directive
'<li>CursorableLinkedList - a list that can be modified while the listIterator (cursor) is being used</li>\n',non-directive
'@param rgb the color\n ',non-directive
'@return this\n ',non-directive
'@param parent\n            the parent of the field editor\'s control\n',non-directive
?,non-directive
'Content assist supports the user in writing&nbsp; by proposing context\nsensitive completions at a given document position. ',non-directive
'@link org.apache.commons.collections.Buffer Buffer} interface.\n',non-directive
'@param parent the parent of the field editor\'s control\n',non-directive
' Creates a new dialog page with the given title and image.\n \n',non-directive
'@return ProgressMonitorPart\n',non-directive
' Deallocates anything that was allocated by createFont, given a font\n that was allocated by an equal FontDescriptor.\n \n @since 3.1 \n\n @param previouslyCreatedFont previously allocated font\n',non-directive
'@param key  the key to look up\n ',non-directive
'@param key  the key to look up\n ',non-directive
' Creates a new preference manager with the given\n path separator.\n \n',non-directive
'<li>extendedMargins(0,0,0,0)</li>\n ',non-directive
' Prints the contents of this preference store to the given print stream.\n \n @param out\n            the print stream\n',non-directive
' The label for not to all buttons.\n',non-directive
?,non-directive
'</p>\n <p>\n This package contains ready-to-use field editors for various\n types of preferences:\n <ul>\n   ',non-directive
'<p>\n The float is obtained from the results of {',non-directive
'-->\n\n',non-directive
' Creates an integer field editor.\n \n @param name the name of the preference this field editor works on\n @param labelText the label text of the field editor\n @param parent the parent of the field editor\'s control\n @param textLimit the maximum number of characters in the text.\n',non-directive
' Creates a scale field editor with particular scale values.\n \n',non-directive
' Returns a list of completion proposals based on the specified location\n within the document that corresponds to the current cursor position\n within the text viewer.\n\n ',non-directive
' Minimal interface to a message provider. ',non-directive
'@param value the int value\n ',non-directive
' Makes the given shell resizable on all platforms. ',non-directive
'@author Mark Reinhold\n\n',non-directive
?,non-directive
?,non-directive
?,non-directive
' Handle the shell close. ',non-directive
?,non-directive
' Creates the next browser input with the given input as previous one.\n\n ',non-directive
?,non-directive
' Returns the IDialogSettings name.\n \n',non-directive
'Therefore\nsoft and weak references need not be registered with a queue in order to be\nuseful, while phantom references do.  ',non-directive
'<LI> <I>Level</I>: Defines a set of standard logging levels that can be used\n                      to control logging output. ',non-directive
' Returns the set of FontData associated with this font. Modifying the elements\n in the returned array has no effect on the original FontDescriptor.\n \n @return the set of FontData associated with this font\n @since 3.3\n',non-directive
?,non-directive
'@param monitor2\n            the second progress monitor\n ',non-directive
'<LI> <I>Problem diagnosis by field service engineers</I>. ',non-directive
'@param c composite whose layout will be set\n ',non-directive
?,non-directive
' Initializes this field editor with the preference value from\n the preference store.\n',non-directive
'@author\t  Mark Reinhold\n',non-directive
?,non-directive
' Decrements the nesting depth of running operations.\n \n',non-directive
?,non-directive
'The returned object\n will always throw an {',non-directive
' Returns the preference store used by this field editor.\n\n @return the preference store, or <code>null</code> if none\n @see #setPreferenceStore\n',non-directive
' Detach the progress monitor part from the given cancel\n component\n @param cc\n',non-directive
'@since 3.3\n',non-directive
'It consists\n of a label displaying the task and subtask name, and a\n progress indicator to show progress. ',non-directive
'<p>\n This iterator is a valid iterator object that will iterate\n over nothing.\n\n ',non-directive
'<li><a href=\n    \"{@docRoot}/../technotes/guides/security/PolicyFiles.html\"><b>\n    Default Policy Implementation and Policy File Syntax\n    </b></a></li>\n\n  ',non-directive
'@since 3.5\n',non-directive
'The framework provides a concrete\npreference store implementation (<tt>PreferenceStore</tt>) based on an\ninternal <tt>java.util.Properties</tt> object, with support for persisting\nthe non-default preference values to files or streams.\n',non-directive
'</ul>\n\n',non-directive
?,non-directive
'@since 2.0\n',non-directive
'Short equivalent of {',non-directive
?,non-directive
' Finds and returns the preference node directly\n below the top at the given path.\n\n ',non-directive
'@throws BadLocationException if accessing the document failed\n',non-directive
'-->\n\n',non-directive
'@param name the name of the preference\n ',non-directive
'@return  a map iterator over nothing\n',non-directive
?,non-directive
?,non-directive
'@return  the value in the map as a number, or defaultValue if the\n    original value is null, the map is null or the map conversion\n    fails\n',non-directive
'@since Commons Collections 1.0\n ',non-directive
?,non-directive
'If there is no value for a given name, \n then that preferences\'s default value is returned; and if there is no\n default value for that preference, then a default-default value is returned.\n ',non-directive
'@return <code>true</code> if the given status should be displayed, and\n         <code>false</code> otherwise\n ',non-directive
' Public field that dictates if the page change will successfully change.\n \n Set this field to <code>false</code> to prevent the page from changing.\n   \n Default value is <code>true</code>.\n',non-directive
'@since 2.0\n',non-directive
'<li>\nsetting the viewer\'s content provider (an object implementing <tt>IContentProvider</tt>),</li>\n\n',non-directive
'@param array  the array over which to iterate\n ',non-directive
'@see org.eclipse.jface.dialogs.Dialog#buttonPressed(int)\n',non-directive
'@throws IllegalArgumentException if the method name is null\n ',non-directive
?,non-directive
'@param prefStore\n            The prefStore to set. ',non-directive
'@param enumeration  the enumeration to use\n ',non-directive
'@param name the name of the preference\n ',non-directive
' <p>\n Populates a Map using the supplied <code>Transformer</code>s to transform the collection\n values into keys and values.\n ',non-directive
'@param column the column index\n ',non-directive
?,non-directive
?,non-directive
?,non-directive
'<h2>Package Specification</h2>\n\n<ul>\n  ',non-directive
'@throws IllegalArgumentException if the closure is null\n ',non-directive
'document\n ',non-directive
'@return the composite for the note\n',non-directive
'@see org.apache.commons.collections.functors.ChainedClosure\n \n ',non-directive
'\nProvides JFace support for long-running operations.\n',non-directive
?,non-directive
'<p>\n  ',non-directive
' Initializes this field editor with the default preference value\n from the preference store.\n',non-directive
'</p>\n\n ',non-directive
' Property name constant (value <code>\"field_editor_is_valid\"</code>)\n to signal a change in the validity of the value of this field editor.\n',non-directive
?,non-directive
?,non-directive
'@param layoutData\n            the layoutData for the message area composite.\n ',non-directive
' Sets the title bar color for this dialog.\n \n @param color\n            the title bar color\n',non-directive
' Save a dialog settings to a file.\n \n',non-directive
' Creates a new dialog page with the given title and image.\n \n @param title\n            the title of this dialog page, or <code>null</code> if none\n @param image\n            the image for this dialog page, or <code>null</code> if none\n',non-directive
?,non-directive
' Gets a double from a Map in a null-safe manner.\n ',non-directive
'@return <code>true</code> if the next page could be displayed,\n   and <code>false</code> otherwise\n',non-directive
' Specifies whether status line appears to the left of the buttons\n (default) or above them.\n \n @param aboveButtons\n            if <code>true</code> status line is placed above buttons; if\n            <code>false</code> to the right\n',non-directive
'@return  a singleton list iterator over the object\n',non-directive
'@since Commons Collections 5\n @TODO fix version\n',non-directive
'@return <code>true</code> if help is available,\n   and <code>false</code> if this wizard is helpless\n',non-directive
' Converts the given value into an int.\n Returns the given default value if the \n value does not represent an int.\n\n @param value the value to be converted\n @param dflt the default value\n @return the value as an int, or the default value\n',non-directive
?,non-directive
'@see org.eclipse.jface.wizard.IWizardContainer2\n',non-directive
?,non-directive
?,non-directive
'<li>justify(false)</li>\n ',non-directive
'</p>\n<p>\nThe binding manager also manages schemes.  ',non-directive
'@param key  the key of the value to look up in that map\n  ',non-directive
?,non-directive
?,non-directive
'@param name the name of the preference\n ',non-directive
'</p>\n\n ',non-directive
'@param name the name of the preference\n ',non-directive
'This includes classes that implement an easily configurable,\nfine-grained access control security architecture.\n',non-directive
'@return the image descriptor\n',non-directive
' Moves the progress indicator by the given amount of work units\n ',non-directive
' Removes the subnode of this preference node with the given node id.\n\n ',non-directive
'@link #multiValueMap( Map, Class )}\n  ',non-directive
' Style constant (value <code>1</code>) indicating a layout where the field\n editor\'s label appears on the left with a check box on the right.\n',non-directive
' Create a new section in the receiver and return it.\n \n',non-directive
'@since 3.3\n',non-directive
' Converts the given value into an SWT point.\n Returns the given default value if the \n value does not represent a point.\n\n @param value the value to be converted\n @param dflt the default value\n @return the value as a point, or the default value\n',non-directive
'@param name the name of the preference\n ',non-directive
'All methods\nthat accept timeout parameters treat values less than or equal to\nzero to mean not to wait at all.  ',non-directive
'<li>CompositeSet - a set that combines multiple sets into one\n</ul>\n',non-directive
' Creates a new radio group field editor \n',non-directive
' Image registry key for info image (value <code>\"dialog_info_image\"</code>).\n \n @deprecated use\n             org.eclipse.swt.widgets.Display.getSystemImage(SWT.ICON_INFORMATION)\n',non-directive
?,non-directive
?,non-directive
' Creates a new event for the given source, selected (current) page and\n direction.\n \n @param source\n            the page changing provider (the source of this event)\n @param currentPage\n            the current page. In the JFace provided dialogs this will be\n            an <code>IDialogPage</code>.\n @param targetPage\n            the target page. In the JFace provided dialogs this will be an\n            <code>IDialogPage</code>.\n',non-directive
?,non-directive
' Sets the indent used for the first column of the radion button matrix.\n\n ',non-directive
'@since 3.4\n',non-directive
' Find the first valid fontData in the provided list. \n ',non-directive
'@return this\n ',non-directive
?,non-directive
'The primitives will be wrapped in the appropriate wrapper class.\n\n ',non-directive
' Constructs an image descriptor.\n',non-directive
' Generates layout data to the given control, given the number of cells\n spanned by the control. Attaches a GridData to the control. This method \n allows generated layout data to be used with controls that span multiple cells. \n <p>\n The generated layout data is the same as what would be generated by \n GridLayoutFactory.generateLayout, except that the span is configurable\n </p>  \n \n @see GridLayoutFactory#generateLayout(org.eclipse.swt.widgets.Composite)\n @param theControl\n @param hSpan number of columns spanned by the control\n @param vSpan number of rows spanned by the control\n @since 3.3\n',non-directive
'@param gc the {',non-directive
'@throws NullPointerException if iterator parameter is null\n ',non-directive
' Show the receiver as showing an error.\n ',non-directive
' Constructs a new ControlAnimator instance and passes along the\n control that will be displayed or hidden.\n \n @param control the control that will be displayed or hidden.\n',non-directive
'<li>spacing(LayoutConstants.getSpacing())</li>\n ',non-directive
' Convenience method to open a standard warning dialog.\n \n',non-directive
?,non-directive
'@return the return code\n\n ',non-directive
'@link IterableSortedMap}.\n ',non-directive
'@link BrowserInformationControl}.\n\n ',non-directive
'@throws NullPointerException if iterator parameter is null\n',non-directive
'<p> The {',non-directive
' Returns the descriptor for JFace\'s standard font. Convenience method\n equivalent to\n \n <pre>\n JFaceResources.getFontRegistry().getDescriptor(JFaceResources.DEFAULT_FONT)\n </pre>\n \n @return the font\n @since 3.3\n',non-directive
' Set whether or not the controls in the field editor\n are enabled.\n ',non-directive
'@return this\n',non-directive
?,non-directive
' Creates a factory that creates copies of the given layout.\n \n',non-directive
?,non-directive
?,non-directive
?,non-directive
'@see #setPageSize(Point)\n',non-directive
'The viewer framework is an\nindependent JFace module. ',non-directive
' Sets the spacing for layouts created with this factory. ',non-directive
' Create a new instance of the receiver.\n ',non-directive
' Layout constant (value <code>0</code>) indicating that\n each field editor is handled as a single component.\n',non-directive
'\nProvides support for managing resources such as SWT\nfonts and images.\n',non-directive
?,non-directive
' Returns the selection provider.\n\n @return the selection provider\n',non-directive
?,non-directive
'@return a normalized version of <code>color</code>\n ',non-directive
'@author Janek Bogucki\n ',non-directive
?,non-directive
'<h2>Related Documentation</h2>\n\nFor overviews, tutorials, examples, guides, and tool documentation, please see:\n<ul>\n  ',non-directive
'@linkplain org.eclipse.jface.contentassist.IContentAssistSubjectControl content assist subject control}.\n\n ',non-directive
'@param name the name of the preference this field editor works on\n ',non-directive
?,non-directive
'\n<p>The \"split map\" concept is that of an object that implements\nthe {@link org.apache.commons.collections.Put Put} and\n{@link org.apache.commons.collections.Get Get} interfaces,\nwith <i>differing</i> generic types. This is like a pre-generics\n{@link java.util.Map Map} whose input key/value constraints are\ndifferent than its output key/value constraints.  While it would\nbe possible to declare a \"split map\" with matching input/output\nkey/value constraints, this would be a {@link java.util.Map Map}\nand would therefore make little sense (any Commons Collections\n{@link java.util.Map Map} implementation will also implement\n{@link org.apache.commons.collections.Put Put} and\n{@link org.apache.commons.collections.Get Get} with matching\ngeneric parameters).\n\n<p>\nThe following decorators are provided:\n<ul>\n<li>Transformed - transforms each element added\n</ul>\n</pre>\n',non-directive
'@param inputChangeListener the listener to remove\n ',non-directive
?,non-directive
'@param cancelable\n            <code>true</code> if the end user can cancel this progress\n            dialog, and <code>false</code> if it cannot be canceled\n',non-directive
'@since 3.4\n',non-directive
'<li><a href=\"../../../../technotes/guides/jar/jar.html\">\n      Manifest and Signature Specification</a> - The manifest format specification.\n',non-directive
'@param previouslyCreatedFont previously allocated font\n',non-directive
'@return the float-valued preference\n',non-directive
' Creates a copy of the reciever.\n \n',non-directive
'<p>\n The byte is obtained from the results of {',non-directive
'@see #create\n ',non-directive
'An {',non-directive
' Gets a new Properties object initialised with the values from a Map.\n ',non-directive
?,non-directive
'@param control control whose layout data will be initialized\n',non-directive
'@since 3.3\n',non-directive
?,non-directive
' Creates a directory field editor.\n \n',non-directive
' Adds the given field editor to this page.\n\n @param editor the field editor\n',non-directive
?,non-directive
'@return the default value of the named preference\n',non-directive
'</p>\n\n ',non-directive
'@link javax.management.openmbean.OpenType open types} and\nthis allows interoperation across versions.\n\n',non-directive
'@return the list\n ',non-directive
'@param numColumns the number of columns\n',non-directive
?,non-directive
'@see IProgressMonitor#isCanceled()\n',non-directive
'Values other than <code>true</code> are considered <code>false</code>.\n                        ',non-directive
'@link java.util.Map Map},\n{',non-directive
' Sets or clears the message for this page.\n <p>\n This is a shortcut for <code>setMessage(newMesasge, NONE)</code>\n </p>\n \n @param newMessage\n            the message, or <code>null</code> to clear the message\n',non-directive
?,non-directive
'When the\nweak references to a weakly-reachable object are cleared, the object becomes\neligible for finalization.\n\n',non-directive
' Returns the default value for the point-valued preference\n with the given name in the given preference store.\n Returns the default-default value (<code>POINT_DEFAULT_DEFAULT</code>) \n is no default preference with the given name, or if the default \n value cannot be treated as a point.\n\n @param store the preference store\n @param name the name of the preference\n @return the default value of the preference\n',non-directive
'</p>\n',non-directive
' Creates a new object and saves in it the current enable/disable state of\n the given control and its descendents; the controls that are saved are\n also disabled.\n \n @param w\n            the control\n',non-directive
' Generates layout data to the given control, given the number of cells\n spanned by the control. Attaches GridData to the control. This method \n allows generated layout data to be used with controls that span multiple cells. \n <p>\n The generated layout data is the same as what would be generated by \n GridLayoutFactory.generateLayout, except that the span is configurable\n </p>  \n \n @see GridLayoutFactory#generateLayout(org.eclipse.swt.widgets.Composite)\n @param theControl\n @param span The x coordinate indicates the number of\n columns spanned, and the y coordinate indicates the number of rows.\n @since 3.3\n',non-directive
'@param color\n            the title bar color\n',non-directive
?,non-directive
' Gets a button in this dialog\'s button bar.\n \n',non-directive
'@since 3.0\n',non-directive
' @param input the delayed input, or <code>null</code> to request cancellation\n',non-directive
'<p>\n The int is obtained from the results of {',non-directive
?,non-directive
?,non-directive
'@since 2.0\n',non-directive
'@param key  the key to look up\n ',non-directive
'\n\nThe classes and interfaces in this package have been\nsuperseded by classes in the java.security package.\n',non-directive
'</p>\n\n ',non-directive
?,non-directive
'<P>\n<h3><code>java.sql</code> and <code>javax.sql</code> Features Introduced in the JDBC 4.0 API</h3>\n<UL>\n  ',non-directive
?,non-directive
' Get the color selector used by the receiver.\n \n @return ColorSelector/\n',non-directive
' Update the image being displayed on the button using the current color\n setting.\n',non-directive
' Returns <code>true</code> if the passed range has the same offset and length as the receiver.\n\n ',non-directive
' Creates a new context information validator which is ready to be installed on\n a particular context information.\n\n @param processor the processor to be used for validation\n',non-directive
'The OK button is enabled or disabled depending on the\n status.\n \n',non-directive
' The string representation used for <code>false</code> (<code>\"false\"</code>).\n',non-directive
'@linkplain org.eclipse.jface.contentassist.IContentAssistSubjectControl content assist subject control}.\n\n ',non-directive
' Sets the hover enrich mode. ',non-directive
'This will be <code>Dialog.OK</code> if the OK\n         button was pressed, or <code>Dialog.CANCEL</code> if this\n         dialog\'s close window decoration or the ESC key was used.\n',non-directive
'<li><a href=\"../../../technotes/guides/collections/reference.html\"><b>\n       Collections Framework Annotated Outline</b></a>\n</ul>\n\n',non-directive
'@param name the name of the preference this field editor works on\n ',non-directive
' Restores the window enable state saved in this object.\n',non-directive
'Each\n page is represented by a node in the tree shown on the left hand side of the\n dialog; when a node is selected, the corresponding page is shown on the right\n hand side.\n',non-directive
' Creates a new GridLayout and attaches it to the given composite.\n ',non-directive
'@since 3.1 \n\n ',non-directive
' @see org.eclipse.jface.window.Window#close()\n',non-directive
' Shell style appropriate for a resizable info popup that can get focus.\n',non-directive
'@return the list of fonts that have been found on this system\n ',non-directive
?,non-directive
?,non-directive
'@return this\n',non-directive
'  Looks up the given key in the given map, converting the result into\n  a float, using the default value if the the conversion fails.\n\n  @param map  the map whose value to look up\n  @param key  the key of the value to look up in that map\n  @param defaultValue  what to return if the value is null or if the\n     conversion fails\n  @return  the value in the map as a number, or defaultValue if the\n    original value is null, the map is null or the number conversion\n    fails\n',non-directive
'@param message\n            the dialog message\n ',non-directive
'@see Display#getSystemColor(int)\n',non-directive
'\n\nThis package allows applications to store and retrieve user and system\npreference and configuration data. ',non-directive
'the control that will be displayed or hidden ',non-directive
'A completion can also\nbe a incomplete in itself and content assist provides means to deal with\nnested completions.\n',non-directive
'@param map  the map to use\n ',non-directive
' Helper class to save the enable/disable state of a control including all its\n descendent controls.\n',non-directive
?,non-directive
'@see #open(int, Shell, String, String, int)\n ',non-directive
'@param takeFocus <code>true</code> iff the replacing information control should take focus\n',non-directive
'@param map  the map to use\n ',non-directive
' A field editor for a directory path type preference. ',non-directive
?,non-directive
?,non-directive
'@link #getNumber(Map,Object)}.\n\n ',non-directive
?,non-directive
'<LI>Batch updates\n  ',non-directive
'These include factories that return a constant,\n a copy of a prototype or a new instance.\n\n ',non-directive
'@return the double-valued preference\n',non-directive
?,non-directive
'This means your main application\nor applet can be written to be language-independent, and it can rely upon\nseparate, dynamically-linked localized resources. ',non-directive
?,non-directive
' Returns the progress monitor for this wizard dialog (if it has one).\n \n',non-directive
' Tests whether a verify key listener can be added either using <code>prependVerifyKeyListener</code>\n or {',non-directive
?,non-directive
'@param name the name of the preference\n ',non-directive
'@since 3.1\n',non-directive
?,non-directive
?,non-directive
'This package contains three main groups of classes and\ninterfaces:\n<ul>\n',non-directive
'<li><a href=\"\">##### REFER TO NON-SPEC DOCUMENTATION HERE #####</a>\n</ul>\n',non-directive
'This method fails if the value does not represent a float.\n\n ',non-directive
' Returns the font descriptor for the font with the given symbolic\n font name. ',non-directive
'@link SortedMap} as an {',non-directive
'@since 3.2\n',non-directive
?,non-directive
?,non-directive
'@param value the long object\n ',non-directive
'@param missingResource\n ',non-directive
'@see Font#Font(org.eclipse.swt.graphics.Device, java.lang.String, int, int)\n\n ',non-directive
'<h2>Related Documentation</h2>\n\nFor overviews, tutorials, examples, guides, and tool documentation, please see:\n<ul>\n  ',non-directive
' Returns whether this wizard needs a progress monitor.\n ',non-directive
?,non-directive
?,non-directive
'@return the value as a long, or the default value\n',non-directive
?,non-directive
' Return the transparent pixel for the receiver.\n ',non-directive
' Returns the revision hover.\n\n ',non-directive
'Also includes classes for compressing and decompressing\ndata using the DEFLATE compression algorithm, which is used by the\nZIP and GZIP file formats. ',non-directive
'@return an IPreferenceNode array containing the child nodes\n',non-directive
'Paths in the list are separated by one or more spaces.\n                        ',non-directive
'@param height\n            margin height (pixels)\n ',non-directive
?,non-directive
' The minimum height; <code>0</code> pixels by default.\n',non-directive
'<LI><code>Types</code> class -- provides constants for SQL types\n  </UL>\n  ',non-directive
'@return a GridLayoutFactory initialized with defaults that GridLayoutFactory would have \n ',non-directive
'@since 3.4\n',non-directive
?,non-directive
' Moves this range such that the {@link #end()} is at <code>end</code>, keeping\n {@link #length()} constant.\n\n @param end the new end\n @throws LineIndexOutOfBoundsException if <code>end</code> &lt;= {@link #start()}\n',non-directive
'<blockquote><pre>\n   RuntimeMXBean mxbean = ManagementFactory.getRuntimeMXBean();\n\n   // Get the standard attribute \"VmVendor\"\n   String vendor = mxbean.getVmVendor();\n\n</pre>\n</blockquote>\n</li>\n\n',non-directive
'@link #getNumber(Map,Object)}.\n\n ',non-directive
' Converts the given SWT rectangle object to a string.\n ',non-directive
' Cancels a runnable that was previously scheduled with <code>disposeExec</code>.\n Has no effect if the given runnable was not previously registered with\n disposeExec.\n \n @param r runnable to cancel\n',non-directive
?,non-directive
'@see MultiValueMap\n ',non-directive
' Creates a new field editor preference page with the given style,\n an empty title, and no image.\n\n ',non-directive
'<p>\n This method will handle primitive arrays as well as object arrays.\n ',non-directive
'@param estimatedSize  the initial size of the ArrayList\n ',non-directive
'<li>Classes for string collation\n</ul>\n',non-directive
'<LI><code>Struct</code> interface -- mapping for SQL <code>STRUCT</code> \n\t  ',non-directive
'@return the value in the Map as a short, <code>defaultValue</code> if null map input\n',non-directive
?,non-directive
'<h4>Interoperability</h4>\n\nA management application and a platform MBeanServer of a running\nvirtual machine can interoperate \nwithout requiring classes used by the platform MXBean interfaces.\n',non-directive
' A mutator for the key of the preference to be modified by the toggle\n button.\n \n',non-directive
'@param color the color to normalize\n ',non-directive
?,non-directive
?,non-directive
' The label for hide details buttons.\n',non-directive
'<li>\ninstantiating a viewer on some pre-existing SWT widget,</li>\n\n',non-directive
' Shows the given message in the page for this\n field editor if it has one.\n\n ',non-directive
' @param proposal the proposal\n',non-directive
'<!--\n<h2>Package Specification</h2>\n\n##### FILL IN ANY SPECS NEEDED BY JAVA COMPATIBILITY KIT #####\n<ul>\n  ',non-directive
?,non-directive
'@since 3.2\n',non-directive
?,non-directive
' Loads this preference store from the given input stream. ',non-directive
'@link Range} failed because it would\n have resulted in an illegal range. ',non-directive
' Returns the window title string for this wizard.\n\n @return the window title string, or <code>null</code> for no title\n',non-directive
'@param labelText the label text of the field editor\n ',non-directive
'@since 3.4\n',non-directive
' Returns the root node.\n ',non-directive
'@see #MessageDialog(Shell, String, Image, String, int, String[], int)\n',non-directive
'@see #spacing(Point)\n * ',non-directive
' <p>\n Populates a Map using the supplied <code>Transformer</code> to transform the collection\n values into keys, using the unaltered collection value as the value in the <code>Map</code>.\n </p>\n @param map the <code>Map</code> to populate.\n @param collection the <code>Collection</code> to use as input values for the map.\n @param keyTransformer the <code>Transformer</code> used to transform the collection value into a key value\n @throws NullPointerException if the map, collection or transformer are null\n',non-directive
?,non-directive
' Returns a text edit describing the text modification that would be executed if the given\n selection was replaced by <code>replacement</code>.\n \n',non-directive
?,non-directive
'@since 3.1\n',non-directive
' The Back button has been pressed.\n',non-directive
'@return the value as an RGB color value\n ',non-directive
' Crops the given bounds such that they lie completely on the closest monitor.\n\n ',non-directive
'@param changeProvider the information control with delayed input changes\n ',non-directive
?,non-directive
'<LI><code>Ref</code> interface -- mapping for SQL <code>REF</code> \n\t  ',non-directive
?,non-directive
'@param parent\n            the parent composite\n ',non-directive
' Get the layout data for a column\n \n @param tableTree\n            the control\n @param columnIndex\n            the column index\n @return the layout data, might <b>not</b> null\n @since 3.5\n',non-directive
' Sets the default value of the preference with the given name\n in the given preference store.\n\n @param store the preference store\n @param name the name of the preference\n @param value the new default value of the preference\n',non-directive
?,non-directive
'@throws ClassCastException  if the map elements are of the wrong type\n',non-directive
' The <code>WizardSelectionPage</code> implementation of \n this <code>IWizardPage</code> method returns the first page \n of the currently selected wizard if there is one.\n',non-directive
?,non-directive
'@return boolean if the two are the same\n',non-directive
'@see #putValue(IPreferenceStore, String, FontData[])\n',non-directive
' Creates a string field editor of unlimited width.\n Use the method <code>setTextLimit</code> to limit the text.\n \n @param name the name of the preference this field editor works on\n @param labelText the label text of the field editor\n @param parent the parent of the field editor\'s control\n',non-directive
'@param name the name of the preference this field editor works on\n ',non-directive
'<p>\n Given two ordered {',non-directive
' Returns the preference store of this preference page.\n\n @return the preference store , or <code>null</code> if none\n',non-directive
'@since JDK1.1\n',non-directive
' Sets the margins for layouts created with this factory. ',non-directive
' Identifier for the Error Color\n',non-directive
' A default implementation of the {',non-directive
' Creates a boolean field editor in the default style.\n \n',non-directive
' Initialize the field editor with the given preference name and label.\n \n @param name the name of the preference this field editor works on\n @param text the label text of the field editor\n',non-directive
' Identifier for the color used for the foreground of content assist\n popup dialogs.\n \n @since 3.4\n',non-directive
'They serve as a lightweight representation of images in situations where\nno SWT display exists yet, and are used mainly in conjunction with image\nregistries. ',non-directive
'@return this\n',non-directive
' Informs this field editor\'s listener, if it has one, about a change to\n the value (<code>VALUE</code> property) provided that the old and new\n values are different.\n \n @param oldValue\n            the old value\n @param newValue\n            the new value\n',non-directive
' Set whether or not the button is enabled.\n \n',non-directive
'@param layout The SWT grid bag layout used by the part. ',non-directive
'@see org.eclipse.jface.dialogs.ProgressMonitorDialog\n ',non-directive
'@return the readable content as string\n ',non-directive
' <p>\n Initial values are:\n </p>\n \n <ul>\n ',non-directive
?,non-directive
'<LI>Standard mappings for SQL types to classes and interfaces in the \n      Java programming language\n  <UL>\n\t ',non-directive
' Set the widths of the columns.\n \n @param tableTree\n            the control\n \n @param widths\n            the widths of the column\n @since 3.5\n',non-directive
'@param descriptor identifier for the image to dispose\n',non-directive
' Returns the first line contained in this range. Short equivalent of {@link #getStartLine()}.\n\n @return the first line contained in this range\n',non-directive
'It is up to the client to ensure there is enough\nspace allocated to render the control decoration.  ',non-directive
?,non-directive
'</p>\n',non-directive
' Button margin in dialog units (value 4).\n',non-directive
?,non-directive
' Returns the formatted message for the given key in JFace\'s resource\n bundle.\n \n',non-directive
' Sets the annotation model.\n\n @param model the annotation model, possibly <code>null</code>\n @see IVerticalRulerColumn#setModel(IAnnotationModel)\n',non-directive
' Returns the JFace\'s dialog font. ',non-directive
'@param fontData an Array of FontData\n',non-directive
' Tests whether the given information control is replaceable.\n\n @param iControl information control or <code>null</code> if none\n @return <code>true</code> if information control is replaceable, <code>false</code> otherwise\n',non-directive
'@return the value in the Map as a Boolean, <code>defaultValue</code> if null map input\n',non-directive
' Returns the number of lines contained in this range. ',non-directive
' Returns the number of pages in this wizard.\n\n ',non-directive
'@return the completion position\n',non-directive
' Sets the current value of the preference with the given name\n in the given preference store. ',non-directive
' Image registry key for info message image (value\n <code>\"dialog_messasge_warning_image\"</code>).\n \n',non-directive
'<p>\n \n ',non-directive
' Property name constant (value <code>\"field_editor_is_valid\"</code>)\n to signal a change in the validity of the value of this field editor.\n',non-directive
'Friedl, O\'Reilly and Associates, 1997.</a> </p>\n\n<!--\nFor overviews, tutorials, examples, guides, and tool documentation, please see:\n<ul>\n  ',non-directive
'@throws NullPointerException if array is null\n',non-directive
' Creates a local registry that delegates to the given global registry\n for all resource allocation and deallocation. \n \n',non-directive
'@return a new GridData instance\n',non-directive
?,non-directive
' Gets an array based on an iterator.\n <p>\n As the wrapped Iterator is traversed, an ArrayList of its values is\n created. At the end, this is converted to an array.\n\n @param iterator  the iterator to use, not null\n @return an array of the iterator contents\n @throws NullPointerException if iterator parameter is null\n',non-directive
'<p>\n It contains various type safe methods\n as well as other useful features like deep copying.\n ',non-directive
' This method is used to ensure that all style \n bits appropriate for resizable dialogs are added to the \n shell style.  ',non-directive
'@param message  the detail message for this exception\n ',non-directive
?,non-directive
'@since 3.5\n',non-directive
?,non-directive
'@param status\n            the error to show to the user\n ',non-directive
'<p>\nThe following implementations are provided in the package:\n<ul>\n',non-directive
?,non-directive
?,non-directive
'@see IPreferencePage#okToLeave()\n',non-directive
?,non-directive
'<p>\n A nested registry can be used to manage the resources for, say, a dialog\n box.\n ',non-directive
'<li><a href=\"\">##### REFER TO NON-SPEC DOCUMENTATION HERE #####</a>\n</ul>\n',non-directive
' Prints the contents of this preference store to the given print writer.\n \n @param out\n            the print writer\n',non-directive
'@param b\n            <code>true</code> if help is available, and\n            <code>false</code> if this wizard is helpless\n ',non-directive
?,non-directive
?,non-directive
'\nProvides a revision model and a protocol to display revision information in a vertical ruler column.\n<h2>Package Specification</h2>\n<tt>IRevisionRulerColumn</tt> is the protocol that a team provider can use to display line based revision control information to a document.\n<tt>RevisionInformation</tt> defines the revision model, which contains a list of <tt>Revision</tt>s, which in turn contain <tt>RevisionRange</tt>s.\n',non-directive
' Sets the default value of the preference with the given name\n in the given preference store. ',non-directive
'@since 3.4\n',non-directive
?,non-directive
'The dialog has a\n standard title and no image. ',non-directive
'@throws IllegalArgumentException if the map is empty\n ',non-directive
'@param thread The new thread\n',non-directive
' The default-default value for <code>FontData</code> preferences.\n',non-directive
' Persist the last location of the dialog.\n @since 3.2\n',non-directive
'<li>exclude(false)</li>\n ',non-directive
'@see org.eclipse.jface.wizard.IWizardContainer\n ',non-directive
' A field editor for an integer type preference.\n',non-directive
?,non-directive
?,non-directive
'@param minX minimum a value of 1 or more is a horizontal size of the control (pixels). \n        ',non-directive
' Returns the symbolic font name used by this field editor.\n\n @return the symbolic font name\n',non-directive
'Is the ability to retransform classes\n                        needed by this agent.\n                        ',non-directive
' Returns the revision that this region belongs to.\n\n ',non-directive
'@since Commons Collections 3.0\n ',non-directive
?,non-directive
'@param name the name of the preference\n',non-directive
'@see #fillDefaults\n',non-directive
'<h2>\nPackage Specification</h2>\nA viewer is a model-based adapter on an SWT widget.&nbsp; Each viewer has\nfour parts:\n<blockquote>\n',non-directive
?,non-directive
?,non-directive
'<h2>Related Documentation</h2>\n\n<ul>\n  ',non-directive
' @see Reader#read()\n',non-directive
'At the end, the list is returned.\n\n ',non-directive
'<li>Lazy - creates objects in the map on demand\n',non-directive
' Sets this text field\'s text limit.\n\n @param limit the limit on the number of character in the text\n  input field, or <code>UNLIMITED</code> for no limit\n\n',non-directive
'@param store the preference store\n ',non-directive
'@version  1.2, 04/02/10\n',non-directive
' Returns a copy of the original FontData\n \n ',non-directive
' Wrap specifies whether a control will be wrapped to the next row if there\n is insufficient space on the current row.\n \n @param wrap\n            the wrap status\n @return this\n',non-directive
' Returns the top level control for this dialog page.\n \n @return the top level control\n',non-directive
' Create a new object.\n\n @return a new object\n @throws FunctorException (runtime) if the factory cannot create an object\n',non-directive
?,non-directive
' Return the List.\n \n',non-directive
'@return the list of words\n ',non-directive
'If a location has been stored, it is returned.\n \n',non-directive
' Creates a dialog instance. ',non-directive
'@throws IndexOutOfBoundsException if start is less than zero or greater\n  than the length of the array\n ',non-directive
?,non-directive
'@param blockedName The name of the locked operation.\n',non-directive
'@see org.eclipse.jface.window.Window#close()\n',non-directive
'The {',non-directive
'<li>numColumns(1)</li>\n ',non-directive
' Get the IDialogBlockedHandler to be used by WizardDialogs and\n ModalContexts.\n \n',non-directive
'<p>At the most abstract level, the protocol is given by 3 interfaces:\n<ul>\n',non-directive
' Returns the value that will be used for Scale.setPageIncrement(int).\n \n @return the value.\n @see org.eclipse.swt.widgets.Scale#setPageIncrement(int)\n',non-directive
' Returns the subnode of this contribution node with the given node id.\n\n @param id the preference node id\n @return the subnode, or <code>null</code> if none\n',non-directive
'<LI><code>Clob</code> interface -- mapping for SQL <code>CLOB</code>\n\t ',non-directive
'@since 3.0\n ',non-directive
?,non-directive
' Clear the error message. ',non-directive
' @see org.eclipse.jface.dialogs.IPageChangeProvider#getSelectedPage()\n \n @since 3.1\n',non-directive
' Creates the wizard\'s title area.\n \n @param parent\n            the SWT parent for the title area composite.\n @return the created title area composite.\n',non-directive
' Returns the first line after this range. ',non-directive
'@author Neil O\'Toole\n',non-directive
' Sets the current page.\n ',non-directive
' Sets the visibility of this dialog page.\n\n ',non-directive
'@link java.util.Map Map} implementation will also implement\n{',non-directive
'</p>\n \n ',non-directive
?,non-directive
'@return a list of corresponding string values\n',non-directive
?,non-directive
?,non-directive
' Sets the context information popup\'s background color.\n\n ',non-directive
' Sets the background color.\n\n @param background the background color, <code>null</code> for the platform\'s list\n        background\n',non-directive
' Message type constant used to display an info icon with the message.\n \n @since 2.0\n @deprecated\n',non-directive
'@link #length()} constant.\n\n ',non-directive
' Convenience API. ',non-directive
'@param targetPage\n            the target page. ',non-directive
'@param brightness the requested brightness, in [0,&nbsp;1]\n ',non-directive
'-->\n\n',non-directive
?,non-directive
?,non-directive
'\n<p>\nThis package contains implementations of collection and map related key/value classes.\n',non-directive
' A mutator for the text on the toggle button. ',non-directive
' Clears the error message from the message line.\n',non-directive
' Creates an integer field editor.\n \n',non-directive
'Convert the value of the given key in this dialog\n settings to a double and return it.\n \n',non-directive
'@param defaultValue  what to return if the value is null\n  ',non-directive
' A field editor for a font type preference.\n',non-directive
?,non-directive
?,non-directive
'@since 3.1\n\n ',non-directive
' The margin width; <code>5</code> pixels by default.\n',non-directive
'@param value\n            the value to be associated with the <code>key</code>\n',non-directive
' Returns this dialog page\'s description text.\n\n @return the description text for this dialog page, \n  or <code>null</code> if none\n',non-directive
?,non-directive
'To do this, the field manages the creation of the \nfield\'s control, using a specialized layout to ensure there is adequate space \nreserved for decorations around the control. ',non-directive
' Tells whether the replacer is currently replacing another information control.\n\n @return <code>true</code> while code from {@link #replaceInformationControl(IInformationControlCreator, Rectangle, Object, Rectangle, boolean)} is run\n',non-directive
'@return a deep copy of the original array\n ',non-directive
'@param listener the location listener\n ',non-directive
'@link SWT#COLOR_RED red}, {',non-directive
'@return the change button\n',non-directive
' Creates a new list field editor \n',non-directive
' Sets the document partitioning this content assistant is using.\n\n ',non-directive
?,non-directive
?,non-directive
?,non-directive
'@param s the detail message.\n',non-directive
'@see org.eclipse.jface.wizard.WizardDialog\n',non-directive
'@param separatorChar\n',non-directive
'<P>\nThe agent class will be loaded by the system class loader\n(see {',non-directive
'@return the initial size of the shell\n \n ',non-directive
' Load a dialog settings from a stream and fill the receiver with its\n content.\n \n @param reader\n            a Reader specifying the stream where the settings are read\n            from.\n @throws IOException\n',non-directive
' Sets this text field\'s text limit.\n\n ',non-directive
' IteratorUtils is not normally instantiated.\n',non-directive
'@param map  the map whose value to look up\n  ',non-directive
'</p>\n',non-directive
'@return this\n',non-directive
'A proxy is typically constructed to remotely access\n         an MXBean of another running virtual machine.</li>\n    </ol>',non-directive
'<p>\n An error message should describe some error state,\n as opposed to a message which may simply provide instruction\n or information to the user.\n ',non-directive
' The minimum width; <code>0</code> pixels by default.\n',non-directive
?,non-directive
'@param descriptor identifier for the resource\n',non-directive
' Gets a list iterator over an object array.\n\n ',non-directive
'@see IProgressMonitor#worked(int)\n',non-directive
'@param dlus\n            the number of horizontal dialog units\n ',non-directive
'@param newTitleImage\n            the title image to be shown\n',non-directive
'@return the default value of the preference\n',non-directive
' Sets the length of this range, keeping {',non-directive
'@param currentPage\n \n ',non-directive
?,non-directive
?,non-directive
'@return the font\n ',non-directive
' Abstract base class for various JFace registries.\n \n @since 3.0\n',non-directive
' Returns <code>true</code> if the text covered by <code>selection</code> does not contain any\n characters. ',non-directive
?,non-directive
?,non-directive
' Get the number of columns for the receiver.\n \n',non-directive
'@return the preference mananger\n',non-directive
' Creates a new preference manager.\n',non-directive
'@link ILineRange}s of this change region for which the revision\n information is still valid.\n\n ',non-directive
'\n\nProvides a class and two interfaces for the RMI registry.\n',non-directive
'@see #setValidateStrategy\n',non-directive
'@param newValue the new value\n',non-directive
'@param name the name of the preference\n ',non-directive
' Initializes this field editor with the default preference value\n from the preference store.\n',non-directive
' Returns the default dialog spacing, in pixels\n \n ',non-directive
'@link java.lang.management.MemoryPoolMXBean}</tt> </td>\n<td> Memory pool in the Java virtual machine.</td>\n</tr>\n</table>\n</blockquote>\n\n<p>\nA platform MXBean is a <i>managed bean</i> that defines the management\ninterface for one component for the platform and is specified in the\n<a href=\"ManagementFactory.html#MXBean\">\nManagementFactory</a> class.\n\n',non-directive
'@param value the value to be converted\n ',non-directive
'@param name the name of the preference this field editor works on\n ',non-directive
'@link SWT#COLOR_BLUE blue},\n {',non-directive
?,non-directive
'\nProvides support for shared UI resources such as menus,\ntool bars, and status lines.\n',non-directive
' Notification that a thread change is occurring.\n \n',non-directive
'@link java.lang.management.ManagementFactory ManagementFactory} class.\n\n',non-directive
'@param node the node to add\n',non-directive
?,non-directive
'</li>\n</ul>\n\n',non-directive
?,non-directive
'@return the value in the Map as a double, <code>0.0</code> if null map input\n',non-directive
?,non-directive
' The default-default value for int preferences (<code>0</code>).\n',non-directive
'@param control\n            the control the string will be displayed on\n ',non-directive
?,non-directive
'</p>\n<p>\nAll the real work in this package is carried out by the\n<code>BindingManager</code>, and most work with bindings can be carried out\ndirectly with it.  ',non-directive
' Enables the content assistant\'s auto activation mode.\n\n @param enabled indicates whether auto activation is enabled or not\n',non-directive
' Sets the wizard page that would typically be shown \n if the user was to press the Back button.\n ',non-directive
' @see org.eclipse.jface.dialogs.Dialog#buttonPressed(int)\n',non-directive
'The utility class <tt>ModalContext</tt> defines the basic mechanism and\nUI event loop for modal operations.\n',non-directive
' Returns the descriptor for JFace\'s dialog font. Convenience method\n equivalent to\n \n <pre>\n JFaceResources.getFontRegistry().getDescriptor(JFaceResources.DIALOG_FONT)\n </pre>\n \n @return the font\n @since 3.3\n',non-directive
'@return the font data of the like describe above\n \n ',non-directive
'<li>Unmodifiable - ensures the collection cannot be altered</li>\n',non-directive
' Gets a String from a Map in a null-safe manner.\n <p>\n The String is obtained via <code>toString</code>.\n\n @param map  the map to use\n @param key  the key to look up\n @return the value in the Map as a String, <code>null</code> if null map input\n',non-directive
'@return the progress monitor\n',non-directive
'It allows both local and remote \nmonitoring and management of the running Java virtual machine.  \n\n',non-directive
' Constant for a simple dialog with the question image and Yes/No/Cancel buttons (value 6).\n \n @see #open(int, Shell, String, String, int)\n @since 3.5\n',non-directive
' Gets an empty ordered iterator.\n ',non-directive
'The central goal of the logging APIs is to support maintaining and servicing\nsoftware at customer sites. \n\n',non-directive
'@return a new GridLayout\n',non-directive
'@see IPageChangingListener\n ',non-directive
'@param fonts the fonts to check\n ',non-directive
'@return the nesting depth of running operations\n ',non-directive
' Processes {@link ITextSelection}s.\n \n @since 3.5\n',non-directive
'@param title the title of this preference page\n ',non-directive
' Converts a font data object to a string representation for display. \n \tThe string representation is\n \"font name-style-height\" (for example \"Times New Roman-bold-36\").\n @param value The font data.\n @return The string representation of the font data object.\n @deprecated use asString(FontData)\n',non-directive
'  Looks up the given key in the given map, converting the result into\n  a string, using the default value if the the conversion fails.\n\n  @param map  the map whose value to look up\n  @param key  the key of the value to look up in that map\n  @param defaultValue  what to return if the value is null or if the\n     conversion fails\n  @return  the value in the map as a string, or defaultValue if the\n    original value is null, the map is null or the string conversion\n    fails\n',non-directive
'When there are no more references to the\nremote object on the client, or if the reference\'s ``lease\'\' expires and\nnot renewed, the server garbage-collects the remote object.\n\n',non-directive
' Sets or clears the currently selected wizard node within this page. \n \n',non-directive
'@since Commons Collections 3.2\n',non-directive
?,non-directive
'If the value is a <code>Number</code> an integer zero value returns\n <code>false</code> and non-zero returns <code>true</code>.\n ',non-directive
'@see #setMinimumPageSize(int,int)\n',non-directive
'All attributes of the GridData instance\n will be initialized by the factory.\n \n',non-directive
' Returns JFace\'s standard font. Convenience method equivalent to\n \n <pre>\n JFaceResources.getFontRegistry().get(JFaceResources.DEFAULT_FONT)\n </pre>\n \n @return the font\n',non-directive
?,non-directive
'It manages reference-counted instances of resources\n such as Fonts, Images, and Colors, and allows them to be accessed using descriptors.\n ',non-directive
'@return the default dialog spacing, in pixels\n',non-directive
' Set the current color value and update the control.\n \n',non-directive
?,non-directive
?,non-directive
'@see PopupDialog#getDialogSettings()\n \n ',non-directive
' Creates and returns a new image descriptor for the given image. ',non-directive
'@param parent the parent composite\n ',non-directive
' Returns the number of pixels corresponding to the width of the given\n number of characters.\n \n',non-directive
?,non-directive
' Converts a font data object to a string. ',non-directive
?,non-directive
' Creates a scale field editor with particular scale values.\n \n @param name\n            the name of the preference this field editor works on\n @param labelText\n            the label text of the field editor\n @param parent\n            the parent of the field editor\'s control\n @param min\n            the value used for Scale.setMinimum(int).\n @param max\n            the value used for Scale.setMaximum(int).\n @param increment\n            the value used for Scale.setIncrement(int).\n @param pageIncrement\n            the value used for Scale.setPageIncrement(int).\n',non-directive
' Message label is the label the message is shown on.\n',non-directive
'@throws BadLocationException if accessing the document failed\n',non-directive
'@param hunk the diff hunk to adjust to\n',non-directive
'@param fontData the array of FontData objects\n ',non-directive
'@since 3.0\n ',non-directive
'@link java.lang.management.ClassLoadingMXBean}</tt> </td>\n<td> Class loading system of the Java virtual machine.</td>\n</tr>\n<tr>\n<td> <tt>{',non-directive
'@since 3.1\n',non-directive
?,non-directive
'@throws NullPointerException if array is null\n',non-directive
' <p><code>IWizardContainer2</code> is a supplement to \n <code>IWizardContainer</code> that adds a method for updating the size of \n the wizard shell based on the contents of the current page.</p>\n \n <p>The class <code>WizardDialog</code> provides a fully functional \n implementation of this interface which will meet the needs of\n most clients. However, clients are also free to implement this \n interface if <code>WizardDialog</code> does not suit their needs.\n </p>\n \n @see org.eclipse.jface.wizard.IWizardContainer\n @since 3.0\n',non-directive
' Creates a new abstract preference page with the given title and image.\n\n ',non-directive
'@since JDK1.1\n',non-directive
'@param name\n            the name of the new section\n ',non-directive
' Gets a Number from a Map in a null-safe manner.\n <p>\n If the value is a <code>Number</code> it is returned directly.\n If the value is a <code>String</code> it is converted using\n {@link NumberFormat#parse(String)} on the system default formatter\n returning <code>null</code> if the conversion fails.\n Otherwise, <code>null</code> is returned.\n\n @param map  the map to use\n @param key  the key to look up\n @return the value in the Map as a Number, <code>null</code> if null map input\n',non-directive
' Checks to see if there is a previous entry that can be iterated to.\n\n @return <code>true</code> if the iterator has a previous element\n',non-directive
' Find the first valid fontData in the provided list. \n If none are valid return the first one regardless.\n If the list is empty return <code>null</code>.\n \n @param fonts list of fonts\n @param display the display\n @return font data like described above\n @deprecated use filterData in order to preserve \n multiple entry fonts on Motif\n',non-directive
'@param out\n            the print stream\n',non-directive
' Constant for an error message (value 3).\n',non-directive
' Constant for a warning message (value 2).\n',non-directive
' Image registry key for warning image (value\n <code>\"dialog_warning_image\"</code>).\n \n',non-directive
?,non-directive
' Sets the image for this dialog.\n \n @param image\n            the image.\n',non-directive
'@return the value.\n ',non-directive
' Returns the current value of the integer-valued preference with the\n given name.\n ',non-directive
' Public field that dictates if the page change will successfully change.\n \n',non-directive
?,non-directive
'@param message  the detail message for this exception\n',non-directive
'<li>Map Entry - various map entry implementations\n',non-directive
'@link java.util.Collection Collection} interface.\n',non-directive
' Converts the given value into an int.\n This method fails if the value does not represent an int.\n\n @param value the value to be converted\n @return the value as an int\n @exception DataFormatException if the given value does not represent\n\tan int\n',non-directive
'</p>\n',non-directive
'@return the width in chars required to display information\n ',non-directive
'\n<p>\nThis package contains implementations of the\n{',non-directive
'@return the name\n',non-directive
' Returns the color descriptor associated with the given symbolic color\n name. ',non-directive
'@author James Strachan\n ',non-directive
'@return the ok button\n',non-directive
?,non-directive
'@return the default value of the named preference\n',non-directive
'@param subjectArea the subject area\n ',non-directive
'@since 3.1\n',non-directive
'@param sectionName the name of the section in the settings.\n',non-directive
'@return <code>true</code> if <code>selection</code> extends to two or more lines,\n         <code>false</code> otherwise\n ',non-directive
?,non-directive
' Converts the given value into an SWT rectangle.\n ',non-directive
'@param hover the hover\n',non-directive
'@param value the value to be converted\n ',non-directive
'@since 3.1\n',non-directive
' Constant for an info message (value 1).\n',non-directive
?,non-directive
'@param hint size (pixels) to be used instead of the control\'s preferred size. ',non-directive
?,non-directive
' Creates a RowLayoutFactory that creates RowLayouts with the default SWT\n values.\n \n',non-directive
' (non-Javadoc)\n \n @see org.eclipse.jface.window.Window#getInitialLocation(org.eclipse.swt.graphics.Point)\n',non-directive
' Creates a new string button field editor \n',non-directive
'<li>margins(0,0)</li>\n ',non-directive
' The Help button has been pressed.\n',non-directive
'@return the default value of the preference\n',non-directive
'</p>\n ',non-directive
' Saves the non-default-valued preferences known to this preference store\n to the file from which they were originally loaded.\n \n @exception java.io.IOException\n                if there is a problem saving this store\n',non-directive
' Adds a listener for page changes in this page change provider. ',non-directive
'@param array  the array over which to iterate\n ',non-directive
?,non-directive
' The label for next buttons.\n',non-directive
'@param map  the map to use\n ',non-directive
'<li><a href=\"\">##### REFER TO ANY FRAMEMAKER SPECIFICATION HERE #####</a>\n</ul>\n\n',non-directive
' Key used to restore the layout data in the columns data-slot\n ',non-directive
'@since 3.5\n',non-directive
'@link MapIterator}. ',non-directive
?,non-directive
'@param w\n            the control\n',non-directive
'</p>\n\n ',non-directive
' Creates an instance of a status dialog.\n \n @param parent\n            the parent Shell of the dialog\n',non-directive
'@param vSpacing vertical spacing (pixels)\n ',non-directive
'@param value the new default value for the preference\n',non-directive
'The ordering is that of the iterator() method on the entryset \n collection of the map.\n \n',non-directive
' <p>\n Initial values are:\n </p>\n \n <ul>\n ',non-directive
?,non-directive
?,non-directive
' The label for ignore buttons.\n',non-directive
' The label for proceed buttons.\n',non-directive
'@since JDK1.1\n',non-directive
'@param key the key\n ',non-directive
' Returns the preference store.\n\n ',non-directive
?,non-directive
' Returns whether or not context help is available for this dialog. ',non-directive
' Button id for a \"No\" button (value 3).\n',non-directive
'@see #setValidateStrategy\n',non-directive
'A path takes the syntax of the path component of a\n                        hierarchical URI. ',non-directive
'</p>\n\n ',non-directive
' Button width in dialog units (value 61).\n',non-directive
?,non-directive
'@link\njava.lang.ref.ReferenceQueue#poll ReferenceQueue.poll}</code> method simply\nchecks an internal data structure, this check will add little overhead to the\nhashtable access methods.\n\n\n',non-directive
' Creates a new {@link AbstractControlContentAssistSubjectAdapter}.\n',non-directive
'@param value the value to be converted\n ',non-directive
'@return <code>false</code> to abort page flipping and the\n  have the current page remain visible, and <code>true</code>\n  to allow the page flip\n',non-directive
'<h4>Platform MXBeans</h4>\n\nThis package defines the management interface of the following\ncomponents:\n\n<blockquote>\n<table cellspacing=1 summary=\"Description of the MBeans\">\n<tr>\n<th><p align=\"left\">Management Interface</p></th>\n<th><p align=\"left\">Description</p></th>\n</tr>\n<tr>\n<td> <tt>{',non-directive
' Return the currently displayed color.\n \n',non-directive
'<P>\n<h3><code>javax.sql</code> Features Introduced in the JDBC 2.0 Optional\nPackage API</h3>\n<UL>\n  ',non-directive
' Crops the given bounds such that they lie completely on the closest monitor.\n\n @param bounds shell bounds to crop\n',non-directive
'Normally, it is used as a shorthand for writing\n \"new RowLayout()\" and initializing a bunch of fields. ',non-directive
' Creates a copy of the receiver.\n \n',non-directive
'@return IPreferencePage\n ',non-directive
?,non-directive
'<li>Go through the \n        {',non-directive
'@since 3.1\n\n ',non-directive
' Returns a copy of the given GridData \n \n ',non-directive
'@param message\n            the message\n ',non-directive
?,non-directive
'@return this\n',non-directive
?,non-directive
'If a <code>premain</code> method throws an uncaught exception, the JVM will abort.\n\n\n\n',non-directive
'</p>\n\n ',non-directive
'<h2>\nPackage Specification</h2>\n<tt>IPresentationReconciler</tt> defines the concept of a presentation\nreconciler. ',non-directive
' Gets a Closure that will do nothing.\n ',non-directive
'@link java.lang.CharSequence} interface in order to support matching\nagainst characters from a wide variety of input sources. ',non-directive
' Moves the start offset to <code>start</code>, keeping {',non-directive
' Show the receiver as being paused.\n ',non-directive
'\n\nProvides classes and interfaces for key specifications and algorithm\nparameter specifications.\n\n',non-directive
'@param key the key\n ',non-directive
' Returns this field editor\'s button box containing the Add, Remove,\n Up, and Down button.\n\n @param parent the parent control\n @return the button box\n',non-directive
' Reads the next line. ',non-directive
'</p>\n \n ',non-directive
'</ul>\n\n',non-directive
?,non-directive
' Returns the current information control, or <code>null</code> if none.\n\n @return the current information control, or <code>null</code> if none\n',non-directive
' Converts the given value into a boolean.\n Returns the given default value if the \n value does not represent a boolean.\n\n @param value the value to be converted\n @param dflt the default value\n @return the value as a boolean, or the default value\n',non-directive
'This will be <code>Dialog.OK</code> if the OK\n         button was pressed, or <code>Dialog.CANCEL</code> if this\n         dialog\'s close window decoration or the ESC key was used.\n ',non-directive
'@link Iterator}s <code>A</code> and <code>B</code>,\n the {',non-directive
' Gets the current value, which is the value associated with the last key\n returned by <code>next()</code>.\n\n ',non-directive
?,non-directive
?,non-directive
'@param descriptor the ImageDescriptor\n ',non-directive
?,non-directive
' Constructor for IconAndMessageDialog.\n \n',non-directive
' Extends {',non-directive
'@since 3.2\n',non-directive
'@since 3.0\n',non-directive
' Creates a new listener.\n\n ',non-directive
' Saves the current enable/disable state of the given control and its\n descendents in the returned object except for the given list of exception\n cases; the controls that are saved are also disabled.\n \n @param w\n            the control\n @param exceptions\n            the list of controls to not disable (element type:\n            <code>Control</code>)\n @return an object capturing the enable/disable state\n',non-directive
'@param dflt the default value\n ',non-directive
' Returns this field editor\'s label component.\n <p>\n The label is created if it does not already exist\n </p>\n\n @param parent the parent\n @return the label control\n',non-directive
'</p>\n\n ',non-directive
'<!--\n<h2>Package Specification</h2>\n\n##### FILL IN ANY SPECS NEEDED BY JAVA COMPATIBILITY KIT #####\n<ul>\n  ',non-directive
' Convenience API. Converts the long <code>value</code> to a string and\n adds the pair <code>key/value</code> to this dialog settings.\n \n @param key\n            the key.\n @param value\n            the value to be associated with the <code>key</code>\n',non-directive
'@throws NullPointerException if array is null\n',non-directive
?,non-directive
?,non-directive
' Creates a new path field editor \n',non-directive
'<p><tt>WizardDialog</tt> is a ready-to-use JFace dialog that is instantiated\nwith a wizard and acts as the wizard\'s container. ',non-directive
' <p>\n Populates a Map using the supplied <code>Transformer</code> to transform the collection\n values into keys, using the unaltered collection value as the value in the <code>Map</code>.\n ',non-directive
'<li><a href=\"../../../platform/serialization/spec/serialTOC.html\"> Java Object Serialization Specification </a>\n</ul>\n\n',non-directive
' Sets the spacing for layouts created with this factory. ',non-directive
' Creates a radio group field editor.  \n This constructor does not use a <code>Group</code> to contain the radio buttons.\n It is equivalent to using the following constructor with <code>false</code>\n for the <code>useGroup</code> argument.\n <p>\n Example usage:\n <pre>\n\t\tRadioGroupFieldEditor editor= new RadioGroupFieldEditor(\n\t\t\t\"GeneralPage.DoubleClick\", resName, 1,\n\t\t\tnew String[][] {\n\t\t\t\t{\"Open Browser\", \"open\"},\n\t\t\t\t{\"Expand Tree\", \"expand\"}\n\t\t\t},\n          parent);\t\n </pre>\n </p>\n \n @param name the name of the preference this field editor works on\n @param labelText the label text of the field editor\n @param numColumns the number of columns for the radio button presentation\n @param labelAndValues list of radio button [label, value] entries;\n  the value is returned when the radio button is selected\n @param parent the parent of the field editor\'s control\n',non-directive
' Adds a new page to this wizard. ',non-directive
' Constructs the tray\'s widgets and displays the tray in this dialog. ',non-directive
?,non-directive
'@param value the value to be converted\n ',non-directive
'@link #getNumber(Map,Object)}.\n\n ',non-directive
'@return the string representing the given RGB color value\n',non-directive
?,non-directive
'<li>indent(0,0)</li>\n ',non-directive
'\n\nContains the collections framework, legacy collection classes, event model,\ndate and time facilities, internationalization, and miscellaneous utility\nclasses (a string tokenizer, a random-number generator, and a bit array).\n\n',non-directive
'@param parent the parent of the field editor\'s control\n',non-directive
'@param parent the parent of the field editor\'s control\n',non-directive
?,non-directive
'@see SWT#COLOR_LIST_BACKGROUND\n ',non-directive
'@param name\n            the name of the preference this field editor works on\n ',non-directive
'@param <I> the input type to the transformer\n ',non-directive
'@param newTitle\n            the title show\n',non-directive
'@link #paint(GC, ILineRange) painting} to the\n        newly created painter.\n ',non-directive
'@see org.eclipse.jface.window.Window#open()\n',non-directive
'@link #predicatedMap(Map,Predicate,Predicate)}\n  ',non-directive
' Returns whether this wizard could be finished without further user\n interaction.\n <p>\n The result of this method is typically used by the wizard container to enable\n or disable the Finish button.\n </p>\n\n @return <code>true</code> if the wizard could be finished,\n   and <code>false</code> otherwise\n',non-directive
' Returns the list of {',non-directive
'<li><a href=\"\">##### REFER TO NON-SPEC DOCUMENTATION HERE #####</a>\n</ul>\n',non-directive
'When evaluated an <tt>IRule</tt> always returns an <tt>IToken</tt>.\n',non-directive
'This method fails if the value does not represent a point.\n ',non-directive
'<p>\n Valid representations of <code>true</code> include the strings\n \"<code>t</code>\", \"<code>true</code>\", or equivalent in mixed\n or upper case.\n ',non-directive
' Sets the name of the file used when loading and storing this preference\n store.\n ',non-directive
' Defines a map that is bounded in size.\n ',non-directive
' Returns the default value for the color-valued preference\n with the given name in the given preference store.\n ',non-directive
'@param value the long value\n ',non-directive
' Returns the color data associated with the given symbolic color name.\n\n ',non-directive
' Returns this field editor\'s text control.\n\n ',non-directive
' Returns the ok button.\n \n',non-directive
'@param value the string to be converted\n ',non-directive
'@param parentRegistry global registry that handles resource allocation\n ',non-directive
' Converts the given boolean object to a string.\n Equivalent to <code>String.valueOf(value.booleanValue())</code>.\n\n @param value the boolean object\n @return the string representing the given boolean value\n',non-directive
'<li>grab(false, false)</li>\n ',non-directive
' Identifier for the color used to counter informations For example in\n \'Foo.txt (2 matches)\', the counter information is \'(2 matches)\'.\n \n @since 3.4\n',non-directive
' Returns the default value array for the font-valued preference\n with the given name in the given preference store.\n Returns the default-default value (<code>FONTDATA_ARRAY_DEFAULT_DEFAULT</code>) \n is no default preference with the given name, or if the default \n value cannot be treated as font data.\n\n @param store the preference store\n @param name the name of the preference\n @return the default value of the preference\n',non-directive
' Instances of this class can allocate and dispose SWT resources. ',non-directive
'@param map  the map whose value to look up\n  ',non-directive
' Saves the non-default-valued preferences known to this preference\n store to the file from which they were originally loaded.\n\n @exception java.io.IOException if there is a problem saving this store\n',non-directive
' Image registry key for menu image.\n \n @since 3.4\n',non-directive
'@param value the value to be converted\n ',non-directive
'</p>\n ',non-directive
?,non-directive
' Returns the preview control for this field editor.\n\n @return the preview control\n',non-directive
'@param object  the single object over which to iterate\n ',non-directive
'@see org.eclipse.jface.contentassist.IContentAssistSubjectControl\n ',non-directive
'<li><a href=\"../../../technotes/guides/collections/overview.html\"><b>Collections Framework Overview</b></a>\n  ',non-directive
' Creates a font field editor with an optional preview area.\n \n @param name the name of the preference this field editor works on\n @param labelText the label text of the field editor\n @param previewAreaText the text used for the preview window. If it is\n <code>null</code> there will be no preview area,\n @param parent the parent of the field editor\'s control\n',non-directive
'@param store the preference store\n ',non-directive
' Creates a new file field editor \n',non-directive
'<li>pack(true)</li>\n ',non-directive
'@since JDK1.1\n',non-directive
?,non-directive
'@since 3.1\n',non-directive
' Sets this field editor\'s value.\n\n ',non-directive
?,non-directive
'<P>\nThe <code>premain</code> method has one of two possible signatures. ',non-directive
'<li>extendedMargins(3,3,3,3)</li>\n ',non-directive
' The <code>TitleAreaDialog</code> implementation of this\n <code>Window</code> methods returns an initial size which is at least\n some reasonable minimum.\n \n @return the initial size of the dialog\n',non-directive
?,non-directive
?,non-directive
?,non-directive
?,non-directive
?,non-directive
'@param key  the key of the value to look up in that map\n  ',non-directive
'</p>\n\n ',non-directive
' An <code>AbstractControlContentAssistSubjectAdapter</code> delegates assistance requests from a\n {',non-directive
'</p></li>\n\n  ',non-directive
'@return a new FontDescriptor with the height, in points\n ',non-directive
'@see PageChangingEvent\n ',non-directive
' The number of pixels to blow up the keep-up zone.\n\n ',non-directive
' Message (a localized string).\n',non-directive
?,non-directive
'@param spacing\n            spacing (pixels)\n ',non-directive
' Breaks out space-separated words into an array of words.\n ',non-directive
' The value of the preference when the user has asked that the answer to\n the question always be \"okay\" or \"yes\".\n',non-directive
'@param value the new default value of the preference\n',non-directive
?,non-directive
?,non-directive
'  Looks up the given key in the given map, converting the result into\n  a short, using the default value if the the conversion fails.\n\n  ',non-directive
'</p>\n',non-directive
'@return <code>true</code> if adding verify key listeners is supported\n',non-directive
' Returns the wizard this node stands for.\n ',non-directive
' Adjust the layout of the field editors so that\n they are properly aligned.\n',non-directive
'@param sharedColors a shared colors object to store shaded colors in\n',non-directive
'<p>\n The transformation occurs during the next() method and the underlying\n iterator is unaffected by the transformation.\n\n ',non-directive
' Sets whether JFace dialogs that support help control should\n show the control by default. ',non-directive
?,non-directive
?,non-directive
' Creates and returns an SWT label under the given composite.\n\n ',non-directive
?,non-directive
'@see GridLayoutFactory#generateLayout(org.eclipse.swt.widgets.Composite)\n ',non-directive
' Creates a new content assistant. ',non-directive
?,non-directive
' The default-default value for color preferences \n (black, <code>RGB(0,0,0)</code>).\n',non-directive
'@param paramTypes  the parameter types\n ',non-directive
?,non-directive
'@see org.eclipse.core.runtime.IStatus#matches(int)\n',non-directive
' Sets or removes the property change listener for this field editor.\n ',non-directive
?,non-directive
'@param listener a property change listener\n',non-directive
?,non-directive
'@link java.util.Map Map}\nand would therefore make little sense (any Commons Collections\n{',non-directive
?,non-directive
'@param r runnable to execute.\n',non-directive
?,non-directive
' Fires a <code>PropertyChangeEvent</code>.\n \n @param name the name of the symbolic value that is changing.\n @param oldValue the old value.\n @param newValue the new value.\n',non-directive
'<li>PKCS #1: RSA Encryption Standard, Version 1.5, November 1993</li>\n  ',non-directive
' Create a ProgressIndicator as a child under the given parent.\n \n',non-directive
'</p>\n\n ',non-directive
' Returns the container of this page.\n\n ',non-directive
'@link org.apache.commons.collections.IterableMap IterableMap},\n{',non-directive
'<dd>\n                        Boolean (<code>true</code> or <code>false</code>, case irrelevant).\n                        ',non-directive
'</p>\n',non-directive
'@since 3.0\n',non-directive
?,non-directive
'@param parent\n            The parent shell.\n ',non-directive
'@see #open(int, Shell, String, String, int)\n ',non-directive
'@return this\n \n ',non-directive
'@throws IllegalArgumentException if the size is less than 1\n',non-directive
'@since 3.1 \n\n ',non-directive
'@see #MessageDialog(Shell, String, Image, String, int, String[], int)\n ',non-directive
'@return an object capturing the enable/disable state\n',non-directive
'@version $Revision: 956291 $ $Date: 2010-06-19 22:30:20 +0200 (Sat, 19 Jun 2010) $\n\n ',non-directive
' Returns the revision hover.\n\n @return the revision hover\n',non-directive
' A blockage has occured. ',non-directive
' Button id for a \"Close\" button (value 12).\n',non-directive
'@param layout The layout for the receiver.\n ',non-directive
'</p>\n\n',non-directive
'@param entryNamesAndValues the names (labels) and underlying values to populate the combo widget.  ',non-directive
' Returns this field editor\'s text control.\n\n @return the text control, or <code>null</code> if no\n text field is created yet\n',non-directive
' Increments the nesting depth of running operations.\n \n',non-directive
'@param hSpan number of columns spanned by the control\n ',non-directive
?,non-directive
' Removes the given listener from this <code>ColorSelector</code>. Has\n no affect if the listener is not registered.\n \n @param listener\n            a property change listener\n @since 3.0\n',non-directive
?,non-directive
?,non-directive
' Update the dialog\'s status line to reflect the given status. ',non-directive
'@link UnsupportedOperationException} for\n the {',non-directive
?,non-directive
' Returns the default page image for this wizard.\n <p>\n This image can be used for pages which do not\n supply their own image.\n </p>\n\n @return the default page image\n',non-directive
'@return the value as a point\n ',non-directive
'@return the value as font data\n ',non-directive
'@param parent the parent of the field editor\'s control\n ',non-directive
?,non-directive
'@since 3.4\n',non-directive
'Returns the given default value if the \n value does not represent a point.\n\n ',non-directive
'</p>\n\n ',non-directive
'<li>DualHashBidiMap - uses two HashMaps to implement BidiMap\n',non-directive
'@param fileName\n            the name of the file the settings are written in.\n ',non-directive
'@return the list of words, or the default value\n',non-directive
?,non-directive
'@return the number of wizard pages\n',non-directive
'@param subjectArea the information area\n ',non-directive
' Button width in dialog units (value 61).\n',non-directive
' Minimum width of message area in dialog units (value 300).\n',non-directive
'When leaving linked mode, the caret is placed at\nthe <tt>cursor</tt> variable.<br>\n<br>\n',non-directive
?,non-directive
'the current sub task name ',non-directive
' Contains various layout constants\n \n ',non-directive
'@throws IllegalArgumentException if the arrays are different sizes\n',non-directive
?,non-directive
' Returns the wizard container for this wizard page.\n\n @return the wizard container, or <code>null</code> if this\n   wizard page has yet to be added to a wizard, or the\n   wizard has yet to be added to a container\n',non-directive
'Below shows a few <a href=\"#examples\">examples</a> of different\nways to access MXBeans.\n\n',non-directive
'@param map  the map to use\n ',non-directive
?,non-directive
' Returns the default value for the rectangle-valued preference\n with the given name in the given preference store.\n ',non-directive
'<tt>RevisionInformation</tt> defines the revision model, which contains a list of <tt>Revision</tt>s, which in turn contain <tt>RevisionRange</tt>s.\n',non-directive
?,non-directive
?,non-directive
'@param name the name of the preference this field editor works on\n ',non-directive
' @see Dialog#createButtonBar(Composite)\n',non-directive
' Splits a range off the end of the receiver. ',non-directive
'<!--\n<h2>Package Specification</h2>\n\n##### FILL IN ANY SPECS NEEDED BY JAVA COMPATIBILITY KIT #####\n<ul>\n  ',non-directive
'@param size\n            the page size encoded as <code>new Point(width,height)</code>\n ',non-directive
'@param viewer\n \n ',non-directive
'While it would\nbe possible to declare a \"split map\" with matching input/output\nkey/value constraints, this would be a {',non-directive
'@return  an iterator over the array\n ',non-directive
'@return the font\n',non-directive
?,non-directive
'@param size the size of the preference page encoded as\n   <code>new Point(width,height)</code>\n',non-directive
' Button id for an \"Open\" button (value 11).\n',non-directive
'@param b\n            <code>true</code> to always show Next and Previous buttons,\n            and <code>false</code> to suppress Next and Previous buttons\n            for single page wizards\n',non-directive
' Button id for a \"Select All\" button (value 18).\n',non-directive
' Returns the width in chars required to display information.\n\n ',non-directive
'</pre>\n',non-directive
' Indent in dialog units (value 21).\n',non-directive
'@return this\n ',non-directive
'For implementations that support a command-line \ninterface, an agent is started by specifying an option on the command-line.  \n',non-directive
'<LI><code>Array</code> interface -- mapping for SQL <code>ARRAY</code> \n\t ',non-directive
' If supported, registers an event consumer with this content assist\n subject.\n\n @param eventConsumer the content assist subject control\'s event consumer. <code>null</code>\n           is a valid argument.\n',non-directive
' Sets whether or not context help is available for this dialog. ',non-directive
'-->\n\n',non-directive
'@param name the name of the preference\n ',non-directive
' Gets a boolean from a Map in a null-safe manner.\n ',non-directive
?,non-directive
'@exception IOException in case reading fails\n',non-directive
?,non-directive
?,non-directive
' Checks to see if there are more entries still to be iterated.\n\n ',non-directive
' Creates a copy of the receiver.\n \n @return a copy of the receiver\n',non-directive
' Returns the container of this wizard.\n\n @return the wizard container, or <code>null</code> if this\n   wizard has yet to be added to a container\n',non-directive
'@param textLimit the maximum number of characters in the text.\n',non-directive
'The package provides a default\nimplementation <tt>SubjectControlContentAssistant</tt> which completely defines and implements\nthe UI and the control flow for content assist.\n<br>\n',non-directive
' Provides a set of convenience methods for creating HTML pages.\n <p>\n Moved into this package from <code>org.eclipse.jface.internal.text.revisions</code>.</p>\n',non-directive
?,non-directive
?,non-directive
' Resizes the range by <code>delta</code> lines by moving the start offset, {@link #end()} remains unchanged.\n\n @param delta the number of lines to resize the range\n @throws LineIndexOutOfBoundsException if <code>-delta</code> &gt;= {@link #length()}\n',non-directive
' The <code>ColorSelector</code> is a wrapper for a button that displays a\n selected <code>Color</code> and allows the user to change the selection.\n',non-directive
' Gets a double from a Map in a null-safe manner.\n <p>\n The double is obtained from the results of {@link #getNumber(Map,Object)}.\n\n @param map  the map to use\n @param key  the key to look up\n @return the value in the Map as a double, <code>0.0</code> if null map input\n',non-directive
'@return  the value in the map as a number, or defaultValue if the\n    original value is null, the map is null or the number conversion\n    fails\n',non-directive
' Returns the preference page in which this field editor\n appears.\n\n ',non-directive
' Constructs an uninitialized composite image.\n',non-directive
' Persist the last known size of the dialog.\n @since 3.2\n',non-directive
?,non-directive
' Resizes the range by <code>delta</code> lines, keeping {',non-directive
' @see org.eclipse.jface.dialogs.IPageChangeProvider#removePageChangedListener(org.eclipse.jface.dialogs.IPageChangedListener)\n @since 3.1\n',non-directive
?,non-directive
' Returns JFace\'s viewer font. Convenience method equivalent to\n \n <pre>\n JFaceResources.getFontRegistry().get(JFaceResources.VIEWER_FONT)\n </pre>\n \n @return the font\n @deprecated This font is not in use\n',non-directive
' Disposes the SWT resources used by this field editor.\n',non-directive
' @return the HTML contents\n',non-directive
' Adds a new page to this wizard. The page is inserted at the end of the\n page list.\n \n @param page\n            the new page\n',non-directive
'@param text the text widget to adapt\n',non-directive
'To create a scheme, use <code>BindingManager.getScheme(String)</code>.  ',non-directive
'@param store the preference store\n ',non-directive
'<li>\n<tt>IWizardPage</tt> - an individual wizard page</li>\n\n',non-directive
' An empty unmodifiable sorted map.\n This is not provided in the JDK.\n',non-directive
'@since 3.0\n',non-directive
' Creates a DeviceResourceException indicating an error attempting to\n create a resource and an embedded low-level exception describing the cause \n \n ',non-directive
' Opens the information control with the given information and the specified\n subject area. It also activates the information control closer.\n\n @param subjectArea the information area\n @param information the information\n',non-directive
' Returns this field editor\'s shell.\n\n @return the shell\n',non-directive
' The default-default value for String preferences (<code>\"\"</code>).\n',non-directive
'This is a single MBeanServer that can be shared by different managed \ncomponents running within the same Java virtual machine.\n \n',non-directive
?,non-directive
' Creates an integer field editor.\n \n',non-directive
'@return a new iterator\n',non-directive
?,non-directive
?,non-directive
' Gets a Boolean from a Map in a null-safe manner.\n ',non-directive
?,non-directive
'</p>\n\n ',non-directive
' Returns this field editor\'s label text.\n\n ',non-directive
' Returns the value, an array of strings, of the given key in this dialog\n settings.\n \n',non-directive
?,non-directive
'</p>\n',non-directive
?,non-directive
' Creates an empty image registry.\n \n',non-directive
'@return an array of the iterator contents\n ',non-directive
' Returns the given string with all whitespace characters removed.\n <p>\n All characters that have codes less than or equal to <code>\'&#92;u0020\'</code> \n (the space character) are considered to be a white space.\n </p>\n\n @param s the source string\n @return the string with all whitespace characters removed\n',non-directive
?,non-directive
' Returns the value that will be used for Scale.setPageIncrement(int).\n \n',non-directive
'@param parent the parent of the field editor\'s control\n',non-directive
?,non-directive
?,non-directive
' Image registry key for banner image (value\n <code>\"dialog_title_banner_image\"</code>).\n',non-directive
?,non-directive
'</li>\n',non-directive
?,non-directive
' Creates this field editor\'s main control containing all of its\n basic controls.\n\n @param parent the parent control\n',non-directive
?,non-directive
' The label for cancel buttons.\n',non-directive
'@author <a href=\"mailto:jefft@apache.org\">Jeff Turner</a>\n ',non-directive
' Returns all the sections in this dialog settings.\n \n @return the section, or <code>null</code> if none\n',non-directive
'@param parent\n            the parent of the field editor\'s control\n',non-directive
'@param value the value to be converted\n ',non-directive
'<!--\n<ul>\n  ',non-directive
' @see org.eclipse.jface.dialogs.IPageChangeProvider#addPageChangedListener(org.eclipse.jface.dialogs.IPageChangedListener)\n @since 3.1\n',non-directive
'An object that is reachable via phantom\nreferences will remain so until all such references are cleared or themselves\nbecome unreachable.\n\n\n',non-directive
'</p>\n',non-directive
'@param store the preference store\n ',non-directive
' Convenience API. Convert the value of the given key in this dialog\n settings to a float and return it.\n \n @param key\n            the key\n @return the value coverted to float, or throws\n         <code>NumberFormatException</code> if none\n \n @exception NumberFormatException\n                if the string value does not contain a parsable number.\n @see java.lang.Float#valueOf(java.lang.String)\n',non-directive
'Soft\nreferences are for implementing memory-sensitive caches, weak references are\nfor implementing canonicalizing mappings that do not prevent their keys (or\nvalues) from being reclaimed, and phantom references are for scheduling\npre-mortem cleanup actions in a more flexible way than is possible with the\nJava finalization mechanism.\n\n',non-directive
?,non-directive
'{',non-directive
'@throws NullPointerException if iterator parameter is null\n ',non-directive
'@see PreferenceConverter#setValue(IPreferenceStore, String, FontData[])\n',non-directive
'@param name\n            the file name\n ',non-directive
'true if canceled ',non-directive
' Finds and returns the preference node directly\n below the top at the given path.\n\n @param path the path\n @param top top at the given path\n @return the node, or <code>null</code> if none\n \n @since 3.1\n',non-directive
?,non-directive
'@return this\n',non-directive
' Create an empty dialog settings which loads and saves its\n content to a file.\n Use the methods <code>load(String)</code> and <code>store(String)</code>\n to load and store this dialog settings.\n\n @param sectionName the name of the section in the settings.\n',non-directive
' Converts the line-based information of {@link ILineDiffer} into {@link Hunk}s, grouping\n contiguous blocks of lines that are changed (added, deleted).\n\n @param differ the line differ to query\n @param lines the number of lines to query\n @return the corresponding {@link Hunk} information\n',non-directive
'<LI><code>SQLXML</code> interface -- mapping for SQL <code>XML</code>\n\t ',non-directive
'@param parent the parent of the field editor\'s control\n',non-directive
' Sets the annotation model.\n\n ',non-directive
'     /**\n Breaks out space-separated words into an array of words.\n For example: <code>\"no comment\"</code> into an array \n <code>a[0]=\"no\"</code> and <code>a[1]= \"comment\"</code>.\n Returns the given default value if the value cannot be parsed.\n\n @param value the string to be converted\n @param dflt the default value\n @return the list of words, or the default value\n',non-directive
' Abstract base implementation of a dialog page. ',non-directive
'<li>SingletonMap - a fully featured map to hold one key-value pair\n',non-directive
?,non-directive
' Indicates whether the Cancel button is to be enabled.\n',non-directive
'@param title the title of this preference page\n ',non-directive
' Adapts a {@link org.eclipse.swt.widgets.Combo} to a {@link org.eclipse.jface.contentassist.IContentAssistSubjectControl}.\n\n <p>\n\tKnown issues:\n  <ul>\n\t\t<li>https://bugs.eclipse.org/bugs/show_bug.cgi?id=50121\n\t\t= &gt; Combo doesn\'t get Arrow_up/Down keys on GTK</li>\n\n\t\t<li>https://bugs.eclipse.org/bugs/show_bug.cgi?id=50123\n\t\t= &gt; Combo broken on MacOS X</li>\n  </ul>\n\t</p>\n\n @since 3.0\n @deprecated As of 3.2, replaced by Platform UI\'s field assist support\n',non-directive
'@return the shell\n',non-directive
' Load a dialog settings from a file and fill the receiver with its\n content.\n \n @param fileName\n            the name of the file the settings are read from.\n @throws IOException\n',non-directive
'@param minWidth\n            the minimum page width\n ',non-directive
' Returns the symbolic font name used by dialog pages.\n \n @return the symbolic font name\n',non-directive
'@param predicates  an array of predicates to check, not null\n ',non-directive
'@return the modified style definitions\n ',non-directive
'Separators (<tt>Separator</tt>) can be included in contribution lists to\nbreak up the list\'s visual representation. ',non-directive
'@return the current value\n',non-directive
?,non-directive
'@throws IllegalArgumentException if the either array is null\n ',non-directive
' Style constant (value <code>1</code>) indicating a layout where the field\n editor\'s label appears on the left with a check box on the right.\n',non-directive
'That is, the class containing the <code>agentmain</code> method.\n                        ',non-directive
'@since 3.4\n',non-directive
'<h2>\nPackage Specification</h2>\nA wizard dialog is a specialized window for walking the end user through\na sequence of steps; each step is presented on a separate page.\n',non-directive
' Convenience method to open a simple Yes/No question dialog.\n \n',non-directive
'@param value\n            the value to be associated with the <code>key</code>\n',non-directive
' Returns the revision that this region belongs to.\n\n @return the revision that this region belongs to\n',non-directive
' A field editor for a color type preference.\n',non-directive
' Returns the change button for this field editor.\n \n',non-directive
'@return the number of controls\n',non-directive
'@param key\n            the key\n ',non-directive
'This attribute is optional, the default is <code>false</code>.\n',non-directive
?,non-directive
' Converts the given value into an SWT RGB color value.\n Returns the given default value if the \n value does not represent an RGB color value.\n\n @param value the value to be converted\n @param dflt the default value\n @return the value as a RGB color value, or the default value\n',non-directive
' Sets the title for this dialog.\n \n @param title\n            the title.\n',non-directive
' Sets or clears the container of this wizard.\n\n ',non-directive
'@see #setPreferenceStore\n',non-directive
' Sets the minimum page size used for the pages.\n \n @param size\n            the page size encoded as <code>new Point(width,height)</code>\n @see #setMinimumPageSize(int,int)\n',non-directive
' Store the default preference for the field\n being edited\n',non-directive
' Hides the proposal popup.\n',non-directive
'<LI>Making a connection with a database via the <code>DriverManager</code> facility\n  <UL>\n\t ',non-directive
'@return <code>true</code> if the user presses the OK button,\n         <code>false</code> otherwise\n',non-directive
'@param property the field editor property name, \n   such as <code>VALUE</code> or <code>IS_VALID</code>\n ',non-directive
'@link org.apache.commons.collections.OrderedBidiMap OrderedBidiMap} and \n{',non-directive
' Margin height (in pixels) to be used in layouts inside popup dialogs\n (value is 0).\n',non-directive
'The margins\n are the distance between the outer cells and the edge of the layout.\n \n',non-directive
'@param visible <code>true</code> to make this page visible,\n  and <code>false</code> to hide it\n',non-directive
' Creates a new field editor preference page with the given title,\n image, and style.\n\n @param title the title of this preference page\n @param image the image for this preference page, or \n   <code>null</code> if none\n @param style either <code>GRID</code> or <code>FLAT</code>\n',non-directive
' Returns the string typed into this input dialog.\n \n',non-directive
'@author <a href=\"mailto:bloritsch@apache.org\">Berin Loritsch</a>\n ',non-directive
?,non-directive
'@since 3.3\n',non-directive
'@param objectsAndClosures  a map of objects to closures\n ',non-directive
'<li><a href=\"\">##### REFER TO ANY FRAMEMAKER SPECIFICATION HERE #####</a>\n</ul>\n\n',non-directive
'</p>\n',non-directive
?,non-directive
'@param hSpacing horizontal spacing (pixels)\n ',non-directive
'<p>\nThe following decorators are provided in the package:\n<ul>\n',non-directive
' Identifier for the color used for the background of content assist\n popup dialogs.\n \n',non-directive
'The margins\n specify the number of pixels of horizontal and vertical margin that will\n be placed along the left, right, top, and bottom edges of the layout.\n ',non-directive
?,non-directive
' Returns the default dialog spacing, in pixels\n \n @return the default dialog spacing, in pixels\n',non-directive
' The Next button has been pressed.\n',non-directive
'<h2>Related Documentation</h2>\n\nFor overviews, tutorials, examples, guides, and tool documentation, please see:\n<ul>\n  ',non-directive
' The default-default value for double preferences (<code>0.0</code>).\n',non-directive
'@see org.apache.commons.collections.functors.SwitchClosure\n \n ',non-directive
'@param defaultValue  what to return if the value is null or if the\n     conversion fails\n  ',non-directive
'Malformed and non-existent paths are ignored.\t\n\t\t\t',non-directive
'<li>hint(SWT.DEFAULT, SWT.DEFAULT)</li>\n ',non-directive
'<li>\n    <a href=\n      \"{@docRoot}/../technotes/guides/security/crypto/CryptoSpec.html\">\n      <b>Java<FONT SIZE=-2><SUP>TM</SUP></FONT>\n      Cryptography Architecture API Specification and Reference\n      </b></a></li>\n</ul>\n\n',non-directive
'<p>\n This iterator allows both forward and reverse iteration through the map.\n\n ',non-directive
'@param node\n ',non-directive
' Creates a new revision painter for a vertical ruler column.\n\n ',non-directive
?,non-directive
?,non-directive
' Creates a new string field editor \n',non-directive
'<li>font-size</li>\n ',non-directive
?,non-directive
?,non-directive
' Returns whether a wizard has been created for this node.\n\n ',non-directive
?,non-directive
'<LI><code>DriverPropertyInfo</code> class -- provides properties for a\n             JDBC driver; not used by the general user\n  </UL>\n  ',non-directive
'@since 3.1\n',non-directive
' {@inheritDoc}\n ',non-directive
'\nService provider classes for the classes in the java.text package.\n<!--\n<h2>Package Specification</h2>\n\n##### FILL IN ANY SPECS NEEDED BY JAVA COMPATIBILITY KIT #####\n<ul>\n  <li><a href=\"\">##### REFER TO ANY FRAMEMAKER SPECIFICATION HERE #####</a>\n</ul>\n\n<h2>Related Documentation</h2>\n\nFor overviews, tutorials, examples, guides, and tool documentation, please see:\n<ul>\n  <li><a href=\"\">##### REFER TO NON-SPEC DOCUMENTATION HERE #####</a>\n</ul>\n-->\n\n@since 1.6\n',non-directive
'@return  an ordered iterator over nothing\n',non-directive
?,non-directive
'@see Reader#read(char[],int,int)\n',non-directive
?,non-directive
'  Looks up the given key in the given map, converting the result into\n  a long, using the default value if the the conversion fails.\n\n  @param map  the map whose value to look up\n  @param key  the key of the value to look up in that map\n  @param defaultValue  what to return if the value is null or if the\n     conversion fails\n  @return  the value in the map as a number, or defaultValue if the\n    original value is null, the map is null or the number conversion\n    fails\n',non-directive
' Sets the name of the preference this field editor operates on.\n <p>\n The ability to change this allows the same field editor object\n to be reused for different preferences.\n </p>\n <p>\n For example: <p>\n <pre>\n \t...\n  editor.setPreferenceName(\"font\");\n \teditor.load();\n </pre>\n </p>\n\n @param name the name of the preference\n',non-directive
?,non-directive
'@since 3.3\n',non-directive
' Create the page for the node.\n ',non-directive
' Sets the text of the change button.\n\n @param text the new text\n',non-directive
'@param display the display to check against\n ',non-directive
?,non-directive
?,non-directive
'<li>{',non-directive
'@param min the minimum allowed value (inclusive)\n ',non-directive
' Find the <code>IPreferenceNode</code> that has data the same id as the\n supplied value.\n \n @param nodeId\n            the id to search for.\n @return <code>IPreferenceNode</code> or <code>null</code> if not\n         found.\n',non-directive
'the label ',non-directive
'@param layout\n            layout to copy\n ',non-directive
?,non-directive
' Creates a preference node with the given id and preference page. The\n title of the preference page is used for the node label. The node will\n not have an image.\n \n @param id\n            the node id\n @param preferencePage\n            the preference page\n',non-directive
' Notifies that the OK button of this page\'s container has been pressed.\n \n @return <code>false</code> to abort the container\'s OK\n  processing and <code>true</code> to allow the OK to happen\n',non-directive
'@see JFacePreferences#HYPERLINK_COLOR\n',non-directive
' Creates the next browser input with the given input as previous one.\n\n @param previous the previous input or <code>null</code> if none\n',non-directive
'<li>{',non-directive
'<li>CompositeCollection - a collection that combines multiple collections into one\n</ul>\n',non-directive
?,non-directive
?,non-directive
'the progress indicator ',non-directive
'@return the value in the Map as a Boolean, <code>false</code> if null map input\n',non-directive
?,non-directive
?,non-directive
' Clears any adjusted ranges, restoring the original range.\n',non-directive
' Removes the given input change listener from this input change provider.\n ',non-directive
'@param key\n            the key\n ',non-directive
?,non-directive
'@return the control responsible for displaying the label\n \n ',non-directive
?,non-directive
?,non-directive
'\nProvides a framework for preferences.\n',non-directive
' The label for help buttons.\n',non-directive
'@return a new GridData instance\n',non-directive
' The label for help buttons.\n',non-directive
'@link ListIterator#set} methods.\n\n ',non-directive
'A null input will return an empty properties object.\n\n ',non-directive
' (non-Javadoc) Method declared on IPreferenceNode.\n',non-directive
'</p>\n \n ',non-directive
'@param hint\n            size (pixels) to be used instead of the control\'s preferred\n            size. ',non-directive
'@return a <code>Range</code> with the given start and length\n ',non-directive
?,non-directive
' Helper to enable/disable Cancel button for this dialog.\n \n',non-directive
?,non-directive
' The label for finish buttons.\n',non-directive
' Creates a DeviceResourceException indicating an error attempting to\n create a resource \n \n ',non-directive
'@link MapIterator#setValue(Object)} methods.\n\n ',non-directive
'<p>\n',non-directive
' Stores the styled ranges in the given table item.\n\n ',non-directive
' Gets a Long from a Map in a null-safe manner.\n ',non-directive
?,non-directive
'@return the <code>if</code> closure\n ',non-directive
' Horizontal margin in dialog units (value 7).\n',non-directive
'<p></li>\n</ol>  \n\n',non-directive
' Creates a path field editor.\n \n',non-directive
'@param allowReadAndDispatch\n            <code>true</code> (the default) if events may be processed\n            while running an operation, <code>false</code> if\n            Display.readAndDispatch() should not be called from\n            ModalContext.\n ',non-directive
'<li>IdentityMap - map that uses == for comparison instead of equals()\n',non-directive
'@return a copy of the argument\n',non-directive
'<lI>SQLException enhancements -- Added support for cause chaining; New SQLExceptions\n added for common SQLState class value codes\n ',non-directive
?,non-directive
'@return a copy of the reciever\n',non-directive
'@param <T> the type that the factory creates\n\n ',non-directive
'@param index\n            the index of the button in the dialog\'s button bar\n ',non-directive
' A preference dialog is a hierarchical presentation of preference pages. ',non-directive
'<p>A <em>platform MBeanServer</em> can be accessed with the\n{',non-directive
'@return the string representing the given int\n',non-directive
'@param layoutData\n            the layoutData for the title\n ',non-directive
' Returns whether this wizard could be finished without further user\n interaction.\n ',non-directive
'@param map the <code>Map</code> to populate.\n ',non-directive
?,non-directive
'@link java.util.regex.Matcher} class are used to match\ncharacter sequences against a given pattern.  ',non-directive
' Create a new instance of the reciever and the button that it wrappers in\n the supplied parent <code>Composite</code>.\n \n @param parent\n            The parent of the button.\n',non-directive
'@param style the SWT style constants for progress monitors created \n \tby the receiver.\n ',non-directive
'  Looks up the given key in the given map, converting the result into\n  an integer, using the default value if the the conversion fails.\n\n  @param map  the map whose value to look up\n  @param key  the key of the value to look up in that map\n  @param defaultValue  what to return if the value is null or if the\n     conversion fails\n  @return  the value in the map as a number, or defaultValue if the\n    original value is null, the map is null or the number conversion\n    fails\n',non-directive
?,non-directive
'The {',non-directive
'@param name the name of the preference\n',non-directive
' Returns the current value of the string-valued preference with the\n given name.\n ',non-directive
'</p>\n \n ',non-directive
?,non-directive
' Convenience API. Convert the value of the given key in this dialog\n settings to a int and return it.\n \n @param key\n            the key\n @return the value coverted to int, or throws\n         <code>NumberFormatException</code> if none\n \n @exception NumberFormatException\n                if the string value does not contain a parsable number.\n @see java.lang.Integer#valueOf(java.lang.String)\n',non-directive
'</p>\n\n ',non-directive
'@param parent\n            the parent composite to contain the buttons\n',non-directive
'@see JFacePreferences#ERROR_COLOR\n',non-directive
'@link\njava.lang.NullPointerException NullPointerException} to be thrown.\n\n',non-directive
'@return the value in the Map as a float, <code>defaultValue</code> if null map input\n',non-directive
'@param in the original String\n ',non-directive
?,non-directive
?,non-directive
'@since 2.1\n',non-directive
'@since 3.0\n \n',non-directive
'</p>\n ',non-directive
'<p>\nThe following implementations are provided in the package:\n<ul>\n',non-directive
'@since 3.0\n',non-directive
' A concrete implementation of a node in a preference dialog tree. This class\n also supports lazy creation of the node\'s preference page.\n',non-directive
' Returns the window title string for this wizard.\n\n ',non-directive
'The store manages a collection of key/value pairs. ',non-directive
' Creates a new preference manager with the given\n path separator and root node.\n\n ',non-directive
?,non-directive
?,non-directive
' A thread listener is an object that is interested in receiving notifications\n of thread changes.  ',non-directive
'Returns the given default value if the \n value does not represent a boolean.\n\n ',non-directive
'<p>Below is an example showing how to access a platform-specific\nattribute from Sun\'s implementation of the <tt>RuntimeMXBean</tt>.\n\n',non-directive
?,non-directive
' Validation strategy constant (value <code>1</code>) indicating that\n the editor should perform validation only when the text widget \n loses focus.\n\n ',non-directive
' A utility class for dealing with preferences whose values are\n common SWT objects (color, points, rectangles, and font data).\n ',non-directive
' Convenience method to open a standard error dialog.\n \n',non-directive
'@param title the title of this preference page\n',non-directive
?,non-directive
'@return the font\n',non-directive
'@since 3.0\n',non-directive
' Sets the current value of the preference with the given name\n in the given preference store.\n\n ',non-directive
'@return the string representing the given double\n',non-directive
?,non-directive
?,non-directive
'@link javax.management.openmbean.TabularData TabularData} \n        defined in {',non-directive
'@return the value as a boolean\n ',non-directive
'  Looks up the given key in the given map, converting the result into\n  a byte, using the default value if the the conversion fails.\n\n  ',non-directive
' Sets the minimum page size used for the pages.\n \n @param minWidth\n            the minimum page width\n @param minHeight\n            the minimum page height\n @see #setMinimumPageSize(Point)\n',non-directive
'@param cleanOnDisplayDisposal\n            whether all fonts allocated by this <code>ColorRegistry</code>\n            should be disposed when the display is disposed\n ',non-directive
?,non-directive
'@param offset the offset of the selection based on the subject\'s model e.g. ',non-directive
' Small indent in dialog units (value 7).\n',non-directive
'<p>\nThe class <code>Math</code> provides commonly used mathematical functions such\nas sine, cosine, and square root. ',non-directive
' Attaches the progress monitor part to the given cancel\n component.\n @param cancelComponent the control whose selection will\n trigger a cancel\n',non-directive
'@since 3.1\n',non-directive
' Create a new instance of the receiver.\n \n @param display the <code>Display</code> to hook into.\n',non-directive
'@param map  the map whose value to look up\n  ',non-directive
'@param control\n            the control to apply the font to. ',non-directive
?,non-directive
'@param name the name of the preference\n ',non-directive
' Returns the default image that will be returned in the event that the intended\n image is missing.\n \n @since 3.1\n\n @return a default image that will be returned in the event that the intended\n image is missing.\n',non-directive
'\n Construct a new <code>BufferOverflowException</code>.\n \n @param message  the detail message for this exception\n @param exception  the root cause of the exception\n',non-directive
' A custom implementation of the <code>IContentAssistant</code> interface.\n This implementation is used by the linked mode UI. This is internal and subject\n to change without notice.\n',non-directive
'@param symbolicName\n ',non-directive
?,non-directive
' Returns a color descriptor for the given RGB values\n ',non-directive
'@param listener\n            a page changing listener\n ',non-directive
' Removes the given prefreence node if it is managed by\n this contribution manager.\n\n ',non-directive
'@return the number of columns\n ',non-directive
'@return the toggle button\n',non-directive
' Get the number of columns for the receiver.\n \n @param tableTree\n            the control\n \n @return the number of columns\n @since 3.5\n',non-directive
?,non-directive
'@return the current wizard\n',non-directive
'</p>\n\n ',non-directive
'@link ListIterator}. ',non-directive
?,non-directive
' Entry field width in dialog units (value 200).\n',non-directive
' Property name constant (value <code>\"field_editor_value\"</code>)\n to signal a change in the value of this field editor.\n',non-directive
'If an error contains additional detailed\n information then a Details button is automatically supplied, which shows or\n hides an error details viewer when pressed by the user.\n \n',non-directive
?,non-directive
' The <code>WizardPage</code> implementation of this method \n declared on <code>DialogPage</code> updates the container\n if this is the current page.\n',non-directive
'@param fontDataValue the string value for the font data  \n ',non-directive
'<li><b>jarsigner</b>\n    (<a href=\"{@docRoot}/../technotes/tools/solaris/jarsigner.html\">\n      for Solaris/Linux</a>)\n    (<a href=\"{@docRoot}/../technotes/tools/windows/jarsigner.html\">\n      for Windows</a>)\n    </li>\n\n</ul>\n\n',non-directive
'@param store the preference store\n ',non-directive
?,non-directive
'{',non-directive
' Entry field width in dialog units (value 200).\n',non-directive
'@param start  the index to start iterating at\n ',non-directive
'@return the Device associated with this ResourceManager\n',non-directive
' Load a dialog settings from a stream and fill the receiver with its\n content.\n \n',non-directive
'Static control enables field service staff to set up a particular configuration and then re-launch the \napplication with the new logging settings. ',non-directive
' <p>\n Moved into this package from <code>org.eclipse.jface.internal.text.revisions</code>.</p>\n',non-directive
'@param listener\n            a property change listener\n ',non-directive
'This\npackage includes a few small standardized extensible frameworks, as\nwell as some classes that provide useful functionality and are\notherwise tedious or difficult to implement.  ',non-directive
?,non-directive
'@param display the display the color is from\n ',non-directive
?,non-directive
'@param booleanValue <code>true</code> if the default value is being presented,\n  and <code>false</code> otherwise\n',non-directive
?,non-directive
'This data is stored persistently in an\nimplementation-dependent backing store. ',non-directive
?,non-directive
'Offset and length based on the subject\'s\n model (e.g. ',non-directive
'@param hIndent distance to move to the right (negative values move left)\n ',non-directive
'@param r runnable to cancel\n',non-directive
?,non-directive
'@link SWT#COLOR_YELLOW yellow}, {',non-directive
' Tells whether the replacer is currently replacing another information control.\n\n ',non-directive
?,non-directive
?,non-directive
'</p>\n\n ',non-directive
'<p>\n This iterator is a valid list iterator object that will iterate over\n the specified object.\n\n ',non-directive
'@link Iterator}s <code>A</code> and <code>B</code>,\n the {',non-directive
'@see #setMessageLayoutData(Object)\n',non-directive
?,non-directive
'@return Composite\n ',non-directive
?,non-directive
'@param collection the <code>Collection</code> to use as input values for the map.\n ',non-directive
'</p>\n',non-directive
'@return the value as a font data object, or the default value\n',non-directive
'@param dflt the default value\n ',non-directive
'@param iterators  the iterators to use, not null or empty or contain nulls\n ',non-directive
?,non-directive
'@see ITextViewerExtension8#setHoverEnrichMode(org.eclipse.jface.text.ITextViewerExtension8.EnrichMode)\n',non-directive
' Returns whether this field editor currently presents the\n default value for its preference.\n \n @return <code>true</code> if the default value is presented,\n   and <code>false</code> otherwise\n',non-directive
'@param display the Display\n',non-directive
' Notifies that the OK button of this page\'s container has been pressed.\n \n',non-directive
'<p>\n The int is obtained from the results of {',non-directive
' Return whether or not the receiver has a value for the supplied key.\n \n @param key the key\n @return <code>true</code> if there is a value for this key\n',non-directive
?,non-directive
' Sets whether the empty string is a valid value or not.\n\n @param b <code>true</code> if the empty string is allowed,\n  and <code>false</code> if it is considered invalid\n',non-directive
?,non-directive
'<LI><code>Time</code> class -- mapping for SQL <code>TIME</code> \n\t ',non-directive
' Creates a new empty wizard.\n',non-directive
' Returns the wizard page that would to be shown if the user was to\n press the Next button.\n\n ',non-directive
'  Looks up the given key in the given map, converting the result into\n  a double, using the default value if the the conversion fails.\n\n  @param map  the map whose value to look up\n  @param key  the key of the value to look up in that map\n  @param defaultValue  what to return if the value is null or if the\n     conversion fails\n  @return  the value in the map as a number, or defaultValue if the\n    original value is null, the map is null or the number conversion\n    fails\n',non-directive
?,non-directive
'<LI> <I>Problem diagnosis by developers</I>. ',non-directive
' Returns the current wizard page for this container.\n\n @return the current wizard page, or <code>null</code> if the container\n   is not yet showing the wizard\n @see #showPage\n',non-directive
' Convenience API. Convert the value of the given key in this dialog\n settings to a long and return it.\n \n @param key\n            the key\n @return the value coverted to long, or throws\n         <code>NumberFormatException</code> if none\n \n @exception NumberFormatException\n                if the string value does not contain a parsable number.\n @see java.lang.Long#valueOf(java.lang.String)\n',non-directive
' Gets an iterator over an object or primitive array.\n ',non-directive
' Set the manager for the preferences.\n ',non-directive
'@param hAlign horizontal alignment. ',non-directive
' Gets an immutable version of an {@link Iterator}. The returned object\n will always throw an {@link UnsupportedOperationException} for\n the {@link Iterator#remove} method.\n\n @param iterator  the iterator to make immutable\n @return an immutable version of the iterator\n',non-directive
' Sets the dialog settings for this wizard.\n ',non-directive
' Creates a file field editor.\n \n @param name the name of the preference this field editor works on\n @param labelText the label text of the field editor\n @param parent the parent of the field editor\'s control\n',non-directive
' Returns an enumeration of all preferences known to this store which have\n current values other than their default value.\n \n',non-directive
'@param value the font list string \n ',non-directive
?,non-directive
' Sets the default value for the integer-valued preference with the\n given name. \n ',non-directive
'@param key  the key to look up\n ',non-directive
'This method fails if the value does not represent an RGB\n color value.\n ',non-directive
' Informs this field editor\'s listener, if it has one, about a change to\n one of this field editor\'s boolean-valued properties. ',non-directive
'@param selection the selection\n ',non-directive
?,non-directive
?,non-directive
' An exception indicating that a string value could not be\n converted into the requested data type.\n\n @see StringConverter\n',non-directive
'@param blocking The monitor to forward to. ',non-directive
'@param message the message for the note\n ',non-directive
'@param name the name of the preference this field editor works on\n ',non-directive
'<li><tt>TemplateStore</tt> and <tt>ContextTypeRegistry</tt> manage a\nset of templates within a plug-in and offer ways to store them in the\npreferences or externally in XML streams via a <tt>TemplateReaderWriter</tt>.<br></li>\n  ',non-directive
?,non-directive
' Creates and returns a new image descriptor from a file.\n ',non-directive
'@since 3.1\n\n ',non-directive
' Returns the position category.\n\n @return the position category\n',non-directive
'<li>{',non-directive
?,non-directive
' A default implementation of the {@link SubjectControlContextInformationValidator} interface.\n This implementation determines whether the information is valid by asking the content\n assist processor for all  context information objects for the current position. If the\n currently displayed information is in the result set, the context information is\n considered valid.\n\n @since 3.0\n @deprecated As of 3.2, replaced by Platform UI\'s field assist support\n',non-directive
'</p>\n',non-directive
'<LI>Distributed transactions -- allowing a transaction to span diverse\n      DBMS servers\n  ',non-directive
' Creates a new RowLayout, and initializes it with values from the factory.\n \n',non-directive
'</p>\n\n ',non-directive
'@param store the preference store\n ',non-directive
' Returns information about possible contexts based on the specified\n location within the document that corresponds to the current cursor\n position within the content assist subject control.\n\n ',non-directive
?,non-directive
?,non-directive
'@throws IllegalArgumentException if any closure in the map is null\n',non-directive
'@since 3.1 \n\n ',non-directive
'@param transform  the transform to use, not null\n ',non-directive
'<li>Classes for iteration over text\n',non-directive
'@return a copy of the receiver\n',non-directive
' Converts the given value into a double.\n This method fails if the value does not represent a double.\n\n @param value the value to be converted\n @return the value as a double\n @exception DataFormatException if the given value does not represent\n\ta double\n',non-directive
' Reset the progress bar to it\'s normal style.\n ',non-directive
' Checks whether it is alright to leave this page.\n \n',non-directive
'<li>{',non-directive
' Returns a value indicating if the message is a an information message, a\n warning message, or an error message.\n ',non-directive
'<LI><code>Date</code> class -- mapping for SQL <code>DATE</code> \n\t  ',non-directive
'</pre>\n',non-directive
' Returns the value that will be used for Scale.setMaximum(int).\n \n',non-directive
'@param top top at the given path\n ',non-directive
'@param store\n            IPreferenceStore\n',non-directive
'@param key  the key of the value to look up in that map\n  ',non-directive
'The default closure is set in the map with a \n null key. ',non-directive
'@link ListIterator#add} and\n {',non-directive
' Shows the given error message in the page for this\n field editor if it has one.\n\n ',non-directive
' Sets the information control replacer for this manager and disposes the\n old one if set.\n\n ',non-directive
'<p>\n It also provides the following decorators:\n\n  <ul>\n  ',non-directive
'@see #brightness(RGB)\n',non-directive
' Return the label for the image.\n',non-directive
?,non-directive
'@param persistLocation\n            A boolean indicating whether the location should be persisted\n            upon close of the dialog. ',non-directive
'This could be useful during testing as a placeholder.\n\n ',non-directive
'@param selection the selection to delete\n ',non-directive
' Returns the field editor\'s value.\n\n @return the current value\n',non-directive
'@author <a href=\"mailto:nissim@nksystems.com\">Nissim Karpenstein</a>\n ',non-directive
'@return this\n',non-directive
'<li>DualTreeBidiMap - uses two TreeMaps to implement SortedBidiMap\n',non-directive
'<li>Adler-32 checksum is described in RFC 1950 (above)\n\n</ul>\n\n\n',non-directive
'@since   1.5\n\n',non-directive
'@since 3.2\n',non-directive
'@return a copy of the given FontData\n ',non-directive
' Sets the title bar color for this wizard.\n \n',non-directive
' Converts the given double value to a string.\n Equivalent to <code>String.valueOf(value)</code>.\n\n @param value the double value\n @return the string representing the given double\n',non-directive
'@link BrowserInformationControlInput}.\n',non-directive
'@return the Color used for banner backgrounds\n ',non-directive
'  Looks up the given key in the given map, converting the result into\n  a byte, using the default value if the the conversion fails.\n\n  @param map  the map whose value to look up\n  @param key  the key of the value to look up in that map\n  @param defaultValue  what to return if the value is null or if the\n     conversion fails\n  @return  the value in the map as a number, or defaultValue if the\n    original value is null, the map is null or the number conversion\n    fails\n',non-directive
' Gets an empty map iterator.\n ',non-directive
?,non-directive
'</dd>\n<dt><code>Can-Set-Native-Method-Prefix</code></dt>\n',non-directive
'They provided\nformatters are:\n</p>\n<dl>\n<dt>FormalKeyFormatter</dt>\n',non-directive
' Returns JFace\'s text font. ',non-directive
' Gets a Long from a Map in a null-safe manner.\n <p>\n The Long is obtained from the results of {@link #getNumber(Map,Object)}.\n\n @param map  the map to use\n @param key  the key to look up\n @return the value in the Map as a Long, <code>null</code> if null map input\n',non-directive
'@param openOnRun\n            <code>true</code> to open the dialog before run,\n            <code>false</code> to only create the dialog, but not open\n            it\n ',non-directive
' Converts the given double object to a string.\n ',non-directive
'Create it in parent if required.\n ',non-directive
'@return the next key in the iteration\n ',non-directive
'@param parent\n            the parent composite\n ',non-directive
?,non-directive
' Identifier for the Hyperlink Color\n',non-directive
'@return <code>true</code> if the user presses the Yes button,\n         <code>false</code> otherwise\n',non-directive
?,non-directive
'@param rootNode the root node. \n\n ',non-directive
'@return a parent\n',non-directive
?,non-directive
'@return the value as an int, or the default value\n',non-directive
' IPersistentPreferenceStore is a preference store that can \n be saved.\n',non-directive
'@param column\n            the column\n \n ',non-directive
?,non-directive
' Convenience API. ',non-directive
?,non-directive
'@since 3.1\n',non-directive
' Margin width (in pixels) to be used in layouts inside popup dialogs\n (value is 0).\n',non-directive
'@link Iterator}s <code>A</code> and <code>B</code>,\n the {',non-directive
'<li>The setters on GridDataFactory all return \"this\", allowing them to be chained</li> \n ',non-directive
' Performs any actions appropriate in response to the user \n having pressed the Cancel button, or refuse if canceling\n now is not permitted.\n\n ',non-directive
'All attributes of the GridData instance\n will be initialised by the factory.\n \n',non-directive
'<p>\n The Byte is obtained from the results of {',non-directive
'@author Stephen Colebourne\n',non-directive
' Constant for a regular message (value 0).\n ',non-directive
' Returns the <code>color</code> associated with the given symbolic color \n name, or <code>null</code> if no such definition exists.\n \n @param symbolicName symbolic color name\n @return the <code>Color</code> or <code>null</code>\n',non-directive
'</p>\n \n ',non-directive
' Vertical spacing (in pixels) between cells in the layouts inside popup\n dialogs (value is 1).\n',non-directive
'@param top\n            top margin size (pixels)\n ',non-directive
' Returns this field editor\'s radio group control.\n @param parent The parent to create the radioBox in\n @return the radio group control\n',non-directive
'@return a <code>Range</code> with the given start and end offsets\n ',non-directive
'@param manager\n            the preference manager\n',non-directive
'@see #save(OutputStream, String)\n',non-directive
?,non-directive
'Show the blockage when there is \n no longer any modal shells in the UI and forward any actions \n to blockingMonitor. \n \n',non-directive
' The default-default value for point preferences\n (the origin, <code>(0,0)</code>).\n',non-directive
' Set the layout data of the button to a FormData with appropriate heights\n and widths.\n \n',non-directive
'</p>\n\n ',non-directive
' <p>\n Populates a Map using the supplied <code>Transformer</code>s to transform the collection\n values into keys and values.\n </p>\n @param map the <code>Map</code> to populate.\n @param collection the <code>Collection</code> to use as input values for the map.\n @param keyTransformer the <code>Transformer</code> used to transform the collection value into a key value\n @param valueTransformer the <code>Transformer</code> used to transform the collection value into a value\n @throws NullPointerException if the map, collection or transformers are null\n',non-directive
' Converts the given value into an SWT font data object.\n ',non-directive
'@since 3.0\n',non-directive
?,non-directive
'@param fg the foreground color\n ',non-directive
' The label for abort buttons.\n',non-directive
'A client\n can supply the layout to control how the progress monitor part\n is layed out. ',non-directive
' Set the message text. ',non-directive
?,non-directive
'@see #createDropDownList(Composite)\n',non-directive
'@return the default dialog margins, in pixels\n',non-directive
?,non-directive
' Lays outs the page according to this layout.\n \n',non-directive
'@param style either <code>GRID</code> or <code>FLAT</code>\n',non-directive
'<LI><code>Savepoint</code> --  provides savepoints in a transaction\n\n  </UL>\n  ',non-directive
'<li>pack(true)</li>\n ',non-directive
'</P>\n\n<!-- Put ',non-directive
'The binding\nmanager implements a caching scheme that is optimized for an infreqeuntly\nchanging set of bindings, but frequently changing properties.\n',non-directive
'<p>\n This method will handle primitive arrays as well as object arrays.\n ',non-directive
'@param gc The graphic context that defines the currently used font sizes\n ',non-directive
' Image registry key for help image (value\n <code>\"dialog_help_image\"</code>).\n \n',non-directive
' Clear blocked state from the receiver.\n',non-directive
'@param blockingStatus The status that describes the blockage\n ',non-directive
'@param array  the array over which to iterate\n ',non-directive
' An abstract field editor for a string type preference that presents\n a string input field with a change button to its right to edit the\n input field\'s content. ',non-directive
'@since Commons Collections 3.0\n ',non-directive
'@param defaultValue  return if the value is null or if the\n     conversion fails\n ',non-directive
' Button id for a \"Yes to All\" button (value 4).\n',non-directive
?,non-directive
'@return whether the mouse cursor is allowed to leave the subject area without closing the hover\n',non-directive
' Constructs a new instance of <code>PopupDialog</code>.\n \n',non-directive
?,non-directive
'@param name the name of the preference\n ',non-directive
'@param min minimum size of the control\n ',non-directive
?,non-directive
'@since 3.4\n ',non-directive
' Converts a font data object to a string representation for display. \n \t',non-directive
?,non-directive
' The symbolic font name for the header font (value\n <code>\"org.eclipse.jface.headerfont\"</code>).\n',non-directive
' The ellipsis is the string that is used to represent shortened text.\n \n',non-directive
?,non-directive
'@since 2.0\n',non-directive
'@return IStatus\n',non-directive
'@see Reader#read()\n',non-directive
' Creates a new GridData instance. ',non-directive
'@since 3.1\n',non-directive
'@since 3.3\n',non-directive
'-->\n\n',non-directive
?,non-directive
'<LI> <I>Handler</I>: Exports LogRecord objects to a variety of destinations\n                 including memory, output streams, consoles, files, and sockets.\n                 ',non-directive
'\n The vertical spacing used by layout styles <code>FLAT</code> \n and <code>GRID</code>.\n',non-directive
'<p>Dialog stores (<tt>IDialogStore</tt>, <tt>DialogStore</tt>) provide\na general framework for organizing a dialog\'s settings into key/value pairs.\n',non-directive
' An ordered iterator over no elements.\n',non-directive
'@param map  the map whose value to look up\n  ',non-directive
'@return the value in the Map as a Integer, <code>null</code> if null map input\n',non-directive
'@link java.lang.management.ManagementFactory#newPlatformMXBeanProxy\n         ManagementFactory.newPlatformMXBeanProxy}.\n         ',non-directive
'@since 3.1\n',non-directive
' The label for abort buttons.\n',non-directive
' Returns the style for the message label.\n \n',non-directive
' Creates a new directory field editor \n',non-directive
' Updates this dialog\'s controls to reflect the current page.\n',non-directive
' Returns the dialog settings for this wizard.\n ',non-directive
' Returns the validator.\n \n',non-directive
' Gets an array based on an iterator.\n ',non-directive
'<p>\n The Float is obtained from the results of {',non-directive
?,non-directive
?,non-directive
'<li>\n<tt>StringFieldEditor</tt> - text strings</li>\n\n',non-directive
' @param imageData The imageData to set.\n @since 3.3\n',non-directive
' Sets this dialog page\'s description text.\n \n',non-directive
'@since 3.4\n',non-directive
?,non-directive
?,non-directive
'\n\nProvides the classes and interfaces for the security framework.\n',non-directive
'@since JDK1.4\n',non-directive
'@param control the control\n ',non-directive
?,non-directive
'For example, a thread listener can be used to notify a \n runnable of the thread that will execute it, allowing the runnable to transfer\n thread-local state from the calling thread before control passes to the new thread.\n \n',non-directive
' Apply the data to the receiver. ',non-directive
?,non-directive
'@throws NullPointerException if array is null\n',non-directive
'@param parent the parent of the field editor\'s control\n',non-directive
'@since JDK1.0\n',non-directive
'<p>\n ResourceManager handles correct allocation and disposal of resources. ',non-directive
'Moves the position of the control\n by the given number of pixels. ',non-directive
' If supported, inserts the verify key listener at the beginning of this content assist\n subject\'s list of verify key listeners. ',non-directive
'@param beginning <code>true</code> to collapse the selection to its smallest position (i.e.\n            ',non-directive
' Creates a content assist subject control adapter for the given text widget.\n\n @param text the text widget to adapt\n',non-directive
' Creates a new preference page with the given title and no image.\n\n ',non-directive
'<li>PKCS8: Private-Key Information Standard, Version 1.2, November 1993</li>\n</ul>\n\n',non-directive
'@param map  the map to use\n ',non-directive
?,non-directive
' Creates a new preference dialog under the control of the given preference\n manager.\n \n @param parentShell\n            the parent shell\n @param manager\n            the preference manager\n',non-directive
'The package\ncontains a default implementation of <tt>IPresentationReconciler </tt>(<tt>PresentationReconciler</tt>).\n',non-directive
'<li><a href=\"http://java.sun.com/docs/books/tutorial/jdbc\">Chapters on the JDBC \n     API</a>--from the online version of <i>The Java Tutorial Continued</i>\n<P>\n  ',non-directive
' Hides any open pop-ups.\n',non-directive
'@since 3.0\n',non-directive
?,non-directive
'</p>\n<p>\n<code>KeySequence</code> is a <code>TriggerSequence</code> that has\n<code>KeyStroke</code> instances as triggers.  ',non-directive
'<p>\n If the value returned from the specified map is not a Map then\n <code>null</code> is returned.\n\n ',non-directive
' Creates a new abstract preference page with the given title and image.\n\n @param title the title of this preference page\n @param image the image for this preference page,\n  or <code>null</code> if none\n',non-directive
' Sets this dialog page\'s description text.\n \n @param description the description text for this dialog\n  page, or <code>null</code> if none\n',non-directive
' Button id for a \"Retry\" button (value 8).\n',non-directive
' Informs this field editor\'s listener, if it has one, about a change to\n one of this field editor\'s properties.\n\n @param property the field editor property name, \n   such as <code>VALUE</code> or <code>IS_VALID</code>\n @param oldValue the old value object, or <code>null</code>\n @param newValue the new value, or <code>null</code>\n',non-directive
'@return the boolean value, or <code>false</code> if none\n',non-directive
' Adds the listener to the collection of listeners who will be\n notified when the current location has changed or is about to change.\n\n @param listener the location listener\n @since 3.4\n',non-directive
'@throws NullPointerException if the bundle is null\n',non-directive
?,non-directive
' Returns the wizard page with the given name belonging to this wizard.\n\n ',non-directive
'@param value the new default value for the preference\n',non-directive
' Adds the given preference node as a subnode of the\n node at the given path.\n\n @param path the path\n @param node the node to add\n @return <code>true</code> if the add was successful,\n  and <code>false</code> if there is no contribution at\n  the given path\n',non-directive
'<p> The {',non-directive
'@link java.lang.management.ManagementFactory ManagementFactory} class\nfor constructing {',non-directive
?,non-directive
' Tells whether this manager\'s information control is currently being replaced.\n\n @return <code>true</code> if a replace is in progress\n',non-directive
'@param partitioning the document partitioning for this content assistant\n',non-directive
?,non-directive
' Adds the pair <code>key/value</code> to this dialog settings.\n \n @param key\n            the key.\n @param value\n            the value to be associated with the <code>key</code>\n',non-directive
' @param listener the proposal listener\n',non-directive
' Returns the shared image descriptor for a missing image.\n\n @return the missing image descriptor\n',non-directive
'<li>Transformed - transforms each element added\n</ul>\n',non-directive
' Height of button bar in dialog units (value 25).\n',non-directive
'@param key\n            the key.\n ',non-directive
'@since 3.4\n',non-directive
' Creates a new HashMap using data copied from a ResourceBundle.\n\n ',non-directive
?,non-directive
?,non-directive
' Create a new instance of the receiver.\n \n',non-directive
' Gets an iterator over the end part of an object or primitive array.\n ',non-directive
'<p>\n The Double is obtained from the results of {',non-directive
' Gets a boolean from a Map in a null-safe manner,\n using the default value if the the conversion fails.\n <p>\n If the value is a <code>Boolean</code> its value is returned.\n If the value is a <code>String</code> and it equals \'true\' ignoring case\n then <code>true</code> is returned, otherwise <code>false</code>.\n If the value is a <code>Number</code> an integer zero value returns\n <code>false</code> and non-zero returns <code>true</code>.\n Otherwise, <code>defaultValue</code> is returned.\n\n @param map  the map to use\n @param key  the key to look up\n @param defaultValue  return if the value is null or if the\n     conversion fails\n @return the value in the Map as a Boolean, <code>defaultValue</code> if null map input\n',non-directive
?,non-directive
'<li><code>BooleanFieldEditor</code> - booleans</li>\n   ',non-directive
?,non-directive
' Sets the current value of the preference with the given name\n in the given preference store. \n ',non-directive
?,non-directive
'@param symbolicName symbolic font name\n ',non-directive
'@return the radio group control\n',non-directive
'Modifying the elements\n in the returned array has no effect on the original FontDescriptor.\n \n',non-directive
' Set the layoutData for the title area. ',non-directive
' Get the name of the selected item preference\n \n @return String\n',non-directive
'@return  the value in the map as a number, or defaultValue if the\n    original value is null, the map is null or the number conversion\n    fails\n',non-directive
' Creates a list field editor.\n \n @param name the name of the preference this field editor works on\n @param labelText the label text of the field editor\n @param parent the parent of the field editor\'s control\n',non-directive
'Each predicate is evaluated\n until one returns true. ',non-directive
'@return the JFace font registry\n',non-directive
' The label for back buttons.\n',non-directive
' Performs any actions appropriate in response to the user \n having pressed the Cancel button, or refuse if canceling\n now is not permitted.\n\n @return <code>true</code> to indicate the cancel request\n   was accepted, and <code>false</code> to indicate\n   that the cancel request was refused\n',non-directive
' Returns the container of this wizard.\n\n ',non-directive
' Button id for a \"Select All\" button (value 18).\n',non-directive
' An interface used by a preference page to talk to\n its dialog.\n',non-directive
'</li>\n    </ol>',non-directive
?,non-directive
'@return the trim used by the columns\n ',non-directive
'<li>Unmodifiable - ensures the collection cannot be altered\n',non-directive
'@param owner control whose disposal will trigger cleanup of everything \n in the registry.\n',non-directive
'@since 3.4\n',non-directive
' Checks if the given parent is the current parent of the\n supplied control; throws an (unchecked) exception if they\n are not correctly related.\n\n @param control the control\n @param parent the parent control\n',non-directive
' Returns the default value for the point-valued preference\n with the given name in the given preference store.\n ',non-directive
'@see #margins(Point)\n ',non-directive
'@param count  the number of times to loop\n ',non-directive
' Adapts a {',non-directive
' Image registry key for info message image (value\n <code>\"dialog_messasge_warning_image\"</code>).\n \n @since 2.0\n',non-directive
'@param key  the key to look up\n ',non-directive
' Adjust the layout of the field editors so that\n they are properly aligned.\n',non-directive
' The <code>WizardPage</code> implementation of this method \n declared on <code>DialogPage</code> updates the container\n if this is the current page.\n',non-directive
' Returns the resource object with the given key in JFace\'s resource\n bundle. ',non-directive
' Removes an image from this registry.  \n If an SWT image was allocated, it is disposed.\n This method has no effect if there is no image or descriptor for the given key.\n @param key the key\n',non-directive
'@param title the title of this preference page\n ',non-directive
' Creates a radio group field editor.\n <p>\n Example usage:\n <pre>\n\t\tRadioGroupFieldEditor editor= new RadioGroupFieldEditor(\n\t\t\t\"GeneralPage.DoubleClick\", resName, 1,\n\t\t\tnew String[][] {\n\t\t\t\t{\"Open Browser\", \"open\"},\n\t\t\t\t{\"Expand Tree\", \"expand\"}\n\t\t\t},\n          parent,\n          true);\t\n </pre>\n </p>\n \n @param name the name of the preference this field editor works on\n @param labelText the label text of the field editor\n @param numColumns the number of columns for the radio button presentation\n @param labelAndValues list of radio button [label, value] entries;\n  the value is returned when the radio button is selected\n @param parent the parent of the field editor\'s control\n @param useGroup whether to use a Group control to contain the radio buttons\n',non-directive
' Gets a singleton list iterator.\n <p>\n This iterator is a valid list iterator object that will iterate over\n the specified object.\n\n @param object  the single object over which to iterate\n @return  a singleton list iterator over the object\n',non-directive
' A strategy for painting the live annotate colors onto the vertical ruler column. It also manages\n the revision hover.\n\n @since 3.2\n',non-directive
'</p>\n \n ',non-directive
'  Looks up the given key in the given map, converting the result into\n  a boolean, using the default value if the the conversion fails.\n\n  @param map  the map whose value to look up\n  @param key  the key of the value to look up in that map\n  @param defaultValue  what to return if the value is null or if the\n     conversion fails\n  @return  the value in the map as a boolean, or defaultValue if the\n    original value is null, the map is null or the boolean conversion\n    fails\n',non-directive
'@return <code>true</code> if at least one of values of \n  the preferences known to this store has changed and \n  requires saving, and <code>false</code> otherwise.\n',non-directive
'@since 3.2\n ',non-directive
?,non-directive
'ExecutorServices provide methods arranging asynchronous execution of\nany function expressed as {',non-directive
'The APIs also allow for logging to be \nenabled or disabled for different functional areas of the system. ',non-directive
' Creates a GridDataFactory initialized with defaults that will cause\n the control to fill its cell. The minimum size is set to the smallest possible\n minimum size supported by SWT. Currently, the smallest supported minimum size\n is (1,1) so this is the default. If GridLayout ever adds support for grid data\n with no minimum size, this will be changed to 0,0 in the future. \n \n <p>\n Initial values are:\n </p>\n \n <ul>\n <li>align(SWT.FILL, SWT.FILL)</li>\n <li>exclude(false)</li>\n <li>grab(false, false)</li>\n <li>hint(SWT.DEFAULT, SWT.DEFAULT)</li>\n <li>indent(0,0)</li>\n <li>minSize(1,1)</li>\n <li>span(1,1)</li>\n </ul>\n  \n @return a GridDataFactory that makes controls fill their grid by default\n \n @see #swtDefaults()\n',non-directive
' Return code used when dialog failed\n',non-directive
?,non-directive
?,non-directive
'@param display the display the color is from\n ',non-directive
' Returns whether this page is the current one in the wizard\'s container.\n\n ',non-directive
'@param minW\n            the minimum width\n ',non-directive
'@param enforceAbsolute <code>true</code> if the file path\n  must be absolute, and <code>false</code> otherwise\n ',non-directive
' The label for retry buttons.\n',non-directive
'<!--\n<h2>Package Specification</h2>\n\n##### FILL IN ANY SPECS NEEDED BY JAVA COMPATIBILITY KIT #####\n<ul>\n  ',non-directive
'<li>{',non-directive
?,non-directive
'@return the value in the Map as a short, <code>0</code> if null map input\n',non-directive
' Sets the preference store for this preference dialog.\n \n @param store\n            the preference store\n @see #getPreferenceStore\n',non-directive
' Return the List.\n \n @return the list\n @since 3.5\n',non-directive
'@param defaultValue  return if the value is null or if the\n     conversion fails\n ',non-directive
'@param name the name of the preference\n ',non-directive
?,non-directive
'@since 3.1\n',non-directive
?,non-directive
' @see Reader#read(char[],int,int)\n',non-directive
'@return <code>true</code> if Previous and Next buttons are required,\n   and <code>false</code> if none are needed\n',non-directive
'@return  the value in the map as a boolean, or defaultValue if the\n    original value is null, the map is null or the boolean conversion\n    fails\n',non-directive
'<p>\nClasses <code>ClassLoader</code>, <code>Process</code>, <code>Runtime</code>,\n<code>SecurityManager</code>, and <code>System</code> provide \"system operations\"\nthat manage the dynamic loading of classes, creation of external processes,\nhost environment inquiries such as the time of day, and enforcement of\nsecurity policies.\n',non-directive
'@since 3.4\n',non-directive
?,non-directive
'\n Construct a new <code>BufferOverflowException</code>.\n \n @param message  the detail message for this exception\n',non-directive
'@see #setPageSize(int,int)\n',non-directive
?,non-directive
' Helper method to construct a <code>FontData</code> from the given string.\n String is in the form FontData;FontData; in order that\n multiple FontDatas can be defined.\n @param value the identifier for the font\n @return FontData[]\n \n @since 3.0\n',non-directive
'// Get a MBean proxy for RuntimeMXBean interface\n   RuntimeMXBean proxy = \n       ManagementFactory.newPlatformMXBeanProxy(mbs,\n                                                ManagementFactory.RUNTIME_MXBEAN_NAME,\n                                                RuntimeMXBean.class);\n   // Get standard attribute \"VmVendor\" \n   String vendor = proxy.getVmVendor();\n</pre></blockquote>\n</ol>\n\n\n',non-directive
'@return the label control\n',non-directive
'</p>\n<p>\n<tt>DecoratedField</tt> can also be used to decorate a control.  ',non-directive
' Justify specifies whether the controls in a row should be fully\n justified, with any extra space placed between the controls.\n \n',non-directive
?,non-directive
?,non-directive
?,non-directive
' Return the cancel button if the id is a the cancel id.\n \n @param id\n            the button id\n @return the button corresponding to the button id\n',non-directive
'a control that replaces a hover\n with an enriched and focusable control.\n ',non-directive
' Replaces the following style attributes of the font definition of the <code>html</code>\n element:\n <ul>\n ',non-directive
'@since 1.1\n',non-directive
' IPersistentPreferenceStore is a preference store that can \n be saved.\n',non-directive
?,non-directive
'An applet is an \nembeddable window (see the Panel class) with a few extra methods that the applet \ncontext can use to initialize, start, and stop the applet.\n',non-directive
'@param documentOffset an offset within the document for which context\n           information should be computed\n ',non-directive
?,non-directive
?,non-directive
' Provides utility methods and decorators for\n {@link Map} and {@link SortedMap} instances.\n <p>\n It contains various type safe methods\n as well as other useful features like deep copying.\n <p>\n It also provides the following decorators:\n\n  <ul>\n  <li>{@link #fixedSizeMap(Map)}\n  <li>{@link #fixedSizeSortedMap(SortedMap)}\n  <li>{@link #lazyMap(Map,Factory)}\n  <li>{@link #lazyMap(Map,Transformer)}\n  <li>{@link #lazySortedMap(SortedMap,Factory)}\n  <li>{@link #lazySortedMap(SortedMap,Transformer)}\n  <li>{@link #predicatedMap(Map,Predicate,Predicate)}\n  <li>{@link #predicatedSortedMap(SortedMap,Predicate,Predicate)}\n  <li>{@link #transformedMap(Map, Transformer, Transformer)}\n  <li>{@link #transformedSortedMap(SortedMap, Transformer, Transformer)}\n  <li>{@link #multiValueMap( Map )}\n  <li>{@link #multiValueMap( Map, Class )}\n  <li>{@link #multiValueMap( Map, Factory )}\n  </ul>\n\n @since Commons Collections 1.0\n @version $Revision: 956291 $ $Date: 2010-06-19 22:30:20 +0200 (Sat, 19 Jun 2010) $\n\n @author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n @author <a href=\"mailto:nissim@nksystems.com\">Nissim Karpenstein</a>\n @author <a href=\"mailto:knielsen@apache.org\">Kasper Nielsen</a>\n @author Paul Jack\n @author Stephen Colebourne\n @author Matthew Hawthorne\n @author Arun Mammen Thomas\n @author Janek Bogucki\n @author Max Rydahl Andersen\n @author <a href=\"mailto:equinus100@hotmail.com\">Ashwin S</a>\n @author <a href=\"mailto:jcarman@apache.org\">James Carman</a>\n @author Neil O\'Toole\n',non-directive
'@link AbstractInformationControlManager}\'s\n control.\n ',non-directive
'@return the value.\n ',non-directive
?,non-directive
'<li>Defining the class in the Java programming language to which the\n\t  SQL UDT will be mapped.  ',non-directive
' Creates a color field editor.\n \n @param name\n            the name of the preference this field editor works on\n @param labelText\n            the label text of the field editor\n @param parent\n            the parent of the field editor\'s control\n',non-directive
'@param name the name of the preference\n ',non-directive
' Helper class to save the enable/disable state of a control including all its\n descendent controls.\n',non-directive
'<li>Get the MXBean instance through the static factory method\n        and access the MXBean interface locally of the running\n        virtual machine.</li>\n    ',non-directive
' Disposes the SWT resources used by this field editor.\n',non-directive
?,non-directive
?,non-directive
'<li>span(1,1)</li>\n </ul>\n ',non-directive
'\nService provider classes for the classes in the java.util package.\n<!--\n<h2>Package Specification</h2>\n\n##### FILL IN ANY SPECS NEEDED BY JAVA COMPATIBILITY KIT #####\n<ul>\n  <li><a href=\"\">##### REFER TO ANY FRAMEMAKER SPECIFICATION HERE #####</a>\n</ul>\n\n<h2>Related Documentation</h2>\n\nFor overviews, tutorials, examples, guides, and tool documentation, please see:\n<ul>\n  <li><a href=\"\">##### REFER TO NON-SPEC DOCUMENTATION HERE #####</a>\n</ul>\n-->\n\n@since 1.6\n',non-directive
'Other than using the field to manage \nthe decorations themselves, clients are expected to interact \ndirectly with the control.  \n',non-directive
'@param pageName the name of the page\n ',non-directive
' Notifies that the container of this preference page has been canceled.\n \n @return <code>false</code> to abort the container\'s cancel \n  procedure and <code>true</code> to allow the cancel to happen\n',non-directive
'@link javax.management.MBeanServer MBeanServer} \n       interface</i>\n    <ol type=\"a\">\n    ',non-directive
' Sets the background color.\n\n ',non-directive
'@since 3.1\n',non-directive
?,non-directive
' A preference manager maintains a hierarchy of preference nodes and\n associated preference pages.\n',non-directive
'@author Avalon\n ',non-directive
'@since 3.5\n',non-directive
'@param tableTree\n            the control\n \n ',non-directive
'@link SortedMap} instances.\n ',non-directive
'@param renderingMode the rendering mode\n ',non-directive
?,non-directive
' Returns the change button for this field editor.\n\n ',non-directive
' Returns the current value of the font-valued preference with the\n given name in the given preference store.\n Returns the default-default value (<code>FONTDATA_ARRAY_DEFAULT_DEFAULT</code>) \n if there is no preference with the given name, or if the current value \n cannot be treated as font data.\n\n @param store the preference store\n @param name the name of the preference\n @return the font-valued preference\n',non-directive
' An accessor for the index of the default button in the button array.\n \n @return The default button index.\n',non-directive
?,non-directive
?,non-directive
' Converts the given value into an SWT point.\n This method fails if the value does not represent a point.\n <p>\n A valid point representation is a string of the form\n <code><it>x</it>,<it>y</it></code> where\n <code><it>x</it></code> and <code><it>y</it></code>\n are valid ints.\n </p>\n\n @param value the value to be converted\n @return the value as a point\n @exception DataFormatException if the given value does not represent\n\ta point\n',non-directive
'@param toggleState\n            The desired state of the toggle button (<code>true</code>\n            means the toggle should be selected).\n',non-directive
' Informs this field editor\'s listener, if it has one, about a change to\n the value (<code>VALUE</code> property) provided that the old and new\n values are different.\n ',non-directive
'@param keyTransformer the <code>Transformer</code> used to transform the collection value into a key value\n ',non-directive
'<li><code>ColorFieldEditor</code> - RGB colors</li>\n   ',non-directive
'@since 3.1\n',non-directive
' Progress is done.\n',non-directive
?,non-directive
' Indentifier for the error image\n',non-directive
?,non-directive
'A bag stores an object and a count of the number of occurences of the object.\n',non-directive
' Starting button id reserved for internal use by JFace (value 256). JFace\n classes make ids by adding to this number.\n',non-directive
'@see #getCurrentPage\n',non-directive
' Sets the size of this page\'s UI component.\n\n ',non-directive
'@param value the new current value of the preference\n',non-directive
'@param key  the key to look up\n ',non-directive
?,non-directive
'@param lines the line range of the new region\n ',non-directive
'@param map  the map to use\n ',non-directive
'@author <a href=\"mailto:jcarman@apache.org\">James Carman</a>\n ',non-directive
'@param display\n            the <code>Display</code>\n ',non-directive
?,non-directive
'@since 2.1\n',non-directive
'@since 2.0\n',non-directive
' The minimum height; <code>0</code> pixels by default.\n',non-directive
'@param newWizard\n            the wizard\n',non-directive
' Creates a new preference page with an empty title and no image.\n',non-directive
' Gets an iterator that provides an iterator view of the given enumeration\n that will remove elements from the specified collection.\n\n @param enumeration  the enumeration to use\n @param removeCollection  the collection to remove elements from\n @return a new iterator\n',non-directive
'@param value the value to be converted\n ',non-directive
?,non-directive
'@see #spacing(int)\n \n ',non-directive
' Event object describing an <code>IDialogPage</code> in the midst of changing.\n \n',non-directive
'@param name the name of the preference\n ',non-directive
?,non-directive
?,non-directive
'@return <code>true</code> if a progress monitor is required,\n   and <code>false</code> if none is needed\n',non-directive
' A mutator for the key of the preference to be modified by the toggle\n button.\n \n @param prefKey\n            The prefKey to set. If this value is <code>null</code>,\n            then no preference will be modified.\n',non-directive
?,non-directive
' Creates a new dialog page with the given title.\n \n',non-directive
'@version 1.9, 10/04/02\n',non-directive
'<li>Defining the SQL structured type or <code>DISTINCT</code> type in SQL\n  ',non-directive
'}\n\n</pre></blockquote>\n\n',non-directive
' Gets an iterator that transforms the elements of another iterator.\n ',non-directive
?,non-directive
?,non-directive
' The default-default value for int preferences (<code>0</code>).\n',non-directive
'Returns the given default value if the \n value does not represent a float.\n\n ',non-directive
' Adds (or replaces) a color to this color registry under the given \n symbolic name.\n <p>\n A property change event is reported whenever the mapping from a symbolic\n name to a color changes. The source of the event is this registry; the\n property name is the symbolic color name.\n </p>\n \n @param symbolicName the symbolic color name\n @param colorData an <code>RGB</code> object\n',non-directive
?,non-directive
?,non-directive
'@since 3.4\n',non-directive
?,non-directive
'@param delta the difference in lines compared to the original\n ',non-directive
'<p>\n Thus a preference store maintains two values for each of a set of\n names: a current value and a default value.\n ',non-directive
?,non-directive
'<li><a href=\"\">##### REFER TO NON-SPEC DOCUMENTATION HERE #####</a>\n</ul>\n',non-directive
?,non-directive
?,non-directive
?,non-directive
'\n\nProvides support for RMI Object Activation.  ',non-directive
'@param predicatesAndClosures  a map of predicates to closures\n ',non-directive
' Validates the input.\n ',non-directive
'@param key  the key of the value to look up in that map\n  ',non-directive
' Returns whether an empty string is a valid value.\n\n @return <code>true</code> if an empty string is a valid value, and\n  <code>false</code> if an empty string is invalid\n @see #setEmptyStringAllowed\n',non-directive
'@param predicate  the predicate to use as an end of loop test, not null\n ',non-directive
?,non-directive
?,non-directive
'Each predicate is evaluated\n until one returns true. ',non-directive
' Create a ProgressIndicator as a child under the given parent.\n \n',non-directive
?,non-directive
'@since 3.0\n',non-directive
'@see org.eclipse.jface.window.ApplicationWindow\n ',non-directive
'\n\nProvides classes and interfaces for parsing and managing\ncertificates, certificate revocation lists (CRLs), and \ncertification paths. It contains support for X.509 v3 \ncertificates and X.509 v2 CRLs.\n\n<h2>Package Specification</h2>\n\n<ul>\n  <li><a href=\"../../../../technotes/guides/security/crypto/CryptoSpec.html\"><b>Cryptography\n   Architecture</b></a>\n  <li>RFC 2459: X.509 Certificate and CRL Profile\n</ul>\n\n<h2>Related Documentation</h2>\n\nFor information about X.509 certificates and CRLs, please see:\n<ul>\n  <li><a href=\"http://www.ietf.org/rfc/rfc2459.txt\">\nhttp://www.ietf.org/rfc/rfc2459.txt</a>\n  <li><a href=\"../../../../technotes/guides/security/cert3.html\">\nX.509 Certificates and CRLs</a>\n</ul>\n\n@since 1.2\n',non-directive
'<p>A key specification is a transparent representation of the key material\nthat constitutes a key. ',non-directive
?,non-directive
?,non-directive
'@param message\n            the message\n',non-directive
'@param defaultObject the new default value for the preference\n',non-directive
'</p>\n\n ',non-directive
'There are two ways to use GridLayoutFactory.\n ',non-directive
' Creates a new string button field editor \n',non-directive
' Creates the progress monitor\'s UI parts and layouts them\n according to the given layout. If the layout is <code>null</code>\n the part\'s default layout is used.\n @param layout The layout for the receiver.\n @param progressIndicatorHeight The suggested height of the indicator\n',non-directive
' Sets the minimum page size used for the pages.\n \n',non-directive
'</p>\n\n ',non-directive
'Creates the described font on demand.\n ',non-directive
'@link java.util.SortedSet SortedSet} interfaces.\n',non-directive
'@return <code>true</code> if a replace is in progress\n',non-directive
?,non-directive
'@throws BadLocationException if computing the edit failed\n',non-directive
' Creates a RowLayoutFactory that creates RowLayouts with no margins, fill\n behavior, and default dialog spacing.\n \n',non-directive
'<li>Lazy - creates objects in the list on demand</li>\n',non-directive
'@param closure1  the first closure\n ',non-directive
' The Finish button has been pressed.\n',non-directive
?,non-directive
?,non-directive
' Returns a previously allocated resource associated with the given descriptor, or\n null if none exists yet. \n \n @since 3.1\n\n @param descriptor descriptor to find\n @return a previously allocated resource for the given descriptor or null if none.\n',non-directive
?,non-directive
?,non-directive
' Adds a property change listener to this registry.\n \n',non-directive
'@param text the new text\n',non-directive
' Creates and returns a new image descriptor given ImageData\n describing the image.\n \n',non-directive
' Creates a new preference manager.\n',non-directive
' Creates a mult-value map backed by the given map which returns\n collections of type ArrayList.\n\n ',non-directive
' Set the layout data of the button to a GridData with appropriate heights\n and widths.\n \n @param button\n',non-directive
'@param key the key\n',non-directive
'\nProvides a framework for rule based text scanning\nand uses the framework to provide rule-driven default implementations of\n<tt>IPresentationDamager</tt>, <tt>IPresentationRepairer</tt> and <tt>IDocumentPartitioner</tt>.\n<h2>\nPackage Specification</h2>\n<tt>RuleBasedScanner</tt> is a document-based scanner controlled by <tt>IRule</tt>\nobjects. When evaluated an <tt>IRule</tt> always returns an <tt>IToken</tt>.\nThe package provides a set of rules whereby <tt>PatternRule</tt> is the\nmost important one. <tt>PatternRule</tt> defines a pattern-configurable\nrule.\n',non-directive
' Returns whether the given status object should be displayed.\n \n',non-directive
' Gets an empty map iterator.\n <p>\n This iterator is a valid map iterator object that will iterate\n over nothing.\n\n @return  a map iterator over nothing\n',non-directive
' Sets the size of this page\'s UI component.\n\n @param size the size of the preference page encoded as\n   <code>new Point(width,height)</code>\n',non-directive
'@return a new enumeration\n ',non-directive
'\n\n\nProvides reference-object classes, which support a limited degree of\ninteraction with the garbage collector.  ',non-directive
'A BidiMap is an extension to Map that allows keys and values to be looked up with equal ease.\n',non-directive
' Gets a list based on an iterator.\n <p>\n As the wrapped Iterator is traversed, an ArrayList of its values is\n created. At the end, the list is returned.\n\n @param iterator  the iterator to use, not null\n @param estimatedSize  the initial size of the ArrayList\n @return a list of the iterator contents\n @throws NullPointerException if iterator parameter is null\n @throws IllegalArgumentException if the size is less than 1\n',non-directive
'@since 3.5\n',non-directive
'<li>ListOrdered - ensures that insertion order is retained\n</ul>\n',non-directive
' The margin width; <code>5</code> pixels by default.\n',non-directive
?,non-directive
?,non-directive
' Undoes everything that was done by {',non-directive
'@param value the new default value of the preference\n',non-directive
'<li>equalWidth(false)</li>\n </ul>\n ',non-directive
?,non-directive
?,non-directive
' Adds the pair <code>key/value</code> to this dialog settings.\n \n',non-directive
?,non-directive
' Text limit constant (value <code>-1</code>) indicating unlimited\n text limit and width.\n',non-directive
' Sets the width and height hints. ',non-directive
'@since 3.3\n',non-directive
?,non-directive
' Creates a new FontDescriptor given an OS-specific font name, height, and style.\n \n',non-directive
'@see org.apache.commons.collections.functors.NOPClosure\n \n ',non-directive
'@author Paul Jack\n ',non-directive
'@param blockingStatus The status that describes the blockage\n ',non-directive
'The button heights are now determined by the layout.\n',non-directive
?,non-directive
' Gets an iterator over the end part of an object or primitive array.\n <p>\n This method will handle primitive arrays as well as object arrays.\n The primitives will be wrapped in the appropriate wrapper class.\n\n @param array  the array over which to iterate\n @param start  the index to start iterating at\n @return an iterator over part of the array\n @throws IllegalArgumentException if the array is not an array\n @throws IndexOutOfBoundsException if start is less than zero or greater\n  than the length of the array\n @throws NullPointerException if array is null\n',non-directive
'<p>\n This iterator is a valid map iterator object that will iterate\n over nothing.\n\n ',non-directive
?,non-directive
'@param key  the key of the value to look up in that map\n  ',non-directive
'\n\nProvides classes that are fundamental to the design of the Java\nprogramming language. ',non-directive
' Converts the given value into a boolean.\n ',non-directive
' Tests whether this page\'s UI content has already been created.\n \n @return <code>true</code> if the control has been created, and\n         <code>false</code> if not\n',non-directive
'@return the value in the Map as a byte, <code>defaultValue</code> if null map input\n',non-directive
' Sets the preference store used by this field editor.\n\n ',non-directive
'</dd>\n<dt><code>Can-Retransform-Classes</code></dt>\n',non-directive
?,non-directive
?,non-directive
' Creates an empty font registry.\n\n ',non-directive
'<li>Transformed - transforms elements as they are added\n</ul>\n',non-directive
'The data type mapping is specified in the\n{',non-directive
?,non-directive
' Adds a listener for page changes to the list of page changing listeners\n registered for this dialog. Has no effect if an identical listener is\n already registered.\n \n @param listener\n            a page changing listener\n @since 3.3\n',non-directive
'\nProvides support for layout generation. \n',non-directive
' Sets the end of this range, keeping {',non-directive
?,non-directive
?,non-directive
' Converts the given boolean object to a string.\n ',non-directive
'\n<p>\nInternal support classes and helpers for the <tt>org.eclipse.jface.text.source</tt> package.\n',non-directive
'@param reason\n            IStatus that gives the details\n',non-directive
'@param enabled indicates whether auto activation is enabled or not\n',non-directive
' Reveals the given region. ',non-directive
' Converts the given value into a float.\n This method fails if the value does not represent a float.\n\n @param value the value to be converted\n @return the value as a float\n @exception DataFormatException if the given value does not represent\n\ta float\n',non-directive
?,non-directive
'<LI>Ability to retrieve values from automatically generated columns\n  ',non-directive
?,non-directive
' The <code>WizardPage</code> implementation of this method declared on\n <code>DialogPage</code> returns the shell of the container.\n ',non-directive
' Loads this preference store from the given input stream. Default\n preference values are not affected.\n \n @param in\n            the input stream\n @exception java.io.IOException\n                if there is a problem loading this store\n',non-directive
'This allows callers to start with the generated values and tweak one or two settings\n before applying the GridData to the control.\n ',non-directive
'<h2>Related Documentation</h2>\n\nFor overviews, tutorials, examples, guides, and tool documentation, please see:\n<ul>\n  ',non-directive
'@see StringButtonFieldEditor#VALIDATE_ON_KEY_STROKE\n ',non-directive
' Returns the currentPage.\n @return IPreferencePage\n @since 3.1\n',non-directive
'@return the number of pixels\n',non-directive
' Gets a list iterator over the end part of an object or primitive array.\n ',non-directive
'@return the title bar color\n',non-directive
'@since 3.1\n \n ',non-directive
'@since 3.0\n',non-directive
'@see ColorRegistry#get(String)\n ',non-directive
' Gets a Float from a Map in a null-safe manner.\n <p>\n The Float is obtained from the results of {@link #getNumber(Map,Object)}.\n\n @param map  the map to use\n @param key  the key to look up\n @return the value in the Map as a Float, <code>null</code> if null map input\n',non-directive
'<li>HORIZONTAL: Position the controls horizontally from left to right</li>\n ',non-directive
' Returns the position category.\n\n ',non-directive
' Left margin in dialog units (value 20).\n',non-directive
'Although the JDBC<sup><font size=-2>TM</font></sup> API is mainly geared \nto passing SQL statements to a database, it provides for reading and\nwriting data from any data source with a tabular format.\n',non-directive
?,non-directive
'Converts the int <code>value</code> to a string and\n adds the pair <code>key/value</code> to this dialog settings.\n \n',non-directive
'@author Max Rydahl Andersen\n ',non-directive
' Validation strategy constant (value <code>0</code>) indicating that\n the editor should perform validation after every key stroke.\n\n ',non-directive
?,non-directive
'@return <code>true</code> if there is a value for this key\n',non-directive
' Creates a new boolean field editor\n',non-directive
'<li>Making an entry in a <code>Connection</code> object\'s type map\n      that contains two things:\n   <ul>\n       ',non-directive
?,non-directive
'@param heightDelta a change in height, in points. ',non-directive
'<p>\n The long is obtained from the results of {',non-directive
?,non-directive
?,non-directive
?,non-directive
' Sets the width and height hints. ',non-directive
?,non-directive
'@link GC} for all model (document) lines in\n <code>visibleModelLines</code>.\n\n ',non-directive
' {@inheritDoc}\n \n ',non-directive
'<p>\n The result of this method is typically used by the wizard container to enable\n or disable the Finish button.\n ',non-directive
'The reader/writer facility, available through the \n<code>javax.sql.RowSet</code> group of interfaces, can be customized to\nuse and update data from a spread sheet, flat file, or any other tabular \ndata source.\n',non-directive
' Sets this dialog page\'s image.\n\n @param image the image for this dialog page, \n  or <code>null</code> if none\n',non-directive
?,non-directive
' Extension interface for {',non-directive
'<h2>Package Specification</h2>\n\n<ul>\n  ',non-directive
'@return a combination iterator over the iterators\n ',non-directive
' Returns an iterator over the subnodes (immediate children)\n of this contribution node.\n\n @return an IPreferenceNode array containing the child nodes\n',non-directive
' Get the composite that is showing the page.\n\n ',non-directive
'<li>wrap(true)</li>\n ',non-directive
' Instantiate a new title area dialog.\n \n',non-directive
' Post-order means visit the children, and then the root.\n',non-directive
' An abstract base class for dialogs with a status bar and OK/CANCEL buttons.\n ',non-directive
?,non-directive
'@return a combination iterator over the iterators\n ',non-directive
?,non-directive
' Creates a new RowDataFactory initialized with the SWT defaults.\n \n <p>\n Initial values are:\n </p>\n \n <ul>\n <li>exclude(false)</li>\n <li>hint(SWT.DEFAULT, SWT.DEFAULT)</li>\n </ul>\n \n @return a new GridDataFactory instance\n',non-directive
'@param value the integer object\n ',non-directive
?,non-directive
'Templates are specified as text, variables are defined using the <tt>${variable}</tt>\nnotation known from\nAnt, for example. ',non-directive
' Gets a double from a Map in a null-safe manner,\n using the default value if the the conversion fails.\n <p>\n The double is obtained from the results of {@link #getNumber(Map,Object)}.\n\n @param map  the map to use\n @param key  the key to look up\n @param defaultValue  return if the value is null or if the\n     conversion fails\n @return the value in the Map as a double, <code>defaultValue</code> if null map input\n',non-directive
'@see org.apache.commons.collections.functors.SwitchClosure\n \n ',non-directive
' Gets a Short from a Map in a null-safe manner.\n <p>\n The Short is obtained from the results of {@link #getNumber(Map,Object)}.\n\n @param map  the map to use\n @param key  the key to look up\n @return the value in the Map as a Short, <code>null</code> if null map input\n',non-directive
'@param mw\n            the margin width\n ',non-directive
' Creates a new wizard selection page with the given name, and\n with no title or image.\n\n ',non-directive
?,non-directive
'@see org.eclipse.swt.widgets.Scale#setPageIncrement(int)\n',non-directive
'@param iterator  the iterator to make immutable\n ',non-directive
'Returns the given default value if the \n value does not represent a double.\n\n ',non-directive
'@return the hashmap containing the data\n ',non-directive
' Undoes whatever was done by createColor. \n \n',non-directive
' The Next button has been pressed.\n',non-directive
?,non-directive
'Otherwise, <code>defaultValue</code> is returned.\n\n ',non-directive
' Gets a button in this dialog\'s button bar.\n \n @param index\n            the index of the button in the dialog\'s button bar\n @return a button in the dialog\'s button bar\n',non-directive
'@exception DataFormatException if the given value does not represent\n\ta point\n',non-directive
?,non-directive
' Returns the default value for the integer-valued preference\n with the given name.\n Returns the default-default value (<code>0</code>) if there\n is no default preference with the given name, or if the default \n value cannot be treated as an integer.\n\n @param name the name of the preference\n @return the default value of the named preference\n',non-directive
' Sets the default value for the boolean-valued preference with the\n given name. \n ',non-directive
' Stores this field editor\'s value back into the preference store.\n',non-directive
'@param max the maximum allowed value (inclusive)\n',non-directive
?,non-directive
'@param closures  a collection of closures to chain\n ',non-directive
' The label control for the task. Kept for backwards compatibility.\n',non-directive
'</p>\n\n ',non-directive
?,non-directive
' Gets a float from a Map in a null-safe manner.\n <p>\n The float is obtained from the results of {@link #getNumber(Map,Object)}.\n\n @param map  the map to use\n @param key  the key to look up\n @return the value in the Map as a float, <code>0.0F</code> if null map input\n',non-directive
'@link ITextSelection}s.\n \n',non-directive
'Character keys are keys that have an ASCII representation (e.g., Space, \'A\' and\nBackspace).  ',non-directive
?,non-directive
' Sets the title image to be shown in the title area of this dialog.\n \n',non-directive
' Convenience API. ',non-directive
'@author Stephen Colebourne\n ',non-directive
'<li><a href=\"\">##### REFER TO ANY FRAMEMAKER SPECIFICATION HERE #####</a>\n</ul>\n\n',non-directive
'@since 3.5\n',non-directive
'@return the number of pixels\n',non-directive
'@param iterator  the iterator to use, not null\n ',non-directive
' Return the Down button.  \n \n',non-directive
'@param original array to copy\n ',non-directive
'This is the usual way to convert a Color into\n a ColorDescriptor. ',non-directive
'<li>hint(SWT.DEFAULT, SWT.DEFAULT)</li>\n ',non-directive
' Retained for backward compatibility.\n \n Returns the title area composite. There is no composite in this\n implementation so the shell is returned.\n \n @return Composite\n @deprecated\n',non-directive
'@param value the identifier for the font\n ',non-directive
?,non-directive
?,non-directive
'A completion can also\nbe a incomplete in itself and content assist provides means to deal with\nnested completions.\n',non-directive
' The standard implementation of the {',non-directive
'@param newPage\n',non-directive
' Creates a GridDataFactory initialized with defaults that will cause\n the control to fill its cell. ',non-directive
?,non-directive
'<li>Federal Information Processing Standards Publication (FIPS PUB) 186:\n    Digital Signature Standard (DSS)</li>\n</ul>\n\n',non-directive
'@return a new RowLayout\n',non-directive
'@since\t  1.2\n\n<!--\n<h2>Related Documentation</h2>\n\nFor overviews, tutorials, examples, guides, and tool documentation, please see:\n<ul>\n  ',non-directive
' Creates a new preference manager with the given\n path separator.\n \n @param separatorChar\n',non-directive
' Returns the default minimum button size, in pixels\n \n @return the default minimum button size, in pixels\n',non-directive
'@param imageDescriptor\n            the default page image descriptor\n',non-directive
'This method fails if the value does not represent an int.\n\n ',non-directive
?,non-directive
'@return a new FontDescriptor with the given style\n \n ',non-directive
'@see  org.eclipse.core.runtime.IProgressMonitorWithBlocking#setBlocked(IStatus)\n ',non-directive
' Set the current page to be newPage.\n \n',non-directive
' Registers a given content assist processor for a particular content type.\n If there is already a processor registered for this type, the new processor\n is registered instead of the old one.\n\n @param processor the content assist processor to register, or <code>null</code> to remove an existing one\n @param contentType the content type under which to register\n',non-directive
'<p>\nThe following implementations are provided in the package:\n<ul>\n',non-directive
' Get the page for the node.\n ',non-directive
' Returns whether the current page is valid.\n \n',non-directive
'</p>\n\n ',non-directive
'Use the method <code>setTextLimit</code> to limit the text.\n \n',non-directive
?,non-directive
'<p>\n The dialog store is used to record state between\n wizard invocations (for example, radio button selections,\n last directory, etc.).\n ',non-directive
' Returns the default image that will be returned in the event that the intended\n image is missing.\n \n',non-directive
?,non-directive
'@see IPageChangingListener#handlePageChanging(PageChangingEvent)\n ',non-directive
'<p>\n The byte is obtained from the results of {',non-directive
'@param enforceAbsolute <code>true</code> if the file path\n  must be absolute, and <code>false</code> otherwise\n ',non-directive
'@param name the name of the preference\n ',non-directive
'@since 3.2\n',non-directive
?,non-directive
'@return <code>true</code> if the iterator has a previous element\n',non-directive
'These are usually used in maps, however they can be used as data holders in any collection.\n',non-directive
'@return the number of pixels\n',non-directive
' Returns the top level control for this dialog page.\n ',non-directive
?,non-directive
?,non-directive
'@see Wizard\n',non-directive
'@throws NullPointerException if iterators array is null or contains a null\n',non-directive
'@return the value as a RGB color value, or the default value\n',non-directive
'@since\t  1.5\n\n',non-directive
'</p> \n \n ',non-directive
' Returns the default value for the integer-valued preference\n with the given name.\n ',non-directive
' Sets the current value of the preference with the given name\n in the given preference store. ',non-directive
' A field editor for an enumeration type preference.\n The choices are presented as a list of radio buttons.\n',non-directive
' Identifier for the color used for the background of content assist\n popup dialogs.\n \n @since 3.4\n',non-directive
'</OL>\n\n',non-directive
?,non-directive
'@link #start()} constant.\n\n ',non-directive
'@param defaultValue  what to return if the value is null or if the\n     conversion fails\n  ',non-directive
'@return the default color to use for displaying errors.\n ',non-directive
'@link org.apache.commons.collections.SortedBidiMap SortedBidiMap} interfaces.\n',non-directive
' Creates a string field editor.\n ',non-directive
' Set the IDialogBlockedHandler to be used by WizardDialogs and\n ModalContexts.\n \n',non-directive
?,non-directive
'<LI>Metadata\n  <UL>\n\t ',non-directive
'@param selection the selection\n ',non-directive
' Sets the margins for layouts created with this factory. ',non-directive
' @param display the display the color is from\n @return the default color to use for displaying active hyperlinks.\n @see ColorRegistry#get(String)\n @see JFacePreferences#ACTIVE_HYPERLINK_COLOR\n',non-directive
'<LI>Scrollable result sets--using new methods in the <code>ResultSet</code>\n\t  interface that allow the cursor to be moved to a particular row or to a\n\t  position relative to its current position\n  ',non-directive
?,non-directive
'@return Point The image size\n  \n',non-directive
'@since 3.2\n',non-directive
'<li><a href=\"\">##### REFER TO NON-SPEC DOCUMENTATION HERE #####</a>\n</ul>\n',non-directive
'Converts the double <code>value</code> to a string and\n adds the pair <code>key/value</code> to this dialog settings.\n \n',non-directive
?,non-directive
'@version  1.11, 04/02/10\n',non-directive
'@return this\n',non-directive
?,non-directive
' Button id for a \"Cancel\" button (value 1).\n',non-directive
?,non-directive
'<li>Use MXBean proxy.</li>\n<blockquote><pre>\n   MBeanServerConnection mbs;\n\n   // Connect to a running JVM (or itself) and get MBeanServerConnection\n   // that has the JVM MBeans registered in it\n   ...\n\n   ',non-directive
' Returns the IDialogSettings name.\n \n @return the name\n',non-directive
' Adds the listener to the collection of listeners who will be\n notified when the current location has changed or is about to change.\n\n ',non-directive
' Enables the content assistant\'s auto activation mode.\n\n ',non-directive
'@param toggleState\n            the initial state for the toggle\n  \n',non-directive
'<LI><code>ResultSetMetaData</code> interface -- provides information\n              about the columns of a <code>ResultSet</code> object\n\t ',non-directive
'<p> Instances of the {',non-directive
?,non-directive
?,non-directive
?,non-directive
'@return Button\n',non-directive
'@author <a href=\"mailto:equinus100@hotmail.com\">Ashwin S</a>\n ',non-directive
?,non-directive
?,non-directive
' Replaces the following style attributes of the font definition of the <code>html</code>\n element:\n <ul>\n <li>font-size</li>\n <li>font-weight</li>\n <li>font-style</li>\n <li>font-family</li>\n </ul>\n The font\'s name is used as font family, a <code>sans-serif</code> default font family is\n appended for the case that the given font name is not available.\n <p>\n If the listed font attributes are not contained in the passed style list, nothing happens.\n </p>\n\n @param styles CSS style definitions\n @param fontData the font information to use\n @return the modified style definitions\n @since 3.3\n',non-directive
'@link java.util.List List} interface.\n',non-directive
'@return the border Color for widgets that display errors.\n ',non-directive
'@return <code>true</code> if the control has been created, and\n         <code>false</code> if not\n',non-directive
?,non-directive
' Creates the progress monitor\'s UI parts and layouts them\n according to the given layout. ',non-directive
'@since 3.3\n',non-directive
'@param key\n            the key.\n ',non-directive
?,non-directive
?,non-directive
'@param methodName  the name of the method\n ',non-directive
' The Back button has been pressed.\n',non-directive
'@param window\n            the window to create a GC on for calculation.\n ',non-directive
'@since Commons Collections 3.2\n',non-directive
'<li>KeyValue - a key and value pair, without map entry semantics\n',non-directive
'@param listener a property change listener\n',non-directive
' Defines a functor interface implemented by classes that transform one\n object into another.\n ',non-directive
' Creates the preference page for this node.\n',non-directive
' Returns the leading image width.\n\n @return the size of the leading image, by default <code>0</code> is returned\n @since 3.4\n',non-directive
'@return a FontDescriptor whose height differs from the reciever by the given number\n of points. \n ',non-directive
' Removes the given preference node from the list of subnodes\n (immediate children) of this node.\n\n @param node the node to remove\n @return <code>true</code> if the node was removed,\n  and <code>false</code> otherwise\n',non-directive
?,non-directive
'@see #getDialogBoundsSettings()\n ',non-directive
?,non-directive
'@see IMessageProvider\n',non-directive
'<li>CaseInsensitiveMap - map that compares keys in a case insensitive way\n',non-directive
'<ul>\n   ',non-directive
' Gets a Byte from a Map in a null-safe manner.\n ',non-directive
'\nProvides a framework for viewers that handle deferred contents. \n',non-directive
' Sets the title bar color for this wizard.\n \n @param color\n            the title bar color\n',non-directive
'@link String} and\n {',non-directive
'@param layout The SWT grid bag layout used by the part. ',non-directive
' The default-default value for double preferences (<code>0.0</code>).\n',non-directive
?,non-directive
?,non-directive
'@param parent the parent of the field editor\'s control\n',non-directive
?,non-directive
'</ul>\n\n\n',non-directive
'@return the value in the Map as a Boolean, <code>null</code> if null map input\n',non-directive
'@return the default color to use for displaying hyperlinks.\n ',non-directive
' Adds the pair <code>key/value</code> to this dialog settings.\n \n @param key\n            the key.\n @param value\n            the value to be associated with the <code>key</code>\n',non-directive
' Interface for UI components which can execute a long-running operation\n in the form of an <code>IRunnableWithProgress</code>.\n ',non-directive
?,non-directive
'@return the list of adjusted line ranges\n',non-directive
'@link javax.management.openmbean.CompositeData CompositeData},\n        and {',non-directive
'<p>\nThe following decorators are provided in the package:\n<ul>\n',non-directive
'<li>\nfont registries (<tt>FontRegistry</tt>) - for hanging on to the SWT font\nobjects needed by an application</li>\n\n',non-directive
'@see #spacing(int, int)\n',non-directive
?,non-directive
'<dd>Provides a formal grammar for reading and writing key sequences.</dd>\n<dt>NativeKeyFormatter</dt>\n',non-directive
' Sets the current value of the float-valued preference with the\n given name.\n ',non-directive
'@param store the preference store\n ',non-directive
?,non-directive
?,non-directive
' Creates a progress monitor dialog under the given shell. The dialog has a\n standard title and no image. <code>open</code> is non-blocking.\n \n @param parent\n            the parent shell, or <code>null</code> to create a top-level\n            shell\n',non-directive
' Informs this field editor\'s listener, if it has one, about a change to\n one of this field editor\'s boolean-valued properties. Does nothing\n if the old and new values are the same.\n\n @param property the field editor property name, \n   such as <code>VALUE</code> or <code>IS_VALID</code>\n @param oldValue the old value\n @param newValue the new value\n',non-directive
'@param show <code>true</code> to show the author, <code>false</code> to hide it\n',non-directive
'@since 3.3\n',non-directive
?,non-directive
' Title area fields\n',non-directive
'  Looks up the given key in the given map, converting null into the\n  given default value.\n\n  @param map  the map whose value to look up\n  @param key  the key of the value to look up in that map\n  @param defaultValue  what to return if the value is null\n  @return  the value in the map, or defaultValue if the original value\n    is null or the map is null\n',non-directive
?,non-directive
'@param parent\n            The widgets parent\n ',non-directive
' Constant for an info message (value 1).\n',non-directive
' Convenience API. Converts the int <code>value</code> to a string and\n adds the pair <code>key/value</code> to this dialog settings.\n \n @param key\n            the key.\n @param value\n            the value to be associated with the <code>key</code>\n',non-directive
?,non-directive
' Returns this field editor\'s shell.\n\n ',non-directive
'@param value the double value\n ',non-directive
?,non-directive
'@return a new GridDataFactory instance\n',non-directive
' Creates a new field editor.\n',non-directive
' The symbolic font name for the dialog font (value\n <code>\"org.eclipse.jface.dialogfont\"</code>).\n',non-directive
'@return the validator\n',non-directive
'@since 3.5\n',non-directive
' The <code>WizardPage</code> implementation of this method \n declared on <code>DialogPage</code> updates the container\n if this is the current page.\n',non-directive
'@link java.util.logging.LoggingMXBean}.  \n',non-directive
?,non-directive
' Image registry key for info message image (value\n <code>\"dialog_messasge_info_image\"</code>).\n \n @since 2.0\n',non-directive
?,non-directive
'@param defaultValue  what to return if the value is null or if the\n     conversion fails\n  ',non-directive
'<li>margins(0,0)</li>\n ',non-directive
'@since 2.1\n',non-directive
'If there isn\'t any value under the given key, the key is\n returned.\n \n',non-directive
'@since 3.1\n',non-directive
'<li><a href=\"\">##### REFER TO ANY FRAMEMAKER SPECIFICATION HERE #####</a>\n</ul>\n\n',non-directive
?,non-directive
'@param w\n            the control\n',non-directive
' Creates a ProgressMonitorPart.\n ',non-directive
' Sets the wizard this dialog is currently displaying.\n \n @param newWizard\n            the wizard\n',non-directive
?,non-directive
'@param msg the error message\n',non-directive
' Initialize the progress bar.\n \n',non-directive
' The default-default value for long preferences (<code>0L</code>).\n',non-directive
'@link #end()} constant.\n\n ',non-directive
'@link Iterator}s.\n ',non-directive
'@return The string representation of the font data arra.\n ',non-directive
'@param toDestroy a Color that was previously allocated by an equal ColorDescriptor\n',non-directive
?,non-directive
'<li><a href=\"../../../technotes/guides/jdbc/getstart/GettingStartedTOC.fm.html\">Getting Started</a>--overviews of the major interfaces\n<P>\n  ',non-directive
'<li>TreeBidiMap - red-black tree implementation of OrderedBidiMap\n</ul>\n',non-directive
?,non-directive
'For example in \'Foo.txt - myproject/bar\', the qualifier\n is \'- myproject/bar\'.\n \n',non-directive
?,non-directive
'\n<p>\nInternal classes and helpers to implement the revision model and its UI presentation. ',non-directive
'<p>\n The Long is obtained from the results of {',non-directive
' Creates a string button field editor.\n \n',non-directive
' Thrown to indicate that an attempt to create or modify a {',non-directive
'@param <K>\n ',non-directive
?,non-directive
'Convert the value of the given key in this dialog\n settings to a int and return it.\n \n',non-directive
'@since 3.0\n',non-directive
?,non-directive
' Creates a string field editor.\n ',non-directive
' Returns the default font to use for this dialog page.\n \n',non-directive
'@return a new FontDescriptor with the given additional style bits\n ',non-directive
' Vertical margin in dialog units (value 7).\n',non-directive
' Returns the default value for the long-valued preference\n with the given name.\n Returns the default-default value (<code>0L</code>) if there\n is no default preference with the given name, or if the default \n value cannot be treated as a long.\n\n @param name the name of the preference\n @return the default value of the named preference\n',non-directive
' The progress indicator control.\n',non-directive
'<h2>\nPackage Specification</h2>\nContribution managers coordinate contributions to shared UI resources such\nas menus, menu bars, tool bars, and status lines. ',non-directive
'@param lines the number of lines to query\n ',non-directive
' Updates the title to reflect the state of the \n currently active page in this container.\n ',non-directive
'@link #getNumber(Map,Object)}.\n\n ',non-directive
'@param key\n            the key\n ',non-directive
?,non-directive
'@param node the starting node\n ',non-directive
'@param node\n \n ',non-directive
?,non-directive
'The primitives will be wrapped in the appropriate wrapper class.\n\n ',non-directive
' Returns the predecessor of the given page.\n ',non-directive
' EnumerationUtils is not normally instantiated.\n',non-directive
?,non-directive
' Returns the global resource manager for the given display\n \n ',non-directive
'@param complete <code>true</code> if this page is complete, and\n   and <code>false</code> otherwise\n ',non-directive
?,non-directive
'@return the value in the Map as a Byte, <code>null</code> if null map input\n',non-directive
' Instantiate a new title area dialog.\n \n @param parentShell\n            the parent SWT shell\n',non-directive
?,non-directive
'@param store the preference store\n ',non-directive
'Individual dialogs may always set the shell \n style to ensure that a dialog is resizable, but using this\n method ensures that resizable dialogs will be created with\n the same set of style bits.\n \n',non-directive
'@since 3.1 \n\n ',non-directive
'@return a list iterator over part of the array\n ',non-directive
?,non-directive
'@param name the name of the preference\n ',non-directive
' Returns the preference page for this node.\n\n ',non-directive
' Creates the buttons for this dialog\'s button bar.\n ',non-directive
'<h2>Related Documentation</h2>\n\nFor overviews, tutorials, examples, guides, and tool documentation, please see:\n<ul>\n  ',non-directive
' A position updater that never deletes a position. ',non-directive
' Computes a size for this page\'s UI component. \n\n @return the size of the preference page encoded as\n   <code>new Point(width,height)</code>, or \n   <code>(0,0)</code> if the page doesn\'t currently have any UI component\n',non-directive
'<li><a href=\"\">##### REFER TO NON-SPEC DOCUMENTATION HERE #####</a>\n</ul>\n',non-directive
' Sets or clears the container of this page.\n\n @param preferencePageContainer the preference page container, or <code>null</code> \n',non-directive
'\n<p>\nThis package contains implementations of the\n{',non-directive
'@return the color-valued preference\n',non-directive
?,non-directive
?,non-directive
' Gets a list iterator over the end part of an object array.\n\n ',non-directive
?,non-directive
' Removes the provided page changing listener from the list of page\n changing listeners registered for the dialog.\n \n @param listener\n            a page changing listener\n @since 3.3\n',non-directive
'The mechanism for instrumentation is modification of the byte-codes of methods.\n\n',non-directive
' Update the tree to use the specified <code>Font</code>.\n \n',non-directive
?,non-directive
' Creates a new processor on the given viewer.\n \n @param viewer the viewer\n',non-directive
?,non-directive
'@param offset the offset of the selection based on the subject\'s model e.g. ',non-directive
'@param name the name of the preference this field editor works on\n ',non-directive
' Returns the current value of the integer-valued preference with the\n given name.\n Returns the default-default value (<code>0</code>) if there\n is no preference with the given name, or if the current value \n cannot be treated as an integter.\n\n @param name the name of the preference\n @return the int-valued preference\n',non-directive
' Sets the margins for layouts created with this factory. ',non-directive
'@param defaultValue  return if the value is null or if the\n     conversion fails\n ',non-directive
'<li><code>int</code> = <code>0</code></li>\n  ',non-directive
'@link org.apache.commons.collections.BidiMap BidiMap},\n{',non-directive
'@throws IllegalArgumentException if the closures collection is empty\n ',non-directive
'@link #delete(ISelection)} to the\n underlying document.\n \n',non-directive
?,non-directive
' Create a default instance of the blocked handler which does not do\n anything.\n',non-directive
'If the future extension to the standard management interface defines\na new attribute for a management interface and the attribute name\nis happened to be same as some vendor-specific attribute\'s name,\nthe applications accessing that vendor-specific attribute would have\nto be modified to cope with versioning and compatibility issues.\n\n',non-directive
' Instructs the GridLayout to ignore this control when performing layouts.\n \n',non-directive
'@return the value.\n ',non-directive
' An empty unmodifiable map.\n ',non-directive
' Converts a font data object to a string. The string representation is\n \"font name-style-height\" (for example \"Times New Roman-bold-36\").\n @param value The font data.\n @return The string representation of the font data object.\n',non-directive
'@param map  the map to use\n ',non-directive
'@param name\n            the name of the preference this field editor works on\n ',non-directive
' Provides a tree model for <code>PreferenceManager</code> content.\n \n @since 3.0\n',non-directive
?,non-directive
?,non-directive
' Returns the Restore Defaults button.\n \n',non-directive
?,non-directive
'</p>\n\n ',non-directive
'</p>\n\n ',non-directive
?,non-directive
'@return the title image label\n',non-directive
'<li><code>getText(Object)</code> provides the hover info text.\n     ',non-directive
' Gets a byte from a Map in a null-safe manner,\n using the default value if the the conversion fails.\n ',non-directive
'     /**\n Breaks out space-separated words into an array of words.\n ',non-directive
?,non-directive
'Short equivalent of {',non-directive
?,non-directive
'@throws NullPointerException if array is null\n',non-directive
'@return a <code>Range</code> with the same start and length as <code>range</code>\n ',non-directive
'<code>getCurrentPage</code> returns the\n current page; <code>showPage</code> programmatically changes the\n the current page. ',non-directive
'<li><code>long</code> = <code>0</code></li>\n \t',non-directive
'<li>justify(false)</li>\n ',non-directive
' Button height in dialog units (value 14).\n \n @deprecated This constant is no longer in use.\n The button heights are now determined by the layout.\n',non-directive
' Lightweight descriptor for a font. ',non-directive
'@param map  the map whose value to look up\n  ',non-directive
' Set the current page to be newPage.\n \n @param newPage\n',non-directive
'@param iterators  the iterators to use, not null or empty or contain nulls\n ',non-directive
'@param name the name of the preference this field editor works on\n ',non-directive
'<h2>\nPackage Specification</h2>\n<tt>IContentAssistant</tt> defines the concept of the content assist add-on.\n',non-directive
'@since 3.4\n',non-directive
' The symbolic font name for the standard font (value\n <code>\"org.eclipse.jface.defaultfont\"</code>).\n',non-directive
' Set the GridData on button to be one that is spaced for the\n current font.\n ',non-directive
'@param range the range to copy\n ',non-directive
' Returns the successor of the given page.\n ',non-directive
' @param display the display the color is from\n @return the Color used for banner foregrounds\n @see SWT#COLOR_LIST_FOREGROUND\n @see Display#getSystemColor(int)\n',non-directive
' Sets the context information popup\'s background color.\n\n @param background the background color\n',non-directive
' Margin height (in pixels) to be used in layouts inside popup dialogs\n (value is 0).\n',non-directive
'@since 3.0\n',non-directive
?,non-directive
' Sets the location of the page so that its origin is in the upper left\n corner.\n \n @param w\n            the control\n',non-directive
?,non-directive
' The label for show details buttons.\n',non-directive
'@return the interpolated color\n',non-directive
'Converts the float <code>value</code> to a string and\n adds the pair <code>key/value</code> to this dialog settings.\n \n',non-directive
' Convenience API. ',non-directive
'<li><code>FileFieldEditor</code> - files</li>\n   ',non-directive
' Constant for a simple dialog with the question image and Yes/No/Cancel buttons (value 6).\n \n',non-directive
?,non-directive
' Return the preference store for the receiver.\n \n',non-directive
'<li><tt>getHyperlinkDetectors()</tt> to specify the set of hyperlink detectors used by the viewer</li>\n  ',non-directive
' The value of the preference when the user wishes to prompted for an\n answer every time the question is to be asked.\n',non-directive
'@return the text covered by <code>selection</code>\n ',non-directive
'</p>\n\n ',non-directive
?,non-directive
' Returns the current value of the string-valued preference with the\n given name.\n Returns the default-default value (the empty string <code>\"\"</code>)\n if there is no preference with the given name, or if the current value \n cannot be treated as a string.\n\n @param name the name of the preference\n @return the string-valued preference\n',non-directive
' Returns the default value for the long-valued preference\n with the given name.\n ',non-directive
' Cancels a runnable that was previously scheduled with <code>disposeExec</code>.\n ',non-directive
?,non-directive
' Button id for a \"Yes\" button (value 2).\n',non-directive
'<li>hint(SWT.DEFAULT, SWT.DEFAULT)</li>\n </ul>\n ',non-directive
' Returns the text regions covered by the given selection.\n \n @param selection the selection\n @return the text regions corresponding to <code>selection</code>\n @throws BadLocationException if accessing the document failed\n',non-directive
' Returns the container of this page.\n\n @return the preference page container, or <code>null</code> if this\n   page has yet to be added to a container\n',non-directive
'@param writer\n            a Writer specifying the stream the settings are written in.\n ',non-directive
' Creates a new GridLayout, and initializes it with values from the factory.\n \n @return a new initialized GridLayout.\n @see #applyTo\n',non-directive
'@param array  the array over which to iterate\n ',non-directive
'\n A small red square used to warn that an image cannot be created.\n ',non-directive
'\n\nProvides classes for reading and writing the standard ZIP and GZIP\nfile formats.  ',non-directive
' The ellipsis is the string that is used to represent shortened text.\n \n @since 3.0\n',non-directive
?,non-directive
'</UL>\n',non-directive
?,non-directive
?,non-directive
' Adds (or replaces) an image descriptor to this registry. The first time\n this new entry is retrieved, the image descriptor\'s image will be computed \n (via </code>ImageDescriptor.createImage</code>) and remembered. \n This method replaces an existing image descriptor associated with the \n given key, but fails if there is a real image associated with it.\n\n @param key the key\n @param descriptor the ImageDescriptor\n @exception IllegalArgumentException if the key already exists\n',non-directive
'@link #getNumber(Map,Object)}.\n\n ',non-directive
' Gets a short from a Map in a null-safe manner.\n ',non-directive
'@param data an array of FontData that describes the font (will be passed into\n the Font\'s constructor)\n ',non-directive
'<p>\n<ol>\n',non-directive
?,non-directive
' Adapts a {',non-directive
'@since 3.1\n',non-directive
?,non-directive
' Updates the window size to reflect the state of the current wizard.\n ',non-directive
'The abstract base class <tt>WizardPage</tt> is provided as a starting point.\n',non-directive
' Implements <code>IProgressMonitor.done</code>.\n ',non-directive
'@param information the information to show\n ',non-directive
'@return the preference page\n',non-directive
' Returns the number of pixels corresponding to the width of the given\n number of characters.\n \n @param chars\n            the number of characters\n @return the number of pixels\n',non-directive
'@param sectionName\n            the key\n ',non-directive
' Return the DialogPage that the receiver is sending\n updates to.\n \n',non-directive
?,non-directive
' Gets an iterator that iterates through a collections of {',non-directive
'@param value the new current value of the preference\n',non-directive
'@param dflt the default value\n ',non-directive
'@return Shell\n',non-directive
'@param path the path\n ',non-directive
' Creates a new integer field editor \n',non-directive
'@param value the value to be converted\n ',non-directive
?,non-directive
' Sets the width and height hints. ',non-directive
' Updates the title bar (title, description, and image) to \n reflect the state of the currently active page in this container.\n ',non-directive
' Adds a revision listener.\n\n @param listener the listener\n @since 3.3\n',non-directive
'@param button\n',non-directive
' Gets an iterator that provides an iterator view of the given enumeration.\n\n ',non-directive
' Returns the text area.\n \n @return the text area\n',non-directive
' Implements a sticky hover control, i.e. ',non-directive
'@param name the name of the preference, to be used as the property\n  in the event object\n ',non-directive
'@link org.eclipse.jface.contentassist.ISubjectControlContentAssistant} interface.\n ',non-directive
'@param key\n            the key.\n ',non-directive
'@throws NullPointerException if iterators collection is null or contains a null\n ',non-directive
' A listener which is notified when the current page of the multi-page dialog\n is changed.\n \n',non-directive
' Attaches the progress monitor part to the given cancel\n component.\n ',non-directive
' Returns whether the named preference is known to this preference\n store.\n\n @param name the name of the preference\n @return <code>true</code> if either a current value or a default\n  value is known for the named preference, and <code>false</code> otherwise\n',non-directive
'@return the control of this content assist subject control\n',non-directive
' Notifies any page changing listeners that the currently selected dialog\n page is changing. ',non-directive
'@link TreeColumn} sizes in a \n {',non-directive
' Returns the progress monitor for this wizard dialog (if it has one).\n \n @return the progress monitor, or <code>null</code> if this wizard\n         dialog does not have one\n',non-directive
'@param thread\n            The thread to be checked\n ',non-directive
'Returns the given default value if the \n value does not represent a long.\n\n ',non-directive
' A field editor for a boolean type preference.\n',non-directive
'<p>Similarly, a wizard page is any object implementing <tt>IWizardPage</tt>.\n',non-directive
'A group of classes are used by the stubs and skeletons\ngenerated by the rmic stub compiler.  ',non-directive
'@param hSpan number of columns spanned by the control\n ',non-directive
'@see org.eclipse.core.runtime.IStatus\n',non-directive
'@see org.eclipse.jface.dialogs.IPageChangeProvider#getSelectedPage()\n \n ',non-directive
'@return  the value in the map, or defaultValue if the original value\n    is null or the map is null\n',non-directive
?,non-directive
'@see org.eclipse.core.runtime.IStatus#matches(int)\n',non-directive
'@param dlus\n            the number of vertical dialog units\n ',non-directive
'@since 3.3\n',non-directive
'@param key  the key to look up\n ',non-directive
?,non-directive
'@param defaultValue  what to return if the value is null or if the\n     conversion fails\n  ',non-directive
' Set the value to be used for Scale.setMaximum(int) and update the\n scale.\n \n',non-directive
' Creates the inner page container.\n \n',non-directive
' Initialize the progress bar.\n \n @param max\n            The maximum value.\n',non-directive
?,non-directive
' Sets whether the empty string is a valid value or not.\n\n ',non-directive
' Detach the progress monitor part from the given cancel\n component\n ',non-directive
'@param node the node to remove\n ',non-directive
'<LI>Since 1.4 -- new in the JDBC 3.0 API and part of the J2SE platform, \n     version 1.4\n ',non-directive
'@return the rectangle-valued preference\n',non-directive
' A strategy for painting the live annotate colors onto the vertical ruler column. ',non-directive
'@param fonts the font list\n ',non-directive
' Sets the message for this dialog with an indication of what type of\n message it is.\n ',non-directive
'@since 3.6\n',non-directive
?,non-directive
' Returns the id of this contribution node.\n This id identifies a contribution node relative to its parent.\n\n @return the node id\n',non-directive
'<p>\n The result of this method is typically used by the container.\n ',non-directive
'@param font\n            the font that should be used for pixel conversions.\n',non-directive
'@param right\n            right margin size (pixels)\n ',non-directive
' Set the value to be used for Scale.setIncrement(int) and update the\n scale.\n \n',non-directive
?,non-directive
'@param listener\n            a property change listener\n ',non-directive
' Returns the wizard this dialog is currently displaying.\n \n',non-directive
' Creates an empty preference store that loads from and saves to the a\n file.\n <p>\n Use the methods <code>load()</code> and <code>save()</code> to load\n and store this preference store.\n </p>\n \n @param filename\n            the file name\n @see #load()\n @see #save()\n',non-directive
'@param parentRuler the parent ruler\n',non-directive
'@return a multi-value map backed by the given map which returns ArrayLists of values.\n ',non-directive
'@link Iterator#next()} method will return the lesser of\n <code>A.next()</code> and <code>B.next()</code> and so on.\n ',non-directive
'@param delay the auto activation delay\n',non-directive
?,non-directive
'@return <code>true</code> if the first is the same as, or a wrapper\n         around, the second\n ',non-directive
' Converts the given value into a boolean.\n This method fails if the value does not represent a boolean.\n <p>\n Valid representations of <code>true</code> include the strings\n \"<code>t</code>\", \"<code>true</code>\", or equivalent in mixed\n or upper case.\n Similarly, valid representations of <code>false</code> include the strings\n \"<code>f</code>\", \"<code>false</code>\", or equivalent in mixed\n or upper case. \n </p>\n\n @param value the value to be converted\n @return the value as a boolean\n @exception DataFormatException if the given value does not represent\n\ta boolean\n',non-directive
'@see #showPage\n',non-directive
' Returns <code>true</code> if the passed range has the same offset and length as the receiver.\n\n @param range another line range to compare the receiver to\n @return <code>true</code> if <code>range</code> has the same offset and length as the receiver\n',non-directive
'@exception DataFormatException if the given value does not represent\n\ta double\n',non-directive
?,non-directive
?,non-directive
' Returns the preference mananger used by this preference dialog.\n \n',non-directive
' Returns the title area composite. ',non-directive
'@param listener the listener\n ',non-directive
'@param value the new current value of the preference\n',non-directive
'Aside from the clearing operation reference objects\nare otherwise immutable, so no <code>set</code> operation is provided.  ',non-directive
'@return start and length of the selection, x is the offset and y the\n         length based on the subject\'s model (e.g. ',non-directive
'@return the font\n ',non-directive
' An ordered iterator over no elements.\n',non-directive
?,non-directive
?,non-directive
'@author Stephen Colebourne\n ',non-directive
' @see Reader#ready()\n',non-directive
'</p>\n<p>\nAn <tt>AutoCompleteField</tt> configures a <tt>ContentProposalAdapter</tt> in a manner\nthat supports automatic field completion popups that filter based on the control\'s\ncontents.\n',non-directive
'Many of the classes provided in this package (the cryptographic\nand secure random number generator classes in particular) are\nprovider-based.  ',non-directive
' Button id for a \"Stop\" button (value 6).\n',non-directive
' A ErrorSupportProvider defines the area to be shown in an error dialog for extra support information.\n ',non-directive
?,non-directive
'<P>\nThe agent is passed its agent options via the <code>agentArgs</code> parameter.\n',non-directive
' Shows the preference page corresponding to the given preference node.\n ',non-directive
'@param max\n            The maximum value.\n',non-directive
' Creates a directory field editor.\n \n @param name the name of the preference this field editor works on\n @param labelText the label text of the field editor\n @param parent the parent of the field editor\'s control\n',non-directive
'Converts the long <code>value</code> to a string and\n adds the pair <code>key/value</code> to this dialog settings.\n \n',non-directive
'<li><a href=\"\">##### REFER TO ANY FRAMEMAKER SPECIFICATION HERE #####</a>\n</ul>\n\n',non-directive
?,non-directive
' Returns the page change provider that is the source of this event.\n \n @return the originating page change provider\n',non-directive
'<!--\n<h2>Package Specification</h2>\n\n##### FILL IN ANY SPECS NEEDED BY JAVA COMPATIBILITY KIT #####\n<ul>\n  ',non-directive
'@since tags down here. ',non-directive
?,non-directive
'@return the string representing the given integer value\n',non-directive
'@param key  the key to look up\n ',non-directive
'@param listIterator  the iterator to make immutable\n ',non-directive
'@param message the error message\n',non-directive
?,non-directive
?,non-directive
'Each type\ncorresponds to a different level of reachability, as defined below.  ',non-directive
?,non-directive
'@param map  the map to use\n ',non-directive
'@param takeFocusOnOpen\n            A boolean indicating whether focus should be taken by this\n            popup when it opens.\n ',non-directive
' Gets a Closure that will do nothing.\n This could be useful during testing as a placeholder.\n\n @see org.apache.commons.collections.functors.NOPClosure\n \n @return the closure\n',non-directive
'@param store the preference store\n ',non-directive
'@return  the value in the map as a number, or defaultValue if the\n    original value is null, the map is null or the number conversion\n    fails\n',non-directive
'<li>Classes for formatting and parsing\n',non-directive
'@since 2.0\n ',non-directive
?,non-directive
'@param defaultValue  what to return if the value is null or if the\n     conversion fails\n  ',non-directive
'@param parent the parent control\n ',non-directive
'@see #SEPARATE_LABEL\n',non-directive
' Sets the minimum size for the control. ',non-directive
?,non-directive
' @see Dialog#createDialogArea(Composite)\n',non-directive
'@param newControl\n',non-directive
'  Looks up the given key in the given map, converting the result into\n  a number, using the default value if the the conversion fails.\n\n  @param map  the map whose value to look up\n  @param key  the key of the value to look up in that map\n  @param defaultValue  what to return if the value is null or if the\n     conversion fails\n  @return  the value in the map as a number, or defaultValue if the\n    original value is null, the map is null or the number conversion\n    fails\n',non-directive
' Constructs the tray\'s widgets and displays the tray in this dialog. The\n dialog\'s size will be adjusted to accomodate the tray.\n \n @param tray the tray to show in this dialog\n @throws IllegalStateException if the dialog already has a tray open\n @throws UnsupportedOperationException if the dialog does not support trays,\n            for example if it uses a custom layout.\n',non-directive
' Returns this dialog page\'s description text.\n\n ',non-directive
' Performs special processing when this page\'s Apply button has been pressed.\n ',non-directive
' Returns the client area for the given composite according to this\n layout.\n \n',non-directive
'@since 3.5\n',non-directive
' Returns the stored representation of the given array of FontData objects.\n ',non-directive
'@param name the name of the preference\n ',non-directive
'@throws NullPointerException if iterator is null\n',non-directive
' Clears any adjusted ranges, restoring the original range.\n',non-directive
'  Looks up the given key in the given map, converting the result into\n  a float, using the default value if the the conversion fails.\n\n  ',non-directive
'The primitives will be wrapped in the appropriate wrapper class.\n\n ',non-directive
' Set the control for the receiver.\n ',non-directive
'\n\nContains the collections framework, legacy collection classes, event model,\ndate and time facilities, internationalization, and miscellaneous utility\nclasses (a string tokenizer, a random-number generator, and a bit array).\n\n<h2>Package Specification</h2>\n<ul>\n  <li><a href=\"../../../technotes/guides/collections/overview.html\"><b>Collections Framework Overview</b></a>\n  <li><a href=\"../../../technotes/guides/collections/reference.html\"><b>\n       Collections Framework Annotated Outline</b></a>\n</ul>\n\n<h2>Related Documentation</h2>\nFor overviews, tutorials, examples, guides, and tool documentation, please see:\n<ul>\n    <li><a href=\"http://www.java.sun.com/docs/books/tutorial/collections/\">\n       <b>Collections Framework Tutorial</b></a>\n    <li><a\n    href=\"../../../technotes/guides/collections/designfaq.html\"><b>Collections\n    Framework Design FAQ</b></a>\n</ul>\n\n@since JDK1.0\n',non-directive
' Creates a new change region for the given revision and line range.\n\n ',non-directive
' The blockage has been cleared. Clear the\n extra information and resume.\n',non-directive
'@param keys\n            a list of keys\n ',non-directive
' Button id for a \"Close\" button (value 12).\n',non-directive
?,non-directive
'</p>\n \n ',non-directive
?,non-directive
?,non-directive
' Sets the indent of the control within the cell. ',non-directive
' The Cancel button control.\n',non-directive
?,non-directive
'<P>\nEach agent is passed its agent options via the <code>agentArgs</code> parameter.\n',non-directive
' Implements <code>IProgressMonitor.setCanceled</code>.\n ',non-directive
' Button id for a \"Back\" button (value 14).\n',non-directive
'\nProvides support for layout generation. \n<h2>\nPackage Specification</h2>\n<p> This package provides classes that can be used to generate layouts.\n',non-directive
'@see #needsProgressMonitor()\n',non-directive
'\nProvides persistence support for templates.\n',non-directive
' Title area fields\n',non-directive
'@link Map} and {',non-directive
'@since 3.1\n',non-directive
'<li><a\n    href=\"../../../technotes/guides/collections/designfaq.html\"><b>Collections\n    Framework Design FAQ</b></a>\n</ul>\n\n',non-directive
?,non-directive
'@since 3.2\n ',non-directive
'@since 3.0\n',non-directive
' Converts a font data array  to a string. ',non-directive
'@since JDK1.1\n',non-directive
' Adapts a {@link org.eclipse.swt.widgets.Text} to an {@link org.eclipse.jface.contentassist.IContentAssistSubjectControl}.\n\n @see org.eclipse.swt.widgets.Text\n @see org.eclipse.jface.contentassist.IContentAssistSubjectControl\n @since 3.0\n @deprecated As of 3.2, replaced by Platform UI\'s field assist support\n',non-directive
' Tells whether the SWT Browser widget and hence this information\n control is available.\n\n @param parent the parent component used for checking or <code>null</code> if none\n @return <code>true</code> if this control is available\n',non-directive
'@author <a href=\"mailto:knielsen@apache.org\">Kasper Nielsen</a>\n ',non-directive
'\nProvides an information provider add-on for an <tt>ITextViewer</tt>.\n',non-directive
'Values other than <code>true</code> are considered <code>false</code>.\n                        ',non-directive
' Vertical margin in dialog units (value 7).\n',non-directive
?,non-directive
' Removes the given page change listener from this page change provider.\n Has no effect if an identical listener is not registered.\n \n @param listener\n            a page changed listener\n',non-directive
'<li><tt>TemplatePreferencePage</tt> allows\nthe user to access the templates within a <tt>TemplateStore.</tt></li>\n</ul>\n',non-directive
'<li>CircularFifoBuffer - implements a buffer with a fixed size that discards oldest when full\n',non-directive
'@since 3.1\n',non-directive
?,non-directive
' Gets a Integer from a Map in a null-safe manner.\n <p>\n The Integer is obtained from the results of {@link #getNumber(Map,Object)}.\n\n @param map  the map to use\n @param key  the key to look up\n @return the value in the Map as a Integer, <code>null</code> if null map input\n',non-directive
'@version $Revision: 815006 $ $Date: 2009-09-15 07:44:36 +0200 (Tue, 15 Sep 2009) $\n\n ',non-directive
?,non-directive
?,non-directive
'@param vSpan number of rows spanned by the control\n ',non-directive
'@param button the button the data is being set on.\n',non-directive
?,non-directive
'Default preference values are not affected.\n \n',non-directive
' Returns the progress monitor to use for operations run in this progress\n dialog.\n \n @return the progress monitor\n',non-directive
?,non-directive
'@linkplain org.eclipse.jface.contentassist.IContentAssistSubjectControl content assist subject control}.\n\n ',non-directive
' Checks with the given progress monitor and throws\n <code>InterruptedException</code> if it has been canceled.\n ',non-directive
'  Looks up the given key in the given map, converting the result into\n  a string, using the default value if the the conversion fails.\n\n  ',non-directive
'@param widths\n            the widths of the column\n ',non-directive
'@return  the value in the map as a string, or defaultValue if the\n    original value is null, the map is null or the string conversion\n    fails\n',non-directive
'@return The converted String\n',non-directive
'@param value the new default value for the preference\n',non-directive
'<p>\n This information is typically used by the wizard to decide\n when it is okay to finish.\n ',non-directive
?,non-directive
'@return the split off range\n ',non-directive
?,non-directive
'\nProvides a framework for rule based text scanning\nand uses the framework to provide rule-driven default implementations of\n<tt>IPresentationDamager</tt>, <tt>IPresentationRepairer</tt> and <tt>IDocumentPartitioner</tt>.\n',non-directive
'BigDecimal gives the user complete\ncontrol over rounding behavior, allowing the user to choose from a\ncomprehensive set of eight rounding modes.\n\n',non-directive
'@see org.apache.commons.collections.functors.TransformerClosure\n \n ',non-directive
' Sets the size of all pages. The given size takes precedence over computed\n sizes.\n \n @param width\n            the page width\n @param height\n            the page height\n @see #setPageSize(Point)\n',non-directive
'@param labelText the label text of the field editor\n ',non-directive
' Button id for an \"Ignore\" button (value 9).\n',non-directive
'Used for dialog pages which can\n provide a message with an icon.\n \n',non-directive
' @param control\n            the <code>Control</code> to lay out.\n @since 3.0\n',non-directive
'@param enabled indicates whether auto insertion is enabled or not\n ',non-directive
'<p>\n The Map consists of Predicate keys and Closure values. ',non-directive
' Creates a new range with the given start and end offsets.\n\n ',non-directive
' Creates a new exception.\n\n ',non-directive
?,non-directive
'@see #performOk\n',non-directive
'@link #getNumber(Map,Object)}.\n\n ',non-directive
'\n\nProvides library support for the Java programming language annotation facility.\n\n',non-directive
'@param labelAndValues list of radio button [label, value] entries;\n  the value is returned when the radio button is selected\n ',non-directive
'@link #getNumber(Map,Object)}.\n\n ',non-directive
'The spacing\n is the distance between cells within the layout. \n \n',non-directive
?,non-directive
'If null is specified then natural order is used.\n\n ',non-directive
' Instances of this class can allocate and dispose SWT resources. Each\n instance describes a particular resource (such as a Color, Font, or Image)\n and can create and destroy that resource on demand. DeviceResourceDescriptors\n are managed by a ResourceRegistry.\n \n @see org.eclipse.jface.resource.ResourceManager\n \n @since 3.1\n',non-directive
?,non-directive
'<h2>\nPackage Specification</h2>\n<p>\nThis package provides classes that can be used to guide a dialog user through choosing\nappropriate content for fields in a dialog or wizard.\n',non-directive
' Sets the context selector\'s background color.\n\n ',non-directive
'@param name the name of the preference\n ',non-directive
?,non-directive
'@param newMessage\n            The new value for the message\n ',non-directive
' Returns this dialog page\'s title.\n\n ',non-directive
'@param message the message\n',non-directive
'@param name the name of the preference this field editor works on\n ',non-directive
' Creates the wizard\'s title area.\n \n',non-directive
' Creates a font field editor without a preview.\n \n',non-directive
?,non-directive
?,non-directive
'@throws BadLocationException if computing the edit failed\n',non-directive
'@link java.lang.management.OperatingSystemMXBean}</tt> </td>\n<td> Operating system on which the Java virtual machine is running.</td>\n</tr>\n<tr>\n<td> <tt>{',non-directive
?,non-directive
'@param source\n            the page change provider\n ',non-directive
'<li>\na <b>widget</b> - the SWT control through which the viewer\'s model is displayed</li>\n\n',non-directive
' The default-default value for <code>FontData[]</code> preferences.\n',non-directive
' A dialog is a specialized window used for narrow-focused communication with\n the user.\n ',non-directive
'@param end the new end\n ',non-directive
?,non-directive
'@see #save()\n',non-directive
'@throws IllegalArgumentException if the closures collection is null\n ',non-directive
' Indicates whether the Cancel button is to be enabled.\n',non-directive
' This class is not normally instantiated.\n',non-directive
' Gets a list iterator over an object array.\n\n @param array  the array over which to iterate\n @return  a list iterator over the array\n @throws NullPointerException if array is null\n',non-directive
' Converts the given float object to a string.\n ',non-directive
' Undoes whatever was done by createColor. \n \n @since 3.1 \n\n @param toDestroy a Color that was previously allocated by an equal ColorDescriptor\n',non-directive
'For example, when given an ImageDescriptor, the return\n value of this method may be downcast to Image.\n ',non-directive
' Returns whether the current values in this property store\n require saving.\n\n ',non-directive
' Returns the number of pages in this wizard.\n\n @return the number of wizard pages\n',non-directive
?,non-directive
'@param defaultValue  what to return if the value is null or if the\n     conversion fails\n  ',non-directive
' Property name that signifies the selected color of this\n <code>ColorSelector</code> has changed.\n \n',non-directive
'@since 3.5\n',non-directive
?,non-directive
?,non-directive
'<p> The {',non-directive
' Runnable that cleans up the manager on disposal of the display.\n',non-directive
'@param name the name of the preference this field editor works on\n ',non-directive
'@return a list iterator over part of the array\n ',non-directive
' The default-default value for rectangle preferences\n (the empty rectangle <code>(0,0,0,0)</code>).\n',non-directive
' Returns the wizard container for this wizard page.\n\n ',non-directive
'@link java.lang.management.ManagementFactory#getPlatformMBeanServer\n        platform MBeanServer} to access MXBeans locally or\n        a specific <tt>MBeanServerConnection</tt> to access\n        MXBeans remotely.\n        ',non-directive
' Sets the alignment of the control within its cell.\n \n',non-directive
'<h2>Package Specification</h2>\n\n<ul>\n  ',non-directive
?,non-directive
'In particular:\n\n<ul>\n  ',non-directive
'@see GridLayoutFactory\n',non-directive
?,non-directive
'@param parent\n            The control to create the button in if required.\n ',non-directive
'Each platform MXBean is registered with a unique name defined in the\n{',non-directive
'In particular:\n\n<ul>\n\n  ',non-directive
'@see IRunnableWithProgress\n ',non-directive
?,non-directive
'<li><a href=\"http://java.sun.com/products/jdbc/download.html\">Specification \n      of the JDBC 4.0 API</a>\n</ul>\n\n',non-directive
' Set the GridData on button to be one that is spaced for the\n current font.\n @param button the button the data is being set on.\n',non-directive
'<li>grab(false, false)</li>\n ',non-directive
'@return the missing image descriptor\n',non-directive
'@param parent\n            the SWT parent for the tree area controls.\n ',non-directive
'@param height height (pixels)\n ',non-directive
'@param labelText the label text of the field editor\n ',non-directive
'<li><a href=\"\">##### REFER TO ANY FRAMEMAKER SPECIFICATION HERE #####</a>\n</ul>\n\n',non-directive
'@param store the preference store\n ',non-directive
' Activate the editor for this selector. This causes the color selection\n dialog to appear and wait for user input.\n \n @since 3.2\n',non-directive
'<p>\nThe implementations are in the form of direct implementations and decorators.\n',non-directive
'@see IDialogBlockedHandler#showBlocked(IProgressMonitor, IStatus, String)\n',non-directive
' Create the dialog area and the button bar for the receiver.\n \n',non-directive
'<li>\n<tt>IntegerFieldEditor</tt> - integers</li>\n\n',non-directive
'@return the initial size of the dialog\n',non-directive
?,non-directive
?,non-directive
' Image registry key for error message image.\n',non-directive
?,non-directive
' Provides a tree model for <code>PreferenceManager</code> content.\n \n',non-directive
' Creates an empty preference store that loads from and saves to the a\n file.\n ',non-directive
'@return the corresponding {',non-directive
'@link AbstractControlContentAssistSubjectAdapter}.\n',non-directive
'A relative path is resolved\n                        against the absolute path of the agent JAR file.\n                        ',non-directive
'@link SWT#COLOR_GREEN green}, {',non-directive
' Lays outs the page according to this layout.\n \n @param w\n            the control\n',non-directive
'@param parent the parent\n ',non-directive
?,non-directive
?,non-directive
'@since 3.0\n',non-directive
?,non-directive
'@return  the value in the map as a number, or defaultValue if the\n    original value is null, the map is null or the number conversion\n    fails\n',non-directive
' Decrements the nesting depth of running operations.\n \n @since 3.0\n \n',non-directive
' Converts the given SWT point object to a string.\n <p>\n The string representation of a point has the form\n <code><it>x</it>,<it>y</it></code> where\n <code><it>x</it></code> and <code><it>y</it></code>\n are string representations of integers.\n </p>\n\n @param value the point object\n @return the string representing the given point\n',non-directive
' Gets an iterator that provides an ordered iteration over the elements\n contained in a collection of {',non-directive
?,non-directive
'@return the properties object\n',non-directive
'<P>\n<h3><code>java.sql</code> Features Introduced in the JDBC 2.1 Core API</h3>\n<UL>\n  ',non-directive
?,non-directive
' Creates a boolean field editor in the default style.\n \n @param name\n            the name of the preference this field editor works on\n @param label\n            the label text of the field editor\n @param parent\n            the parent of the field editor\'s control\n',non-directive
'@return {',non-directive
' An internal class that gives access to internal methods of {',non-directive
' The <code>ColorSelector</code> is a wrapper for a button that displays a\n selected <code>Color</code> and allows the user to change the selection.\n',non-directive
'\nProvides an information provider add-on for an <tt>ITextViewer</tt>.\nAn information provider presents information for a certain subject in a\nspecific information control. An information control usually is a floating\nwindow.\n<h2>\nPackage Specification</h2>\n<tt>IInformationPresenter</tt> defines the concept of an information provider.\nIt collaborates with content type specific information providers (<tt>IInformationProvider</tt>)\nwhich determine for a certain offset in a text viewer an information subject\nand the information available about this subject.. The package contains\na default implementation of <tt>IInformationPresenter</tt> (<tt>InformationPresenter</tt>).\n',non-directive
?,non-directive
?,non-directive
'A Logger object is used to log messages \n                for a specific system or application\n                component.\n   ',non-directive
'@return <code>true</code> if dialogs that support help\n control should show it by default, <code>false</code> otherwise.\n ',non-directive
' Sets the default value for the float-valued preference with the\n given name. \n ',non-directive
'It collaborates with content type specific completion processors (<tt>ISubjectControlContentAssistProcessor</tt>)\nin order to generate completion proposals (<tt>ICompletionProposal</tt>)\nvalid at the current document position. ',non-directive
' Convert the given value into an array of SWT font data objects.\n \n @param value the font list string \n @return the value as a font list\n @since 3.0\n',non-directive
' Gets a list iterator over the end part of an object or primitive array.\n <p>\n This method will handle primitive arrays as well as object arrays.\n The primitives will be wrapped in the appropriate wrapper class.\n\n @param array  the array over which to iterate\n @param start  the index to start iterating at\n @return a list iterator over part of the array\n @throws IllegalArgumentException if the array is not an array\n @throws IndexOutOfBoundsException if start is less than zero\n @throws NullPointerException if array is null\n',non-directive
'@param display the display the color is from\n ',non-directive
'<li>{',non-directive
' Returns the JFace\'s dialog font. Convenience method equivalent to\n \n <pre>\n JFaceResources.getFontRegistry().get(JFaceResources.DIALOG_FONT)\n </pre>\n \n @return the font\n',non-directive
'@param url The URL of the image file.\n ',non-directive
'<p>An application can monitor the instrumentation of the \nJava virtual machine and manage certain characteristics in\nthe following ways:\n<ul>\n',non-directive
?,non-directive
'@see #MessageDialog(Shell, String, Image, String, int, String[], int)\n ',non-directive
' The selected page.\n',non-directive
'@since Commons Collections 3.0\n ',non-directive
'@param tableTree\n            the control\n \n ',non-directive
'<h2>Related Documentation</h2>\nFor overviews, tutorials, examples, guides, and tool documentation, please see:\n<ul>\n    ',non-directive
'<h2>\nPackage Specification</h2>\n<tt>IReconciler</tt> defines the concept of a reconciler. ',non-directive
' Returns whether help is available for this wizard.\n ',non-directive
'@since 3.1\n',non-directive
'<LI> The JDBC 1.2 API\n ',non-directive
'@param parent\n',non-directive
'Default behaviour is to decrement\n the nesting depth, and close the dialog.\n \n',non-directive
'@return <code>false</code> to abort the container\'s OK\n  processing and <code>true</code> to allow the OK to happen\n',non-directive
'@return the default page image\n',non-directive
' The <code>WizardPage</code> implementation of this method \n declared on <code>DialogPage</code> updates the container\n if this page is the current page.\n',non-directive
'@return the <code>switch</code> closure\n ',non-directive
?,non-directive
' Updates the enabled state of the Apply button to reflect whether \n this page is valid.\n',non-directive
?,non-directive
'<li><tt>getHyperlinkPresenter()</tt> to specify the set of hyperlink presenters used by the viewer</li>\n  ',non-directive
'@param symbolicName symbolic font name\n ',non-directive
?,non-directive
'@param value the new default value for the preference\n',non-directive
'Offset and length based on the subject\'s\n model (e.g. ',non-directive
'@param defaultValue  return if the value is null or if the\n     conversion fails\n ',non-directive
' Converts the given long object to a string.\n Equivalent to <code>String.valueOf(value.longValue())</code>.\n\n @param value the long object\n @return the string representing the given long value\n',non-directive
' Returns an iterator over the subnodes (immediate children)\n of this contribution node.\n\n ',non-directive
'@since 3.5\n',non-directive
?,non-directive
'@since 3.0\n',non-directive
'@see #load()\n ',non-directive
'document\n ',non-directive
?,non-directive
'<LI><code>PreparedStatement</code> --  used to send prepared statements or \n              basic SQL statements (derived from <code>Statement</code>)\n\t ',non-directive
'@link org.apache.commons.collections.ComparatorUtils ComparatorUtils},\nwhich is a single class that uses static methods to construct instances\nof the classes in this package.\n',non-directive
'The lengths of the line will not exceed the given maximum width.\n\n ',non-directive
?,non-directive
' Implements <code>IProgressMonitor.worked</code>.\n ',non-directive
'@throws IllegalArgumentException if the array is not an array\n ',non-directive
' ControlAnimator provides a simple implementation to display or hide a control\n at the bottom of the parent composite. ',non-directive
'@since 3.1\n',non-directive
'<p>\n If the value is a <code>Boolean</code> it is returned directly.\n ',non-directive
'@return this\n ',non-directive
'@param separatorChar the separator character\n ',non-directive
'A presentation reconciler keep the presentation (styles and colors) in\nsync with the content of the document serving as the <tt>ITextViewer</tt>\'s\ninput.\n',non-directive
'@param w\n            the control\n',non-directive
?,non-directive
?,non-directive
'@param value The font data.\n ',non-directive
'@param completionPosition the completion position\n',non-directive
' Create a new instance of the reciever.\n',non-directive
'@see org.apache.commons.collections.functors.SwitchClosure\n \n ',non-directive
' Button id for a \"Next\" button (value 15).\n',non-directive
?,non-directive
'@see org.eclipse.jface.window.Window#getLayout()\n ',non-directive
'@see org.eclipse.swt.widgets.Scale#setMaximum(int)\n',non-directive
' Convenience method to open a simple Yes/No question dialog.\n \n @param parent\n            the parent shell of the dialog, or <code>null</code> if none\n @param title\n            the dialog\'s title, or <code>null</code> if none\n @param message\n            the message\n @return <code>true</code> if the user presses the Yes button,\n         <code>false</code> otherwise\n',non-directive
' Instructs the GridLayout to ignore this control when performing layouts. \n \n',non-directive
?,non-directive
'document\n',non-directive
' <p>\n Initial values are:\n </p>\n \n <ul>\n ',non-directive
'<li><i>Indirect access via {',non-directive
'\nProvides a content assist add-on for implementors of <tt>IContentAssistSubjectControl</tt>.\n',non-directive
' Show the new message in the message text and update the image. ',non-directive
'@throws IllegalArgumentException if the method name is null\n',non-directive
' Button id for an \"Ok\" button (value 0).\n',non-directive
'@param composite\n ',non-directive
'@link #getNumber(Map,Object)}.\n\n ',non-directive
'the control that will be displayed or hidden ',non-directive
' Save a dialog settings to a stream\n \n ',non-directive
'@param bottom\n            bottom margin size (pixels)\n ',non-directive
'<P>\nThe Logging APIs offer both static and dynamic configuration control.\n',non-directive
?,non-directive
'There are two separate trees of\npreference nodes, one for user preferences and one for system preferences.\n\n',non-directive
' Gets a boolean from a Map in a null-safe manner,\n using the default value if the the conversion fails.\n ',non-directive
'@param name the name of the preference\n ',non-directive
' Opens an error dialog to display the given error. ',non-directive
' Sets the GridData span. ',non-directive
'@since 3.0\n',non-directive
' Sets the alignment of the control within its cell.\n \n @param hAlign horizontal alignment. One of SWT.BEGINNING, SWT.CENTER, SWT.END, or SWT.FILL.\n @param vAlign vertical alignment. One of SWT.BEGINNING, SWT.CENTER, SWT.END, or SWT.FILL.\n @return this\n',non-directive
' Informs this field editor\'s listener, if it has one, about a change to\n one of this field editor\'s properties.\n\n ',non-directive
'@param parent the parent of the field editor\'s control\n ',non-directive
' Converts the given value into a float.\n ',non-directive
?,non-directive
' Processes {',non-directive
' Returns the number of lines contained in this range. Short equivalent of {@link #getNumberOfLines()}.\n\n @return the number of lines contained in this range\n',non-directive
?,non-directive
' Removes the given prefreence node if it is managed by\n this contribution manager.\n\n @param node the node to remove\n @return <code>true</code> if the node was removed,\n  and <code>false</code> otherwise\n',non-directive
' Create a new instance of the receiver that is hooked to the current \n display.\n \n @see org.eclipse.swt.widgets.Display#getCurrent()\n',non-directive
?,non-directive
?,non-directive
' Installs content assist support on the given subject.\n\n ',non-directive
'<LI><code>Timestamp</code> class -- mapping for SQL <code>TIMESTAMP</code> \n\t ',non-directive
' Returns a text edit describing the text modification that would be executed if the given\n selection was replaced by <code>replacement</code>.\n \n @param selection the selection to replace\n @param replacement the replacement text\n @return a text edit describing the operation needed to replace <code>selection</code>\n @throws BadLocationException if computing the edit failed\n',non-directive
' Tests whether a verify key listener can be added either using <code>prependVerifyKeyListener</code>\n or {@link #appendVerifyKeyListener(VerifyKeyListener)}.\n\n @return <code>true</code> if adding verify key listeners is supported\n',non-directive
?,non-directive
' Return the Add button.  \n \n',non-directive
' Button id for an \"Ignore\" button (value 9).\n',non-directive
'@param value the value to be converted\n ',non-directive
' Returns the current value of the rectangle-valued preference with the\n given name in the given preference store.\n ',non-directive
' Return the <code>Image</code> to be used when displaying a question.\n \n',non-directive
?,non-directive
?,non-directive
' Returns the initial size to use for the shell. ',non-directive
'@param text\n            the text to be displayed in the message area\n \n ',non-directive
' Create a new instance of the reciever and the button that it wrappers in\n the supplied parent <code>Composite</code>.\n \n',non-directive
'@param parent the parent of the field editor\'s control\n',non-directive
'\n<p>Provides JFace-specific support for commands.</p>\n\n<h2>Package Specification</h2>\n<p>\nThis package provides a handler that wraps a legacy instance of\n<code>IAction</code>, as well as a manager for associating images with commands.\n</p>\n',non-directive
?,non-directive
' Returns the nesting depth of running operations.\n \n @return the nesting depth of running operations\n @since 3.0\n',non-directive
'<li><b>Info-ZIP file format</b> - The JAR format is based on the Info-ZIP \n      file format. ',non-directive
' A preference dialog is a hierarchical presentation of preference pages. Each\n page is represented by a node in the tree shown on the left hand side of the\n dialog; when a node is selected, the corresponding page is shown on the right\n hand side.\n',non-directive
' Gets a Double from a Map in a null-safe manner.\n ',non-directive
'@since 1.6\n',non-directive
' The label for yes to all buttons.\n',non-directive
' Convenience API. Converts the float <code>value</code> to a string and\n adds the pair <code>key/value</code> to this dialog settings.\n \n @param key\n            the key.\n @param value\n            the value to be associated with the <code>key</code>\n',non-directive
'@param next FontData to copy\n ',non-directive
'@since 3.1\n\n ',non-directive
'The <code>Void</code> class is a\nnon-instantiable class that holds a reference to a <code>Class</code> object\nrepresening the primitive type void.\n',non-directive
' Null-safe check if the specified map is not empty.\n ',non-directive
'@return the value in the Map as a Map, <code>null</code> if null map input\n',non-directive
'@param parent the parent of the field editor\'s control\n',non-directive
' Returns whether the given thread is running a modal context.\n \n',non-directive
' Replaces this manager\'s information control as defined by\n the information control replacer.\n ',non-directive
'<li>Transformed - transforms each element added</li>\n',non-directive
'@param key  the key to look up\n ',non-directive
' Returns the given string with all whitespace characters removed.\n ',non-directive
' JFaceColors is the class that stores references\n to all of the colors used by JFace.\n',non-directive
?,non-directive
?,non-directive
' Returns the error message that will be displayed when and if \n an error occurs.\n\n ',non-directive
' A mutator for the button labels.\n \n',non-directive
' Notifies any selection changed listeners that the selected page\n has changed.\n ',non-directive
' Returns the HTML from {@link #getHtml()}.\n This is a fallback mode for platforms where the {@link BrowserInformationControl}\n is not available and this input is passed to a {@link DefaultInformationControl}.\n\n @return {@link #getHtml()}\n',non-directive
' Shows the error message set via <code>setErrorMessage</code>.\n',non-directive
?,non-directive
' Return the layout for the composite that contains\n the pages.\n ',non-directive
'The path is\n                        absolute if it begins with a slash character (\'/\'),\n                        otherwise it is relative. ',non-directive
' Returns the value that will be used for Scale.setMaximum(int).\n \n @return the value.\n @see org.eclipse.swt.widgets.Scale#setMaximum(int)\n',non-directive
'@param parent\n            the Composite that the children will be created in\n',non-directive
'@param listener the proposal listener\n',non-directive
'@param name the name of the preference\n ',non-directive
'This is done with\n the generateLayout method. ',non-directive
'@link #createImage(ImageDescriptor)}.\n \n',non-directive
'@throws IOException\n',non-directive
'<li>Transformed - transforms each element added\n',non-directive
' Indicates whether the Cancel button is to be shown.\n',non-directive
'This is how the <code>{',non-directive
'</p>\n',non-directive
'@param iterator  the iterator to use, not null\n ',non-directive
'@since 3.3\n',non-directive
'<p>\n As the wrapped Iterator is traversed, an ArrayList of its values is\n created. ',non-directive
'@see org.apache.commons.collections.functors.ChainedClosure\n \n ',non-directive
'@return this\n',non-directive
'@link #getNumber(Map,Object)}.\n\n ',non-directive
'\n\nThis package allows applications to store and retrieve user and system\npreference and configuration data. This data is stored persistently in an\nimplementation-dependent backing store. There are two separate trees of\npreference nodes, one for user preferences and one for system preferences.\n\n<!--\n<h2>Package Specification</h2>\n<h2>Related Documentation</h2>\n-->\n\n@since JDK1.4\n',non-directive
' Return the <code>Image</code> to be used when displaying a question.\n \n @return image the question image\n',non-directive
' Horizontal spacing in dialog units (value 4).\n',non-directive
?,non-directive
'<li>Go through a <tt>MBeanServerConnection</tt> connecting \n    to the <tt>platform MBeanServer</tt> of a running virtual machine.</li>\n<blockquote><pre>\n   MBeanServerConnection mbs;\n\n   // Connect to a running JVM (or itself) and get MBeanServerConnection\n   // that has the JVM MXBeans registered in it\n   ...\n\n   ',non-directive
' Sets the default value of the preference with the given name\n in the given preference store.\n\n @param store the preference store\n @param name the name of the preference\n @param value the new default value of the preference\n',non-directive
'@since 3.0\n ',non-directive
?,non-directive
' Returns the color registry for JFace itself.\n <p>\n \n @return the <code>ColorRegistry</code>.\n @since 3.0\n',non-directive
'<h2>\nPackage Specification</h2>\n<p> This package provides classes that can be used to generate layouts.\n',non-directive
'@see IPageChangedListener\n \n ',non-directive
'@since 3.3\n',non-directive
' The number of pixels to blow up the keep-up zone.\n\n @return the margin in pixels\n',non-directive
' Installs this validator for the given context information.\n\n ',non-directive
?,non-directive
' Returns the selected range.\n\n @return start and length of the selection, x is the offset and y the\n         length based on the subject\'s model (e.g. document)\n',non-directive
?,non-directive
'</ul>\n\n\n',non-directive
'A\nserver registers its remote objects with the registry so that they can\nbe looked up.  ',non-directive
?,non-directive
' Creates a new field editor preference page with the given title \n and style, but no image.\n\n ',non-directive
'@return a newly created ColorDescriptor that describes the given Color.\n',non-directive
' Sets the proposal pop-ups\' orientation.\n ',non-directive
' Button id for a \"Select types\" button (value 20).\n',non-directive
'@return the value as a rectangle, or the default value\n',non-directive
'@return the default value of the preference\n',non-directive
'<p>\n<H2>Related Documentation</H2>\n<P>\nFor an overview of control flow, \nplease refer to the \n<a href=\"../../../../technotes/guides/logging/overview.html\">\nJava Logging Overview</a>.\n',non-directive
'@param parent\n            The parent of the button.\n',non-directive
'@param map  the map to use\n ',non-directive
'@since 2.0\n',non-directive
'@param parent The parent {',non-directive
'<p>The class <tt>JFaceResources</tt> maintains global state on behalf of\nJFace itself consisting of JFace\'s own image registry, font registry, resource\nbundle, and preference store.\n<br>&nbsp;\n',non-directive
?,non-directive
' The label for close buttons.\n',non-directive
'<li>wrap(true)</li>\n ',non-directive
'@see org.eclipse.jface.viewers.ILabelProvider#getText(java.lang.Object)\n',non-directive
'<h2>Related Documentation</h2>\n\nFor information about X.509 certificates and CRLs, please see:\n<ul>\n  ',non-directive
?,non-directive
'  Looks up the given key in the given map, converting null into the\n  given default value.\n\n  ',non-directive
' Enable the title and disable the message text and image.\n',non-directive
'@link org.apache.commons.collections.Get Get} interfaces,\nwith <i>differing</i> generic types. ',non-directive
' Returns the value that will be used for Scale.setMinimum(int).\n \n @return the value.\n @see org.eclipse.swt.widgets.Scale#setMinimum(int)\n',non-directive
' Create a new <code>TreeViewer</code>.\n \n',non-directive
' The IDialogBlockedHandler is the handler used by\n JFace to provide extra information when a\n blocking has occured. There is one static instance\n of this class used by WizardDialog and ModalContext.\n @see org.eclipse.core.runtime.IProgressMonitorWithBlocking#clearBlocked()\n @see  org.eclipse.core.runtime.IProgressMonitorWithBlocking#setBlocked(IStatus)\n @see WizardDialog\n @since 3.0\n',non-directive
?,non-directive
'@since 1.6\n',non-directive
'@param key  the key to look up\n ',non-directive
' Returns the nesting depth of running operations.\n \n',non-directive
?,non-directive
' Gets an iterator that iterates through two {',non-directive
'@return  a list iterator over the array\n ',non-directive
' Gets a list based on an iterator.\n ',non-directive
' Get the specified {',non-directive
'@return <code>true</code> if an empty string is a valid value, and\n  <code>false</code> if an empty string is invalid\n ',non-directive
' Creates a new radio group field editor \n',non-directive
'@throws NullPointerException if arrayClass is null\n ',non-directive
'@param fileName\n            the name of the file the settings are read from.\n ',non-directive
'@param display the display the color is from\n ',non-directive
'@param rgb\n            The new color.\n',non-directive
' Provides utility methods for {',non-directive
?,non-directive
'@param l layout to copy\n ',non-directive
'@return an empty variant of <code>selection</code>\n ',non-directive
' Creates the cancel button.\n \n @param parent\n            the parent composite\n @since 3.0\n',non-directive
'The package contains\na default implementation of <tt>IInformationPresenter</tt> (<tt>InformationPresenter</tt>).\n',non-directive
'Set the return code to <code>SWT.DEFAULT</code>\n as there has been no explicit close by the user.\n \n',non-directive
'@see MultiValueMap\n ',non-directive
'<p>This package contains ready-to-use field editors for various types of\npreferences:\n<ul>\n',non-directive
'@return the previous value\n ',non-directive
'@return the client area rectangle\n',non-directive
?,non-directive
'The given string\n is inserted as header information.\n \n',non-directive
' Old text value.\n @since 3.4 this field is protected.\n',non-directive
'The logging APIs support a general-purpose\n                       filter mechanism that allows application code to attach arbitrary filters to \n                       control logging output. \n                       \n',non-directive
' A field editor to edit directory paths.\n',non-directive
'For example, \na field service engineer might be interested in tracing all AWT events, but might have no interest in \nsocket events or memory management.\n',non-directive
'@linkplain org.eclipse.jface.contentassist.ISubjectControlContentAssistant subject control content assistant}.\n\n ',non-directive
'<li>Federal Information Processing Standards Publication (FIPS PUB) 186:\n    Digital Signature Standard (DSS) </li>\n</ul>\n\n',non-directive
' Returns whether this page is the current one in the wizard\'s container.\n\n @return <code>true</code> if the page is active,\n  and <code>false</code> otherwise\n',non-directive
?,non-directive
' Creates a new processor on the given viewer.\n \n',non-directive
'Similarly, valid representations of <code>false</code> include the strings\n \"<code>f</code>\", \"<code>false</code>\", or equivalent in mixed\n or upper case. \n ',non-directive
' Installs content assist support on the given subject.\n\n @param contentAssistSubjectControl the one who requests content assist\n',non-directive
'@since 1.2\n',non-directive
'@param background the background color\n',non-directive
'@exception DataFormatException if the given value does not represent\n\ta long\n',non-directive
' Returns this field editor\'s text control.\n ',non-directive
'\nProvides support for detecting and displaying hyperlinks in <tt>ISourceViewer</tt>s.\n',non-directive
?,non-directive
' Creates a content assist subject control adapter for the given combo.\n\n ',non-directive
'<li>the fully-qualified SQL name of the UDT\n       ',non-directive
'@return <code>false</code> if the current page is not valid, or or\n         <code>true</code> if the current page is valid or there is no\n         current page\n',non-directive
'</p>\n\n ',non-directive
'@version $Revision: 956279 $ $Date: 2010-06-19 21:47:48 +0200 (Sat, 19 Jun 2010) $\n\n ',non-directive
'  Looks up the given key in the given map, converting the result into\n  a map, using the default value if the the conversion fails.\n\n  @param map  the map whose value to look up\n  @param key  the key of the value to look up in that map\n  @param defaultValue  what to return if the value is null or if the\n     conversion fails\n  @return  the value in the map as a number, or defaultValue if the\n    original value is null, the map is null or the map conversion\n    fails\n',non-directive
'\n\nProvides support for RMI Object Activation.  A remote\nobject\'s reference can be made ``persistent\'\' and later activated into a\n``live\'\' object using the RMI activation mechanism.\n\n<!--\n<h2>Package Specification</h2>\n\n##### FILL IN ANY SPECS NEEDED BY JAVA COMPATIBILITY KIT #####\n<ul>\n  <li><a href=\"\">##### REFER TO ANY FRAMEMAKER SPECIFICATION HERE #####</a>\n</ul>\n\n<h2>Related Documentation</h2>\n\nFor overviews, tutorials, examples, guides, and tool documentation, please see:\n<ul>\n  <li><a href=\"\">##### REFER TO NON-SPEC DOCUMENTATION HERE #####</a>\n</ul>\n-->\n\n@since 1.2\n',non-directive
'@return <code>true</code> if the add was successful,\n  and <code>false</code> if there is no contribution at\n  the given path\n',non-directive
'This package contains the image descriptor framework, which\nis a simple hierarchy rooted at the abstract class <tt>ImageDescriptor</tt>.\n',non-directive
' Creates a new sticky hover manager.\n\n ',non-directive
?,non-directive
'@throws BadLocationException if accessing the document failed\n',non-directive
'@return <code>true</code> if the page flip was successful, and\n         <code>false</code> is unsuccessful\n',non-directive
' The default-default value for float preferences (<code>0.0f</code>).\n',non-directive
'@link #lazySortedMap(SortedMap,Transformer)}\n  ',non-directive
?,non-directive
' Returns a text edit describing the text modification that would be executed if the delete key\n was pressed on the given selection.\n \n @param selection the selection to delete\n @return a text edit describing the operation needed to delete <code>selection</code>\n @throws BadLocationException if computing the edit failed\n',non-directive
'@throws FunctorException (runtime) if the factory cannot create an object\n',non-directive
'\nProvides a content assist add-on for an <tt>ITextViewer</tt>.\nContent assist supports the user in writing&nbsp; by proposing context\nsensitive completions at a given document position. A completion can also\nbe a incomplete in itself and content assist provides means to deal with\nnested completions.\n<h2>\nPackage Specification</h2>\n<tt>IContentAssistant</tt> defines the concept of the content assist add-on.\nIt collaborates with content type specific completion processors (<tt>IContentAssistProcessor</tt>)\nin order to generate completion proposals (<tt>ICompletionProposal</tt>)\nvalid at the current document position. The package provides a default\nimplementation <tt>ContentAssistant</tt> which completely defines and implements\nthe UI and the control flow for content assist.\n<br>&nbsp;\n',non-directive
' The default-default value for <code>FontData</code> preferences.\n',non-directive
' Notifies that help has been requested for this dialog page.\n',non-directive
?,non-directive
'It collaborates with content type specific information providers (<tt>IInformationProvider</tt>)\nwhich determine for a certain offset in a text viewer an information subject\nand the information available about this subject.. ',non-directive
'@since 3.0\n',non-directive
?,non-directive
'@param start  the index to start iterating at\n ',non-directive
'@param combo the combo to adapt\n',non-directive
'@return <code>true</code> to indicate the finish request\n   was accepted, and <code>false</code> to indicate\n   that the finish request was refused\n',non-directive
' A field editor for a file path type preference. A standard file \n dialog appears when the user presses the change button.\n',non-directive
'<P>\n<h2>Versions</h2>\nThe JDBC 4.0 API incorporates all of the previous JDBC API versions:\n<UL>\n ',non-directive
'@return the resource bundle\n',non-directive
'@return an array of completion proposals or <code>null</code> if no\n         proposals are possible\n',non-directive
'@author Stephen Colebourne\n',non-directive
?,non-directive
'<h4>ManagementFactory</h4>\n\nThe {',non-directive
'@param parent The Composite to create the viewer in if required\n ',non-directive
'@link Iterator#remove} method.\n\n ',non-directive
' Moves the progress indicator to the end.\n',non-directive
'@param name the name of the preference\n ',non-directive
'@since 2.0\n',non-directive
?,non-directive
'@param key  the key to look up\n ',non-directive
?,non-directive
' Activate the editor for this selector. ',non-directive
'@param labelText the label text of the field editor\n ',non-directive
' Creates a new information control replacer.\n\n ',non-directive
?,non-directive
?,non-directive
'<li><code>StringFieldEditor</code> - text strings</li>\n   ',non-directive
?,non-directive
'\n<p>\nInternal support classes and helpers for the <tt>org.eclipse.jface.text.source</tt> package.\n',non-directive
' An interface to a storage mechanism for making dialog settings persistent.\n ',non-directive
'<LI>New data types--interfaces mapping the SQL3 data types\n  ',non-directive
'@return the button\n ',non-directive
'@param map  the map to use\n ',non-directive
' The label control for the task. ',non-directive
?,non-directive
' The label for finish buttons.\n',non-directive
'<p>A field editor presents the value of a single preference to the end\nuser. ',non-directive
' Creates a copy of the receiver.\n \n @return a copy of the receiver\n',non-directive
' Runnable that cleans up the manager on disposal of the display.\n',non-directive
' Create a new <code>TreeViewer</code>.\n \n @param parent\n            the parent <code>Composite</code>.\n @return the <code>TreeViewer</code>.\n @since 3.0\n',non-directive
?,non-directive
?,non-directive
'@see IVerticalRulerColumn#setModel(IAnnotationModel)\n',non-directive
' Button margin in dialog units (value 4).\n',non-directive
?,non-directive
?,non-directive
'@return The default button index.\n',non-directive
'<li><code>PathEditor</code> - paths</li>\n </ul>\n ',non-directive
' Creates a content assist subject control adapter for the given text widget.\n\n ',non-directive
'@param name the name of the preference\n ',non-directive
'Paths are searched in the order listed.\n                        ',non-directive
' Returns the human-perceived brightness of a color as float in [0.0, 1.0]. ',non-directive
?,non-directive
'@param map  the map to use\n ',non-directive
' The label for not to all buttons.\n',non-directive
' Returns the current value of the boolean-valued preference with the\n given name.\n Returns the default-default value (<code>false</code>) if there\n is no preference with the given name, or if the current value \n cannot be treated as a boolean.\n\n @param name the name of the preference\n @return the boolean-valued preference\n',non-directive
' Return the Remove button.  \n \n',non-directive
' Converts the given value into an SWT RGB color value.\n ',non-directive
' Returns the color registry for JFace itself.\n ',non-directive
'@param viewer the viewer\n',non-directive
' Get the name of the selected item preference\n \n ',non-directive
'@param parent the parent of the field editor\'s control\n ',non-directive
'@return the default value of the preference\n',non-directive
' Return the <code>Image</code> to be used when displaying an error.\n \n',non-directive
?,non-directive
?,non-directive
'@param textViewer the text viewer\n',non-directive
'@param symbolicName symbolic font name\n ',non-directive
'@return an object capturing the enable/disable state\n',non-directive
'</p>\n\n ',non-directive
?,non-directive
'@param layout\n            layout to copy\n ',non-directive
'@since Commons Collections 2.1\n ',non-directive
?,non-directive
' Returns the control responsible for displaying this field editor\'s label.\n ',non-directive
?,non-directive
?,non-directive
'@see ColorRegistry#get(String)\n ',non-directive
?,non-directive
?,non-directive
'At the end, this is converted to an array.\n\n ',non-directive
'<p>\n This image can be used for pages which do not\n supply their own image.\n ',non-directive
'document).\n\n ',non-directive
'@param category the new category.\n',non-directive
'@param name the name of the preference\n ',non-directive
?,non-directive
'@return the string representing the given long\n',non-directive
'@param labelText the label text of the field editor\n ',non-directive
'<li>Support added to allow a JDBC application to access an instance of a JDBC resource\n that has been wrapped by a vendor, usually in an application server or connection \n pooling environment.\n ',non-directive
'@param style a bitwise combination of NORMAL, BOLD, ITALIC \n ',non-directive
'\n<P>\nProvides the classes and interfaces of \nthe Java<SUP><FONT SIZE=\"-2\">TM</FONT></SUP> 2\n platform\'s core logging facilities.\n',non-directive
'@return <code>true</code> to open the dialog before run,\n         <code>false</code> to only create the dialog, but not open it\n ',non-directive
' Recomputes the page\'s error state by calling <code>isValid</code> for\n every field editor.\n',non-directive
'@param composite the parent composite\n ',non-directive
'@return <code>true</code> if the wizard could be finished,\n   and <code>false</code> otherwise\n',non-directive
' Sets this field editor\'s label text.\n ',non-directive
' Creates a new color field editor\n',non-directive
'@since 3.3\n',non-directive
'@see org.eclipse.swt.widgets.Scale#setMinimum(int)\n',non-directive
'@param labelText\n            the label text of the field editor\n ',non-directive
' <p>\n Initial values are:\n </p>\n \n <ul>\n ',non-directive
'<li>{',non-directive
'@see LocalResourceManager\n \n ',non-directive
'@return the value in the Map as a Double, <code>null</code> if null map input\n',non-directive
' @return the current information control, or <code>null</code> if none available\n',non-directive
' Returns the change button for this field editor.\n \n @param parent\n            The Composite to create the receiver in.\n \n @return the change button\n',non-directive
'@return the value as a double, or the default value\n',non-directive
'</p>\n <p>\n For example: <p>\n <pre>\n \t...\n  ',non-directive
?,non-directive
' Returns the name of the preference this field editor operates on.\n\n ',non-directive
?,non-directive
'<li><a href=\"\">##### REFER TO NON-SPEC DOCUMENTATION HERE #####</a>\n</ul>\n',non-directive
?,non-directive
?,non-directive
' Factory for control animators used by JFace to animate the display of an SWT\n Control. Through the use of the method\n {@link org.eclipse.jface.util.Policy#setAnimatorFactory(AnimatorFactory)} \n a new type of animator factory can be plugged into JFace.\n \n @since 3.2\n @deprecated as of 3.3, this class is no longer used.\n',non-directive
?,non-directive
'@see Dialog#createButtonBar(Composite)\n',non-directive
' Returns the current value of the long-valued preference with the\n given name.\n Returns the default-default value (<code>0L</code>) if there\n is no preference with the given name, or if the current value \n cannot be treated as a long.\n\n @param name the name of the preference\n @return the long-valued preference\n',non-directive
'@param display the display used \n ',non-directive
'@param img image to create\n ',non-directive
' Adds the given preference node as a subnode of this\n preference node.\n\n ',non-directive
' Returns the image in JFace\'s image registry with the given key, or\n <code>null</code> if none. Convenience method equivalent to\n \n <pre>\n JFaceResources.getImageRegistry().get(key)\n </pre>\n \n @param key\n            the key\n @return the image, or <code>null</code> if none\n',non-directive
' Converts the given SWT RGB color value object to a string.\n <p>\n The string representation of an RGB color value has the form\n <code><it>red</it>,<it>green</it></code>,<it>blue</it></code> where\n <code><it>red</it></code>, <it>green</it></code>, and \n <code><it>blue</it></code> are string representations of integers.\n </p>\n\n @param value the RGB color value object\n @return the string representing the given RGB color value\n',non-directive
?,non-directive
' Defines an iterator that operates over an ordered <code>Map</code>.\n ',non-directive
'Each\n instance describes a particular resource (such as a Color, Font, or Image)\n and can create and destroy that resource on demand. ',non-directive
' The default-default value for boolean preferences (<code>false</code>).\n',non-directive
'@param mh\n            the margin height\n ',non-directive
'@since JDK1.1\n',non-directive
'@link\n AbstractInformationControlManager} and subclasses.\n\n ',non-directive
'<li>spacing(3)</li>\n </ul>\n ',non-directive
'@link IterableSortedMap}<K, V>\n ',non-directive
'@link org.eclipse.jface.text.contentassist.IContextInformationPresenter} to\n allow to install a content assistant on the given\n {',non-directive
' Image registry key for disabled menu image.\n \n @since 3.4\n',non-directive
?,non-directive
'It is the responsibility of the program using\nreference objects to ensure that the objects remain reachable for as long as\nthe program is interested in their referents.\n\n',non-directive
?,non-directive
'@return the change button\n',non-directive
'@link org.apache.commons.collections.Factory Factory} interfaces.\n',non-directive
?,non-directive
'A key stroke can contain zero or more modifiers\nkeys, but it always contains exactly one natural key.  ',non-directive
'@param data GridData to copy\n ',non-directive
' Create a new instance of the receiver that is hooked to the current \n display.\n \n',non-directive
' Adds owner draw support for tables.\n\n @since 3.4\n',non-directive
'To wait \"forever\", you can use\na value of <tt>Long.MAX_VALUE</tt>.\n\n',non-directive
'@return a text edit describing the operation needed to delete <code>selection</code>\n ',non-directive
'<h2>\nPackage Specification</h2>\nThis package contains support for managing resources, including:\n<ul>\n',non-directive
' Convenience method that applies the edit returned from {@link #delete(ISelection)} to the\n underlying document.\n \n @param selection the selection to delete\n @throws BadLocationException if accessing the document failed\n',non-directive
'@param pageName the name of the page\n',non-directive
'<li>HashBag - implementation that uses a HashMap to store the data\n',non-directive
'@param status\n            a status object\n ',non-directive
' Replace the information control.\n\n ',non-directive
' Computes the size for this page\'s UI control.\n ',non-directive
' Gets a Boolean from a Map in a null-safe manner.\n <p>\n If the value is a <code>Boolean</code> it is returned directly.\n If the value is a <code>String</code> and it equals \'true\' ignoring case\n then <code>true</code> is returned, otherwise <code>false</code>.\n If the value is a <code>Number</code> an integer zero value returns\n <code>false</code> and non-zero returns <code>true</code>.\n Otherwise, <code>null</code> is returned.\n\n @param map  the map to use\n @param key  the key to look up\n @return the value in the Map as a Boolean, <code>null</code> if null map input\n',non-directive
'@link #replace(ISelection, String)}\n to the underlying document and adapts the selection accordingly.\n \n',non-directive
'@throws BadLocationException if computing the edit failed\n',non-directive
'@param info the context information which this validator should check\n ',non-directive
?,non-directive
' Returns whether help is available for this wizard.\n <p>\n The result of this method is typically used by the container to\n show or hide the Help button.\n </p>\n\n @return <code>true</code> if help is available,\n   and <code>false</code> if this wizard is helpless\n',non-directive
'<li><b>keytool</b>\n    (<a href=\"{@docRoot}/../technotes/tools/solaris/keytool.html\">\n      for Solaris/Linux</a>)\n    (<a href=\"{@docRoot}/../technotes/tools/windows/keytool.html\">\n      for Windows</a>)\n    </li>\n\n  ',non-directive
'@throws IllegalArgumentException if the array is not an array\n ',non-directive
'Default behaviour is to open or\n create the dialog, based on the setting of <code>getOpenOnRun</code>,\n and increment the nesting depth.\n \n',non-directive
' A preference manager maintains a hierarchy of preference nodes and\n associated preference pages.\n',non-directive
' Adds (or replaces) a font to this font registry under the given\n symbolic name.\n <p>\n A property change event is reported whenever the mapping from\n a symbolic name to a font changes. The source of the event is\n this registry; the property name is the symbolic font name.\n </p>\n\n @param symbolicName the symbolic font name\n @param fontData an Array of FontData\n',non-directive
'@param newType\n            One of the IMessageProvider constants. ',non-directive
'@param symbolicName\n            the symbolic font name\n ',non-directive
' Return the Add button.  \n \n @return the button\n @since 3.5\n',non-directive
'<li>align(SWT.FILL, SWT.FILL)</li>\n ',non-directive
'@since 3.2\n',non-directive
' Convenience method that applies the edit returned from {@link #replace(ISelection, String)}\n to the underlying document and adapts the selection accordingly.\n \n @param selection the selection to replace\n @param replacement the replacement text\n @throws BadLocationException if accessing the document failed\n',non-directive
?,non-directive
' Adds a property change listener to this <code>ColorSelector</code>.\n ',non-directive
' @return the completion position\n',non-directive
'@param key  the key to look up\n ',non-directive
'This package contains key specifications for DSA public and private keys,\nRSA public and private keys, PKCS #8 private keys in DER-encoded format,\nand X.509 public and private keys in DER-encoded format.\n\n',non-directive
?,non-directive
' A field editor for a combo box that allows the drop-down selection of one of\n a list of items.\n \n @since 3.3\n',non-directive
'@param id the preference node id\n ',non-directive
?,non-directive
' Abstract base class for all field editors.\n ',non-directive
'The package provides a set of rules whereby <tt>PatternRule</tt> is the\nmost important one. ',non-directive
'@return this\n ',non-directive
'</p>\n \n ',non-directive
'@param store the preference store\n ',non-directive
'@param selection the selection to delete\n ',non-directive
'<p>\n  ',non-directive
' Returns whether the dialog should be opened before the operation is run.\n ',non-directive
' Creates a new context information validator which is ready to be installed on\n a particular context information.\n\n ',non-directive
?,non-directive
?,non-directive
'@link #end()} constant.\n\n ',non-directive
' This class provides a convenient shorthand for creating and initialising\n RowData. ',non-directive
' The default-default value for rectangle preferences\n (the empty rectangle <code>(0,0,0,0)</code>).\n',non-directive
?,non-directive
' Set the layout data of the button to a GridData with appropriate heights\n and widths.\n \n',non-directive
'<LI> <I>Filter</I>: Provides fine-grained control over what gets logged,\n                       beyond the control provided by log levels. ',non-directive
?,non-directive
' @param proposals the proposals\n',non-directive
'\nProvides a framework for viewers, which are model-based\ncontent adapters for SWT widgets.\n',non-directive
'@since 3.3\n',non-directive
' Returns the font associated with the given symbolic font name.\n ',non-directive
' The symbolic font name for the banner font (value\n <code>\"org.eclipse.jface.bannerfont\"</code>).\n',non-directive
'@param numColumns number of columns in the layout\n ',non-directive
' Converts the given value into a long.\n This method fails if the value does not represent a long.\n\n @param value the value to be converted\n @return the value as a long\n @exception DataFormatException if the given value does not represent\n\ta long\n',non-directive
'@param page the page to show\n ',non-directive
?,non-directive
' Enables showing the revision id.\n\n ',non-directive
' Installs this presenter for the given context information.\n\n ',non-directive
' Gets an immutable version of a {',non-directive
'<li>\n<tt>BooleanFieldEditor</tt> - booleans</li>\n\n',non-directive
'@return Returns the blockedHandler.\n',non-directive
'The <tt>ContentProposalAdapter</tt> manages the creation, \nhiding, and showing of the proposal popup, as well as the proper handling of key events\nbetween the adapted control and its popup.  ',non-directive
'@since 3.0\n',non-directive
?,non-directive
'@param store the preference store\n ',non-directive
'@return a new image descriptor\n',non-directive
?,non-directive
' Minimal interface to a message provider. Used for dialog pages which can\n provide a message with an icon.\n \n @since 2.0\n',non-directive
'<dd>\n                        When an agent is specified at JVM launch time this attribute\n\t\t\tspecifies the agent class.\n\t\t\t',non-directive
'</p>\n',non-directive
'This \n                          package includes two formatters, SimpleFormatter and \n                          XMLFormatter, for formatting log records in plain text\n                          or XML respectively. ',non-directive
?,non-directive
'@param predicate  the predicate to switch on\n ',non-directive
' Sets whether this wizard needs a progress monitor.\n \n',non-directive
'@link java.lang.management.GarbageCollectorMXBean}</tt> </td>\n<td> Garbage collector in the Java virtual machine.</td>\n</tr>\n<tr>\n<td> <tt>{',non-directive
' Returns all preference nodes managed by this\n manager.\n\n @param order the traversal order, one of \n\t<code>PRE_ORDER</code> and <code>POST_ORDER</code>\n @return a list of preference nodes\n  (element type: <code>IPreferenceNode</code>)\n  in the given order\n',non-directive
'<li>ReferenceMap - allows the garbage collector to collect keys and values using equals() for comparison\n',non-directive
'<!--\n<h2>Related Documentation</h2>\n\nFor overviews, tutorials, examples, guides, and tool documentation, please see:\n<ul>\n  ',non-directive
?,non-directive
' Loads this preference store from the file established in the constructor\n <code>PreferenceStore(java.lang.String)</code> (or by\n <code>setFileName</code>). Default preference values are not affected.\n \n @exception java.io.IOException\n                if there is a problem loading this store\n',non-directive
'@see org.eclipse.swt.widgets.Text#setText(String string)\n',non-directive
?,non-directive
?,non-directive
' Sets whether the columns should be forced to be equal width\n \n ',non-directive
' Returns the list of {@link ILineRange}s of this change region for which the revision\n information is still valid.\n\n @return the list of adjusted line ranges\n',non-directive
'@param event a selection changed event\n\n ',non-directive
?,non-directive
'@param map  the map to use\n ',non-directive
' @param display the display the color is from\n @return the default color to use for displaying hyperlinks.\n @see ColorRegistry#get(String)\n @see JFacePreferences#HYPERLINK_COLOR\n',non-directive
' Get the IDialogBlockedHandler to be used by WizardDialogs and\n ModalContexts.\n \n @return Returns the blockedHandler.\n',non-directive
' Computes the diff hunks from an {',non-directive
'@param iterators  the iterators to use, not null or empty or contain nulls\n ',non-directive
?,non-directive
' Creates the cancel button.\n \n',non-directive
'@return this\n',non-directive
' Sets the preference page in which this field editor\n appears.\n\n @param preferencePage the preference page, or <code>null</code> if none\n @deprecated use #setPage(DialogPage)\n',non-directive
'<dd>\n                        Boolean (<code>true</code> or <code>false</code>, case irrelevant).\n                        ',non-directive
'@param event\n            a selection changed event\n \n ',non-directive
' Returns the value that will be used for Scale.setMinimum(int).\n \n',non-directive
?,non-directive
?,non-directive
' A mutator for the preference store to be modified by the toggle button.\n \n',non-directive
?,non-directive
?,non-directive
'The JFace resources module is an independent JFace module requiring a basic\nknowledge of SWT and the JFace property change event mechanism. ',non-directive
?,non-directive
'@link #end()} remains unchanged.\n\n ',non-directive
?,non-directive
'@version $Revision: 814997 $ $Date: 2009-09-15 07:29:56 +0200 (Tue, 15 Sep 2009) $\n\n ',non-directive
'@return the <code>switch</code> closure\n ',non-directive
?,non-directive
?,non-directive
'<li><a href=\"http://www.ietf.org/rfc/rfc2459.txt\">\nhttp://www.ietf.org/rfc/rfc2459.txt</a>\n  ',non-directive
' Copies the given RowLayout instance\n \n @param layout\n            layout to copy\n @return a new RowLayout\n',non-directive
'<li>FixedSize - ensures that the size of the map cannot change\n',non-directive
'Convert the value of the given key in this dialog\n settings to a float and return it.\n \n',non-directive
'document)\n',non-directive
'@param map  the map to use\n ',non-directive
'<P>\n',non-directive
?,non-directive
' Returns the current information control replacer or <code>null</code> if none has been installed.\n\n @return the current information control replacer or <code>null</code> if none has been installed\n',non-directive
' Returns an array of FontData containing copies of the FontData\n from the original. \n \n @param original array to copy\n @return a deep copy of the original array\n @since 3.3\n',non-directive
?,non-directive
'@throws BadLocationException if computing the edit failed\n',non-directive
?,non-directive
?,non-directive
?,non-directive
'<h2>Related Documentation</h2>\n\nFor overviews, tutorials, examples, guides, and tool documentation,\nplease see:\n<ul>\n  ',non-directive
' Removes from the list all fonts that do not exist in this system.  \n ',non-directive
'@return a GridDataFactory that makes controls fill their grid by default\n \n ',non-directive
?,non-directive
'\n<p>\nThis package contains implementations of the\n{',non-directive
' Find the first valid fontData in the provided list. ',non-directive
'@see #isHelpAvailable()\n',non-directive
' An ordered map iterator over no elements.\n',non-directive
' This class provides a convenient shorthand for creating and initialising\n RowData. This offers several benefits over creating RowData the normal way:\n \n <ul>\n <li>The same factory can be used many times to create several RowData\n instances</li>\n <li>The setters on RowDataFactory all return \"this\", allowing them to be\n chained</li>\n </ul>\n \n @since 3.5\n',non-directive
' Create a ProgressIndicator as a child under the given parent.\n \n @param parent\n            The widgets parent\n @param style the SWT style constants for progress monitors created \n \tby the receiver.\n @since 3.4\n',non-directive
'@return PageLayout\n \n ',non-directive
' Removes the provided page changing listener from the list of page\n changing listeners registered for the dialog.\n \n',non-directive
' Disposes any remaining resources allocated by this manager. \n',non-directive
'@since 3.0\n',non-directive
'@since 2.0\n',non-directive
'@param value\n            the value to be associated with the <code>key</code>\n',non-directive
' The BooleanPropertyAction is an action that set the values of a \n boolean property in the preference store.\n',non-directive
'Also, each viewer registers with its label provider for notification of\nchanges that would affect what the viewer displays (see <tt>ILabelProviderListener.stateChanged</tt>).\n',non-directive
'Then, simply use these\nsubclasses with the <code>BindingManager</code>.\n',non-directive
'@param helpAvailable <code>true</code> to show the help\n control, <code>false</code> otherwise.\n ',non-directive
'<LI><code>RowSet</code> technology -- providing a convenient means of\n       handling and passing data\n</UL>\n',non-directive
?,non-directive
' Create an area for adding support components as a child of parent.\n @param parent The parent {@link Composite}\n @param status The {@link IStatus} that is being displayed.\n @return Control\n',non-directive
'@param parent\n            The Composite to create the receiver in.\n \n',non-directive
'That is, a queue does not keep track of the references that are\nregistered with it.  ',non-directive
'@return the <code>chained</code> closure\n ',non-directive
' Returns the number of pixels corresponding to the given number of\n vertical dialog units.\n \n',non-directive
' Constructs a new <code>BufferOverflowException</code>.\n',non-directive
'<!--\n<h2>Related Documentation</h2>\n\nFor overviews, tutorials, examples, guides, and tool documentation, please see:\n<ul>\n  ',non-directive
' Sets the visual feedback provider for content assist.\n ',non-directive
' Sets the selected range. Offset and length based on the subject\'s\n model (e.g. document).\n\n @param offset the offset of the selection based on the subject\'s model e.g. document\n @param length the length of the selection based on the subject\'s model e.g. document\n',non-directive
?,non-directive
' Returns the validator.\n \n @return the validator\n',non-directive
?,non-directive
' Lightweight descriptor for an SWT color. ',non-directive
'@see java.lang.Float#valueOf(java.lang.String)\n',non-directive
'</pre>\n',non-directive
'Implementors of <tt>IControlContentAdapter</tt>\nallow the adapter to set and retrieve the contents of the supplied control.\n',non-directive
?,non-directive
' Update the tree to use the specified <code>Font</code>.\n \n @param dialogFont\n            the <code>Font</code> to use.\n @since 3.0\n',non-directive
?,non-directive
'</p>\n\n ',non-directive
' This registries <code>Display</code>. ',non-directive
' Returns the JFace\'s banner font. Convenience method equivalent to\n \n <pre>\n JFaceResources.getFontRegistry().get(JFaceResources.BANNER_FONT)\n </pre>\n \n @return the font\n',non-directive
' Constructor for IconAndMessageDialog.\n \n @param parentShell\n            the parent shell, or <code>null</code> to create a top-level\n            shell\n',non-directive
' Selects the saved item in the tree of preference pages. If it cannot do\n this it saves the first one.\n',non-directive
'@return FontData[]\n \n ',non-directive
'@param vertical true if the control\'s row should grow vertically\n ',non-directive
' Gets an immutable version of a {@link ListIterator}. The returned object\n will always throw an {@link UnsupportedOperationException} for\n the {@link Iterator#remove}, {@link ListIterator#add} and\n {@link ListIterator#set} methods.\n\n @param listIterator  the iterator to make immutable\n @return an immutable version of the iterator\n',non-directive
' Returns the initial location to use for the shell. ',non-directive
'<h2>Related Documentation</h2>\n\nFor overviews, tutorials, examples, guides, and tool documentation, please see:\n<ul>\n  ',non-directive
' Constructs a new <code>LineIndexOutOfBoundsException</code>\n object with an argument indicating the illegal index.\n\n ',non-directive
?,non-directive
'<li>\na <b>label provider</b> - maps model objects to displayable labels containing\ntext and/or an image</li>\n</blockquote>\nThis package contains the viewer framework. ',non-directive
?,non-directive
' Applies the dialog font to all controls that currently have the default\n font.\n \n',non-directive
' Returns the descriptor for JFace\'s dialog font. ',non-directive
' Implements <code>IProgressMonitor.done</code>.\n @see IProgressMonitor#done()\n',non-directive
?,non-directive
'@return the value as a double\n ',non-directive
'@param value the value to be converted\n ',non-directive
?,non-directive
'@return a combination iterator over the iterators\n ',non-directive
'@param parent The SWT parent of the part.\n ',non-directive
'Together with linked mode, inserting a template can\ncreate a on-the-fly edit mask within a text viewer.<br>\n<br>\n',non-directive
'<li>SetUnique - a list that avoids duplicate entries like a Set</li>\n</ul>\n',non-directive
' Find the <code>IPreferenceNode</code> that has data the same id as the\n supplied value.\n \n',non-directive
?,non-directive
'the progress indicator ',non-directive
'@since 3.1\n',non-directive
' Update the layout data for a column\n \n @param column\n            the column\n @since 3.5\n',non-directive
?,non-directive
' The <code>IPreferenceStore</code> interface represents a table mapping\n named preferences to values. ',non-directive
'@param show <code>true</code> to show the revision, <code>false</code> to hide it\n',non-directive
'@param offset the document offset for which the information has been computed\n',non-directive
'@since 3.1\n',non-directive
'<p>\n The comparator is optional. ',non-directive
'<h3>Introduction</h3>\nTemplates are shortcuts for frequently used fragments of text such as\ncode patterns or complex text entities. ',non-directive
?,non-directive
?,non-directive
'@return the code of the button that was pressed that resulted in this\n         dialog closing. ',non-directive
' The value of the preference when the user has asked that the answer to\n the question always be \"no\".\n',non-directive
?,non-directive
'@since 2.0\n ',non-directive
' Returns the default value for the boolean-valued preference\n with the given name.\n Returns the default-default value (<code>false</code>) if there\n is no default preference with the given name, or if the default \n value cannot be treated as a boolean.\n\n @param name the name of the preference\n @return the default value of the named preference\n',non-directive
?,non-directive
?,non-directive
'@param work the amount of work to increment by.\n',non-directive
'<LI>Custom mapping of user-defined types (UDTs)\n  ',non-directive
'@return the stored representation of the FontData objects\n ',non-directive
' Removes the given input change listener from this input change provider.\n Has no effect if an identical listener is not registered.\n\n @param inputChangeListener the listener to remove\n @since 3.4\n',non-directive
' Returns the default value for the color-valued preference\n with the given name in the given preference store.\n Returns the default-default value (<code>COLOR_DEFAULT_DEFAULT</code>) \n is no default preference with the given name, or if the default \n value cannot be treated as a color.\n\n @param store the preference store\n @param name the name of the preference\n @return the default value of the preference\n',non-directive
?,non-directive
?,non-directive
'@param id\n            the node id\n',non-directive
'@param key\n            the key.\n ',non-directive
'The spacing\n is the distance between cells within the layout. \n \n',non-directive
'</li>\n   ',non-directive
?,non-directive
'Returns the given default value if the \n value does not represent a rectangle.\n\n ',non-directive
'<li>\n    <a href=\n      \"{@docRoot}/../technotes/guides/security/crypto/CryptoSpec.html\">\n      <b>Java<FONT SIZE=-2><SUP>TM</SUP></FONT>\n      Cryptography Architecture API Specification and Reference\n      </b></a></li>\n  ',non-directive
'<li>equalWidth(false)</li>\n </ul>\n ',non-directive
'@since JDK1.1\n',non-directive
' Converts the given long object to a string.\n ',non-directive
?,non-directive
?,non-directive
?,non-directive
?,non-directive
' A field editor for an enumeration type preference.\n ',non-directive
'<h2>Related Documentation</h2>\n\nFor overviews, tutorials, examples, guides, and tool documentation, please see:\n<ul>\n  ',non-directive
'@return the button\n ',non-directive
' Set the composite that is showing the page.\n ',non-directive
'@link java.lang.ref.Reference}</code> class.  ',non-directive
?,non-directive
'@param dflt the default value\n ',non-directive
?,non-directive
?,non-directive
' Adds (or replaces) an image descriptor to this registry. ',non-directive
' Identifier for the color used to show label decorations For example in\n \'Foo.txt [1.16]\', the decoration is \'[1.16]\'.\n \n @since 3.4\n',non-directive
'@return a new object\n ',non-directive
' Sets or clears the currently selected wizard node within this page. \n \n @param node the wizard node, or <code>null</code> to clear\n',non-directive
' Convenience API. Convert the value of the given key in this dialog\n settings to a boolean and return it.\n \n @param key\n            the key\n @return the boolean value, or <code>false</code> if none\n',non-directive
?,non-directive
'@since 3.3\n',non-directive
?,non-directive
' Returns the font data associated with the given symbolic font name.\n ',non-directive
' Returns the current value of the double-valued preference with the\n given name.\n ',non-directive
?,non-directive
' The default-default value for point preferences\n (the origin, <code>(0,0)</code>).\n',non-directive
' Returns this page\'s name.\n\n @return the name of this page\n',non-directive
'@param in\n            the input stream\n ',non-directive
'<p>\n Moved into this package from <code>org.eclipse.jface.internal.text.revisions</code>.</p>\n',non-directive
' Sets whether the dialog should be opened before the operation is run.\n ',non-directive
'@see #create\n ',non-directive
'@see SWT#COLOR_WIDGET_DARK_SHADOW\n ',non-directive
' Computes the diff hunks from an {@link ILineDiffer}.\n\n @since 3.3\n',non-directive
'@return a newly created ColorDescriptor\n',non-directive
'The margins\n specify the number of pixels of horizontal and vertical margin that will\n be placed along the left, right, top, and bottom edges of the layout.\n ',non-directive
' Gets an empty ordered map iterator.\n ',non-directive
'@param name the name of the preference\n ',non-directive
'@link java.lang.ref.ReferenceQueue}</code>\nclass.\n\n',non-directive
' Returns the number of basic controls this field editor consists of.\n\n @return the number of controls\n',non-directive
' Opens this message dialog, creating it first if it has not yet been created.\n <p>\n This method waits until the dialog is closed by the end user, and then it\n returns the dialog\'s return code. The dialog\'s return code is either the\n index of the button the user pressed, or {@link SWT#DEFAULT} if the dialog\n has been closed by other means.\n </p>\n\n @return the return code\n\n @see org.eclipse.jface.window.Window#open()\n',non-directive
'@return <code>true</code> if the listener was added\n',non-directive
'@since 3.2\n',non-directive
?,non-directive
'@see org.eclipse.swt.widgets.Scale#setIncrement(int)\n',non-directive
?,non-directive
'@return a new iterator\n',non-directive
'@param name the name of the preference\n ',non-directive
'@since 3.2\n ',non-directive
'See that package and, for example, java.security.Permission for details.\n\n',non-directive
'@param labelText the label text of the field editor\n ',non-directive
'It is equivalent to using the following constructor with <code>false</code>\n for the <code>useGroup</code> argument.\n ',non-directive
'@return <code>true</code> if any of the managed popups have the focus, <code>false</code> otherwise\n',non-directive
'In the case of a control, the font used by the control at the time\n the PixelConverter is created is used for the pixel calculations. ',non-directive
'@param progressIndicatorHeight The suggested height of the indicator\n',non-directive
' Get the last known right side width.\n \n @return the width.\n',non-directive
' Return the Remove button.  \n \n @return the button\n @since 3.5\n',non-directive
'@see org.eclipse.jface.dialogs.TrayDialog\n ',non-directive
'</p>\n\n ',non-directive
?,non-directive
'<li>TreeBag - implementation that uses a TreeMap to store the data\n</ul>\n',non-directive
' type specifies whether the layout places controls in rows or columns.\n \n',non-directive
'@param style either <code>GRID</code> or <code>FLAT</code>\n',non-directive
'<ul>\n</ul>\n',non-directive
' Creates a new GridData instance. ',non-directive
?,non-directive
'<li>Unmodifiable - ensures the collection cannot be altered\n',non-directive
'@since 3.0\n',non-directive
'@param foreground the foreground color\n ',non-directive
'@since 3.1\n',non-directive
'@return <code>true</code> if this control is available\n',non-directive
'@since 3.1\n ',non-directive
?,non-directive
' Finds and returns the contribution node at the given path.\n\n @param path the path\n @return the node, or <code>null</code> if none\n',non-directive
?,non-directive
' Creates a mult-value map backed by the given map which returns\n collections of type ArrayList.\n\n @param map  the map to decorate\n @return a multi-value map backed by the given map which returns ArrayLists of values.\n @see MultiValueMap\n @since Commons Collections 3.2\n',non-directive
'@see IPageChangeProvider\n ',non-directive
?,non-directive
'@param node the node to add\n ',non-directive
' Creates a new preference manager with the given\n path separator and root node.\n\n @param separatorChar the separator character\n @param rootNode the root node. \n\n @since 3.4\n',non-directive
' Sets the margins for layouts created with this factory. ',non-directive
' Sets the spacing for layouts created with this factory. ',non-directive
'@param info the context information which this presenter should style\n ',non-directive
?,non-directive
' Adds a new column of data to this table layout.\n \n',non-directive
' Convenience API. ',non-directive
'</P>\nThe key elements of this package include:\n<UL>\n   ',non-directive
' Closes this dialog\'s tray, disposing its widgets.\n \n',non-directive
'<li>{',non-directive
' The progress indicator control.\n',non-directive
'This is not provided in the JDK.\n',non-directive
'@link java.lang.management.ManagementFactory} class is the management\nfactory class for the Java platform.  ',non-directive
' Registers a given content assist processor for a particular content type.\n ',non-directive
?,non-directive
' Implements <code>IProgressMonitor.isCanceled</code>.\n @see IProgressMonitor#isCanceled()\n',non-directive
'<LI>The <code>DataSource</code> interface as a means of making a connection.  ',non-directive
'@since 3.4\n',non-directive
' The symbolic font name for the text font (value\n <code>\"org.eclipse.jface.textfont\"</code>).\n',non-directive
'RBG bgColor = PreferenceConverter.getValue(store, \"bg\");\n </pre>\n </p>\n <p>\n This class contains static methods and fields only and cannot \n be instantiated.\n ',non-directive
?,non-directive
?,non-directive
?,non-directive
' Sets the title for this dialog.\n \n',non-directive
' Image registry key for disabled menu image.\n \n',non-directive
'@param cc\n',non-directive
?,non-directive
?,non-directive
?,non-directive
'@return the font\n',non-directive
' Converts the given integer object to a string.\n ',non-directive
' Sets the current value of the preference with the given name\n in the given preference store.\n\n @param store the preference store\n @param name the name of the preference\n @param value the new current value of the preference\n',non-directive
'@return the Restore Defaults button\n',non-directive
'<li>\nstring conversion (<tt>StringConverter</tt>) - for parsing property files</li>\n</ul>\n',non-directive
'</p>\n <p>\n The first six colors returned correspond to the following {',non-directive
' Display the given error message. ',non-directive
?,non-directive
'@param control the control that will be displayed or hidden.\n',non-directive
'<p>\n The float is obtained from the results of {',non-directive
'<LI>Since 1.6 -- new in the JDBC 4.0 API and part of the Java SE platform, \n     version 6\n ',non-directive
?,non-directive
'@param key  the key of the value to look up in that map\n  ',non-directive
' Image registry key for error message image (value\n <code>\"dialog_title_error_image\"</code>).\n',non-directive
' Returns whether this wizard needs Previous and Next buttons.\n ',non-directive
' Message (a localized string).\n',non-directive
'<LI><code>ResultSet</code> interface\n  </UL>\n  ',non-directive
'@param name the name of the preference\n ',non-directive
'<LI><code>SQLData</code> interface -- specifies the mapping of\n              a UDT to an instance of this class\n\t ',non-directive
'</p>\n\n ',non-directive
' Removes a revision listener.\n\n ',non-directive
'@link #transformedMap(Map, Transformer, Transformer)}\n  ',non-directive
' Returns the default value for the float-valued preference\n with the given name.\n ',non-directive
'<li>Exception - always throws an exception\n </ul>\n ',non-directive
'@throws IllegalArgumentException if any element in the arrays is null\n ',non-directive
?,non-directive
?,non-directive
'@param width\n            margin width (pixels)\n ',non-directive
'Transformers are typically used for type conversions, or extracting data\n from an object.\n ',non-directive
'@param name the name of the preference this field editor works on\n ',non-directive
?,non-directive
' Get the layout data for a column\n \n ',non-directive
'@param button\n',non-directive
' Progress is done.\n',non-directive
'@param parent the parent control\n',non-directive
?,non-directive
?,non-directive
?,non-directive
' Returns the default value for the rectangle-valued preference\n with the given name in the given preference store.\n Returns the default-default value (<code>RECTANGLE_DEFAULT_DEFAULT</code>) \n is no default preference with the given name, or if the default \n value cannot be treated as a rectangle.\n\n @param store the preference store\n @param name the name of the preference\n @return the default value of the preference\n',non-directive
?,non-directive
?,non-directive
' Returns the current message for this message provider.\n ',non-directive
'<p>\n Example usage:\n <pre>\n\t\tRadioGroupFieldEditor editor= new RadioGroupFieldEditor(\n\t\t\t\"GeneralPage.DoubleClick\", resName, 1,\n\t\t\tnew String[][] {\n\t\t\t\t{\"Open Browser\", \"open\"},\n\t\t\t\t{\"Expand Tree\", \"expand\"}\n\t\t\t},\n          parent,\n          true);\t\n </pre>\n </p>\n \n ',non-directive
' Returns the number of basic controls this field editor consists of.\n\n ',non-directive
?,non-directive
?,non-directive
'<li><a href=\"{@docRoot}/../technotes/guides/security/crypto/CryptoSpec.html\"><b>\n    Cryptography Architecture</b></a></li>\n\n  ',non-directive
' Implements <code>IProgressMonitor.beginTask</code>.\n ',non-directive
'@param property the field editor property name, \n   such as <code>VALUE</code> or <code>IS_VALID</code>\n ',non-directive
'</UL>\n',non-directive
' Convenience method that applies the edit returned from {',non-directive
'@see #MessageDialog(Shell, String, Image, String, int, String[], int)\n ',non-directive
?,non-directive
'@param state\n            the enabled state.\n',non-directive
' Initialize the progress bar to be animated.\n',non-directive
?,non-directive
'@param display the <code>Display</code> to hook into\n ',non-directive
'@see PopupDialog#getDialogSettings()\n ',non-directive
'@return a copy of the receiver\n',non-directive
'<li>{',non-directive
'@param pageContainer Composite\n \n ',non-directive
?,non-directive
'@link IterableMap}.\n ',non-directive
?,non-directive
' Sets the current value of the string-valued preference with the\n given name.\n ',non-directive
' Creates a ProgressMonitorPart.\n ',non-directive
'@param message\n            the message\n',non-directive
' Creates a new preference node with the given id. ',non-directive
?,non-directive
?,non-directive
'<li>the <code>Class</code> object for the class that implements the \n           <code>SQLData</code> interface\n   </ul>\n',non-directive
' Constructs an uninitialized composite image.\n',non-directive
' An accessor for the index of the default button in the button array.\n \n',non-directive
'@see #applyTo\n',non-directive
'@since 3.3\n',non-directive
'@throws IllegalArgumentException if the paramTypes and args don\'t match\n',non-directive
'@param control\n            the <code>Control</code> to lay out.\n ',non-directive
'@param orientation the popup\'s orientation\n',non-directive
' A blockage has occured. ',non-directive
' Converts the given float value to a string.\n ',non-directive
?,non-directive
'@param minHeight\n            the minimum page height\n ',non-directive
' Key used to restore the layout data in the columns data-slot\n @since 3.5\n',non-directive
'@param value the value to be converted\n ',non-directive
' Sets the default value for the string-valued preference with the\n given name. \n ',non-directive
' Creates a new GridData instance. All attributes of the GridData instance\n will be initialised by the factory.\n \n @return a new GridData instance\n',non-directive
' The number of extra pixels taken as horizontal trim by the table column.\n To ensure there are N pixels available for the content of the column,\n assign N+COLUMN_TRIM for the column width.\n \n @return the trim used by the columns\n @since 3.4\n',non-directive
' Returns whether the current page is valid.\n \n @return <code>false</code> if the current page is not valid, or or\n         <code>true</code> if the current page is valid or there is no\n         current page\n',non-directive
' Returns the image associated with the given key in this registry, \n or <code>null</code> if none.\n \n @param key the key\n @return the image, or <code>null</code> if none\n',non-directive
'@param xHint horizontal hint (pixels), or SWT.DEFAULT to use the control\'s preferred size\n ',non-directive
' Resizes the range by <code>delta</code> lines by moving the start offset, {',non-directive
' Image registry key for banner image (value\n <code>\"dialog_title_banner_image\"</code>).\n',non-directive
'@return the message type\n',non-directive
'@param labelAndValues list of radio button [label, value] entries;\n  the value is returned when the radio button is selected\n ',non-directive
'<p>\n Given two ordered {',non-directive
?,non-directive
?,non-directive
' Gets a byte from a Map in a null-safe manner,\n using the default value if the the conversion fails.\n <p>\n The byte is obtained from the results of {@link #getNumber(Map,Object)}.\n\n @param map  the map to use\n @param key  the key to look up\n @param defaultValue  return if the value is null or if the\n     conversion fails\n @return the value in the Map as a byte, <code>defaultValue</code> if null map input\n',non-directive
'@return String\n',non-directive
'@link SWT#COLOR_CYAN cyan},\n {',non-directive
' Returns this content assist subject control\'s document.\n\n @return the viewer\'s input document\n',non-directive
'@param labelText the label text of the field editor\n ',non-directive
?,non-directive
'@param value The font data.\n ',non-directive
?,non-directive
' Sets the visibility of this dialog page.\n\n @param visible <code>true</code> to make this page visible,\n  and <code>false</code> to hide it\n',non-directive
'@return the font data\n',non-directive
?,non-directive
'@param dialogPage\n \n ',non-directive
'<li>LinkedMap - a hash map that maintains insertion order, supporting OrderedMapIterator\n',non-directive
'<p>\n Given two ordered {',non-directive
'<li><a href=\"http://www.java.sun.com/docs/books/tutorial/collections/\">\n       <b>Collections Framework Tutorial</b></a>\n    ',non-directive
' Gets a Map from a Map in a null-safe manner.\n ',non-directive
' Constant for the question image, or a simple dialog with the question image and Yes/No buttons (value 3).\n \n @see #MessageDialog(Shell, String, Image, String, int, String[], int)\n @see #open(int, Shell, String, String, int)\n',non-directive
?,non-directive
' Returns a copy of the given RowData\n \n @param data\n            RowData to copy\n @return a copy of the argument\n',non-directive
'@return a new RowDataFactory that creates copies of the argument by\n         default\n',non-directive
?,non-directive
' Returns the dialog settings for this wizard page.\n\n @return the dialog settings, or <code>null</code> if none\n',non-directive
' Return code used when dialog failed\n',non-directive
'\n\nProvides the RMI package. ',non-directive
?,non-directive
?,non-directive
' Button id for a \"Back\" button (value 14).\n',non-directive
'@param labelText the label text of the field editor\n ',non-directive
' The margin height; <code>5</code> pixels by default.\n',non-directive
'<li><a href=\n    \"{@docRoot}/../technotes/guides/security/spec/security-spec.doc.html\"><b>\n    Security Architecture</b></a></li>\n\n  ',non-directive
' Add a section in the receiver.\n \n',non-directive
'This allows the flexibility\nof adding localizations for new localizations at any time.\n',non-directive
'@param name the name of the symbolic value that is changing.\n ',non-directive
'At this point, the reference is considered\nto be <em>enqueued</em>.  ',non-directive
'<li>Support added for the SQL:2003 XML data type\n ',non-directive
'<li>MultiKey - a holder of multiple keys tied together\n</ul>\n',non-directive
'@throws NullPointerException if either iterator is null\n',non-directive
'@param vSpan number of rows spanned by the control\n ',non-directive
?,non-directive
'@param oldValue the old value.\n ',non-directive
'@since JDK1.0\n',non-directive
'<LI>Sending SQL statements to a database\n  <UL>\n\t ',non-directive
'\n\nProvides classes for performing arbitrary-precision integer arithmetic\n(BigInteger) and arbitrary-precision decimal arithmetic (BigDecimal).\n',non-directive
'@param differ the line differ to query\n ',non-directive
'<li>The same factory can be used many times to create several GridData instances</li>\n ',non-directive
' Converts the given float object to a string.\n Equivalent to <code>String.valueOf(value.floatValue())</code>.\n\n @param value the float object\n @return the string representing the given float value\n',non-directive
?,non-directive
' Tests if dialogs that have help control should show it\n all the time or only when explicitly requested for\n each dialog instance.\n \n',non-directive
'<li>Unmodifiable - ensures the collection cannot be altered\n',non-directive
?,non-directive
'An object of type <code>Double</code>,\nfor example, contains a field whose type is double, representing that\nvalue in such a way that a reference to it can be stored in a variable\nof reference type. ',non-directive
'@param shellStyle\n            The shell style.\n ',non-directive
'To use this feature:\n </p>\n \n <ol>\n ',non-directive
?,non-directive
'@param parent the parent\n ',non-directive
?,non-directive
'This interface allows the querying of details\n associated with the maximum number of elements.\n\n ',non-directive
' Creates a new updater for the given <code>category</code>.\n\n ',non-directive
?,non-directive
?,non-directive
'@param margins\n            margin size (pixels)\n ',non-directive
'@param newType\n            the message type\n ',non-directive
?,non-directive
?,non-directive
' {@inheritDoc}\n \n ',non-directive
' Recursively enumerates all nodes at or below the given node\n and adds them to the given list in the given order.\n \n',non-directive
' Returns a boolean indicating whether the dialog should be\n considered resizable when the shell style is initially\n set.  \n \n',non-directive
' Escapes any occurrence of \'&\' in the given String so that\n it is not considered as a mnemonic\n character in SWT ToolItems, MenuItems, Button and Labels.\n @param in the original String\n @return The converted String\n',non-directive
?,non-directive
'<li>\n<tt>FontFieldEditor</tt> - fonts</li>\n\n',non-directive
' Creates an empty font registry.\n \n',non-directive
' Find the first valid fontData in the provided list. If none are valid\n return the first one regardless. If the list is empty return null. Return\n <code>null</code> if one cannot be found.\n \n @param fonts the font list\n @param display the display used \n @return the font data of the like describe above\n \n @deprecated use bestDataArray in order to support Motif multiple entry\n             fonts.\n',non-directive
'@since 1.2\n',non-directive
'</p>\n \n ',non-directive
' Returns the last status.\n \n @return IStatus\n',non-directive
?,non-directive
' Creates a new font field editor \n',non-directive
'@see IProgressMonitor#internalWorked(double)\n',non-directive
'<li>font-style</li>\n ',non-directive
' Undoes everything that was done by a call to {',non-directive
?,non-directive
' Returns the client area for the given composite according to this\n layout.\n \n @param c\n            the composite\n @return the client area rectangle\n',non-directive
?,non-directive
?,non-directive
'@link UnsupportedOperationException} for\n the {',non-directive
'\n<p>\nThis package contains implementations of the\n{',non-directive
'<li>\n<tt>ColorFieldEditor</tt> - RGB colors</li>\n\n',non-directive
?,non-directive
' Returns the color descriptor associated with the given symbolic color\n name. If this name does not exist within the registry the supplied\n default value will be used.\n \n @param symbolicName\n @param defaultValue\n @return the color descriptor associated with the given symbolic color\n         name or the default\n @since 3.4\n',non-directive
' Returns the image used to present this node in a preference dialog.\n\n ',non-directive
'@param index the illegal index.\n',non-directive
'The following three\nsteps set up a custom mapping:\n<ol>\n  ',non-directive
'@param monitor the progress monitor to use to display progress and receive\n   requests for cancelation\n ',non-directive
'@return <code>true</code> if the default value is presented,\n   and <code>false</code> otherwise\n',non-directive
'@param b the new valid state\n',non-directive
' EnumerationUtils is not normally instantiated.\n',non-directive
'@see org.eclipse.swt.widgets.Display#getCurrent()\n',non-directive
'Also, the\n<code>PreparedStatement.setObject</code> method will automatically map the\nobject back to its SQL type to store it in the data source.\n\n',non-directive
'<li>BoundedFifoBuffer - implements a buffer with a fixed size that throws exceptions when full\n',non-directive
'<LI> The JDBC 3.0 API\n ',non-directive
?,non-directive
' Returns a list of string values corresponding to the given list of keys.\n ',non-directive
' Removes the preference node at the given path.\n \n @param path\n            the path\n @return the node that was removed, or <code>null</code> if there was no\n         node at the given path\n',non-directive
' Stores the styled ranges in the given table item.\n\n @param item table item\n @param column the column index\n @param ranges the styled ranges or <code>null</code> to remove them\n',non-directive
'@since 3.1 \n\n ',non-directive
'@see #setWizard\n',non-directive
'document\n',non-directive
'@param value  the new value\n ',non-directive
'@see org.eclipse.swt.widgets.Scale#setIncrement(int)\n',non-directive
' Creates this wizard\'s controls in the given parent control.\n ',non-directive
?,non-directive
'Here are brief\ndescriptions of the main components. ',non-directive
?,non-directive
'<p>Actions (<tt>IAction</tt>) are commands which can be triggered from\nthe UI, like the ones found in menus, toolbars, and buttons. ',non-directive
'@throws IllegalArgumentException if either closure is null\n',non-directive
?,non-directive
' <p>\n Initial values are:\n </p>\n \n <ul>\n ',non-directive
'@param device the Device on which to allocate the resource\n ',non-directive
' Sets the indent of the control within the cell. ',non-directive
'@throws IllegalArgumentException if the arrays are different sizes\n',non-directive
'@link\njava.util.WeakHashMap}</code> class works.  ',non-directive
'@see #margins(int, int)\n',non-directive
'<li>Availability to be notfied when a <code>PreparedStatement</code> that is associated\n with a <code>PooledConnection</code> has been closed or the driver determines is invalid\n \n \n</UL>\n',non-directive
?,non-directive
?,non-directive
' Applies the dialog font to all controls that currently have the default\n font.\n \n @param control\n            the control to apply the font to. Font will also be applied to\n            its children. If the control is <code>null</code> nothing\n            happens.\n',non-directive
'\nService provider classes for the classes in the java.util package.\n',non-directive
'<li> Finally, an object is <em>unreachable</em>, and therefore eligible for\nreclamation, when it is not reachable in any of the above ways.\n\n',non-directive
'@since 2.0\n',non-directive
?,non-directive
?,non-directive
?,non-directive
' Workaround for https://bugs.eclipse.org/bugs/show_bug.cgi?id=23980 : Shells without borders are\n not resizable on GTK.\n \n @since 3.6\n',non-directive
' Sets the minimum page size.\n \n @param size\n            the page size encoded as <code>new Point(width,height)</code>\n @see #setMinimumPageSize(int,int)\n',non-directive
'@param w\n            the control\n ',non-directive
'@return the text regions corresponding to <code>selection</code>\n ',non-directive
'@link Iterator}s.\n ',non-directive
'@since 3.1\n',non-directive
?,non-directive
'@see IPreferencePage#isValid()\n',non-directive
?,non-directive
' Returns a selection similar to <code>selection</code> but {',non-directive
'@param value\n            the value to be associated with the <code>key</code>\n',non-directive
' The label control for the subtask.\n',non-directive
' Returns a selection similar to <code>selection</code> but {@linkplain #isEmpty(ISelection)\n empty}. Typically, the selection is reduced to its extreme offsets.\n \n @param selection the selection\n @param beginning <code>true</code> to collapse the selection to its smallest position (i.e.\n            its left-most offset), <code>false</code> to collapse it to its greatest position\n            (e.g its right-most offset)\n @return an empty variant of <code>selection</code>\n @throws BadLocationException if accessing the document failed\n',non-directive
' Get the button control being wrappered by the selector.\n \n @return <code>Button</code>\n',non-directive
'@param listener\n            a page changed listener\n',non-directive
' Undoes everything that was done by a previous call to create(...), given\n the object that was returned by create(...).\n \n',non-directive
' Button id for a \"No to All\" button (value 21).\n',non-directive
'<p>\n<h2>Package Specification</h2>\n\n\n<a name=\"charenc\"></a>\n<h3>Character Encodings</h3>\n\nThe specification of the {',non-directive
' Set the value to be used for Scale.setMaximum(int) and update the\n scale.\n \n @param max\n            a value greater than 0.\n @see org.eclipse.swt.widgets.Scale#setMaximum(int)\n',non-directive
' Returns the current value of the long-valued preference with the\n given name.\n ',non-directive
'@param listener the proposal listener\n',non-directive
?,non-directive
'@link #end()} is at <code>end</code>, keeping\n {',non-directive
'-->\n\n',non-directive
?,non-directive
'@param persistSize\n            A boolean indicating whether the size should be persisted upon\n            close of the dialog. ',non-directive
?,non-directive
'@param value the value to be converted\n ',non-directive
' Constant for a simple dialog with the question image and OK/Cancel buttons (value 5).\n \n',non-directive
'@return <code>true</code> if the receiver can provide a hover\n',non-directive
'<li>spacing(5,5)</li>\n ',non-directive
?,non-directive
'</p>\n',non-directive
' The Finish button has been pressed.\n',non-directive
?,non-directive
' Convenience method to open a standard information dialog.\n \n @param parent\n            the parent shell of the dialog, or <code>null</code> if none\n @param title\n            the dialog\'s title, or <code>null</code> if none\n @param message\n            the message\n',non-directive
'@throws IllegalArgumentException if any element in the arrays is null\n ',non-directive
'<p>\n\n<h2>What the <code>java.sql</code> Package Contains</h2>\nThe <code>java.sql</code> package contains API for the following:\n<UL>\n  ',non-directive
' Returns whether a wizard has been created for this node.\n\n @return <code>true</code> if a wizard has been created,\n   and <code>false</code> otherwise\n',non-directive
'@param parent the parent control\n',non-directive
'<LI>Properties defined for <code>ConnectionPoolDataSource</code> -- specify\n      how connections are to be pooled\n  ',non-directive
?,non-directive
' The <code>WizardPage</code> implementation of this method \n declared on <code>DialogPage</code> updates the container\n if this is the current page.\n',non-directive
'@param column the column that will delegate{',non-directive
'@link java.lang.management.CompilationMXBean}</tt> </td>\n<td> Compilation system of the Java virtual machine.</td>\n</tr>\n<tr>\n<td> <tt>{',non-directive
?,non-directive
'@param infoText\n            Text to be shown in a lower info area, or <code>null</code>\n            if there is no info area.\n \n',non-directive
'@return the <code>chained</code> closure\n ',non-directive
'</p>\n \n ',non-directive
' Creates a new wizard page with the given name, and\n with no title or image.\n\n @param pageName the name of the page\n',non-directive
' Notifies that the selected page has changed.\n \n @param event\n            event object describing the change\n',non-directive
' Clears the normal message from the message line.\n',non-directive
' The string representation used for <code>true</code> (<code>\"true\"</code>).\n',non-directive
'@param labelText the label text of the field editor\n ',non-directive
'<li>Support added for accessing a SQL ROWID\n ',non-directive
'<li>font-weight</li>\n ',non-directive
?,non-directive
' Pre-order traversal means visit the root first,\n then the children.\n',non-directive
' Set the IDialogBlockedHandler to be used by WizardDialogs and\n ModalContexts.\n \n @param blockedHandler\n            The blockedHandler for the dialogs.\n',non-directive
'@see org.eclipse.swt.widgets.Scale#setMinimum(int)\n',non-directive
'<p>\n The Integer is obtained from the results of {',non-directive
?,non-directive
' Returns the line coverage of the adjusted ranges, an empty range if the coverage is empty.\n\n ',non-directive
?,non-directive
'Class {',non-directive
' The difference in lines compared to the corresponding line range in the original. ',non-directive
'@return the preview control\n',non-directive
' Creates a content assist subject control adapter for the given combo.\n\n @param combo the combo to adapt\n',non-directive
'@link #transformedSortedMap(SortedMap, Transformer, Transformer)}\n  ',non-directive
?,non-directive
?,non-directive
?,non-directive
'@return the change button\n',non-directive
' Returns the shared image descriptor for a missing image.\n\n ',non-directive
' Implements <code>IProgressMonitor.isCanceled</code>.\n ',non-directive
'</p>\n \n ',non-directive
'<p>\n A null closure or zero count returns the <code>NOPClosure</code>.\n\n ',non-directive
' Adds (or replaces) a color to this color registry under the given \n symbolic name.\n ',non-directive
'<p>\n The result of this method is typically used by the container to\n show or hide the Help button.\n ',non-directive
'@param verifyKeyListener the listener to be removed\n',non-directive
?,non-directive
'@param length the length of the selection based on the subject\'s model e.g. ',non-directive
' <code>ClosureUtils</code> provides reference implementations and utilities\n for the Closure functor interface. ',non-directive
'the cancel component ',non-directive
?,non-directive
' Initialize the progress bar to be animated.\n',non-directive
'@param styles CSS style definitions\n ',non-directive
' Removes all contribution nodes known to this manager.\n',non-directive
' IteratorUtils is not normally instantiated.\n',non-directive
'<dd>\n                        A list of paths to be searched by the bootstrap class\n                        loader. ',non-directive
'@see #getDialogBoundsStrategy()\n',non-directive
'@param name the name of the preference\n ',non-directive
' Contains various layout constants\n \n @since 3.2\n',non-directive
'<p>\nThe applet context is an application that is responsible for loading and running\napplets. ',non-directive
' The label for yes buttons.\n',non-directive
'@since Commons Collections 3.2\n',non-directive
' Gets a Byte from a Map in a null-safe manner.\n <p>\n The Byte is obtained from the results of {@link #getNumber(Map,Object)}.\n\n @param map  the map to use\n @param key  the key to look up\n @return the value in the Map as a Byte, <code>null</code> if null map input\n',non-directive
?,non-directive
?,non-directive
'<p>\nThe following implementations are provided in the package:\n<ul>\n',non-directive
'@since 3.0\n ',non-directive
' Converts the given value into an int.\n ',non-directive
'Reference\nqueues are implemented by the <code>{',non-directive
' Updates the label with the current task and subtask names.\n',non-directive
'@return the value control\n',non-directive
'@param informationPresenterControlCreator the information presenter control creator\n ',non-directive
' Disposes all currently allocated resources.\n',non-directive
'<LI><code>SQLInput</code> interface -- provides methods for reading\n              UDT attributes from a stream\n\t ',non-directive
'@param pageId\n            The identifier for the page\n ',non-directive
'@since 3.1\n',non-directive
'@return this\n',non-directive
'@return <code>Button</code>\n',non-directive
'@param key  the key to look up\n ',non-directive
' The BufferOverflowException is used when the buffer\'s capacity has been\n exceeded.\n\n @since Commons Collections 2.1\n @version $Revision: 956279 $ $Date: 2010-06-19 21:47:48 +0200 (Sat, 19 Jun 2010) $\n\n @author Avalon\n @author <a href=\"mailto:bloritsch@apache.org\">Berin Loritsch</a>\n @author <a href=\"mailto:jefft@apache.org\">Jeff Turner</a>\n @author Paul Jack\n @author Stephen Colebourne\n',non-directive
'<LI><code>RowId</code> interface -- mapping for SQL <code>ROWID</code>\n\t ',non-directive
?,non-directive
' Creates a path field editor.\n \n @param name the name of the preference this field editor works on\n @param labelText the label text of the field editor\n @param dirChooserLabelText the label text displayed for the directory chooser\n @param parent the parent of the field editor\'s control\n',non-directive
'@since 2.0\n',non-directive
'@param value the new default value of the preference\n',non-directive
'@return the code of the button that was pressed that resulted in this\n         dialog closing. ',non-directive
'<p>\n A <code>Transformer</code> converts the input object to the output object.\n ',non-directive
'<li>MultiKeyMap - map that provides special methods for using more than one key to access the value\n',non-directive
' Converts the given value into a long.\n Returns the given default value if the \n value does not represent a long.\n\n @param value the value to be converted\n @param dflt the default value\n @return the value as a long, or the default value\n',non-directive
'@param horizontal true if the control\'s column should grow horizontally\n ',non-directive
'@param descriptor description of the font to destroy\n',non-directive
'@return this\n ',non-directive
?,non-directive
?,non-directive
?,non-directive
' Sets the margins for layouts created with this factory. ',non-directive
' Style constant (value <code>0</code>) indicating the default layout where\n the field editor\'s check box appears to the left of the label.\n',non-directive
' Creates new layout object.\n \n @param mw\n            the margin width\n @param mh\n            the margin height\n @param minW\n            the minimum width\n @param minH\n            the minimum height\n',non-directive
'@return a combination iterator over the iterators\n ',non-directive
'@since 3.1\n',non-directive
'Convert the value of the given key in this dialog\n settings to a long and return it.\n \n',non-directive
' Handle the shell close. Set the return code to <code>SWT.DEFAULT</code>\n as there has been no explicit close by the user.\n \n @see org.eclipse.jface.window.Window#handleShellCloseEvent()\n',non-directive
' Gets a float from a Map in a null-safe manner,\n using the default value if the the conversion fails.\n ',non-directive
'<LI>Pooled connections -- allowing connections to be used and reused\n  ',non-directive
' Returns <code>true</code> if the receiver can provide a hover for a certain document line.\n\n ',non-directive
' Removes an image from this registry.  \n ',non-directive
'@param map  the map to decorate\n ',non-directive
' Reads the supplied string and returns its corresponding\n FontData. If it cannot be read then the default FontData\n will be returned.\n \n @param fontDataValue the string value for the font data  \n @return the font data\n',non-directive
' Creates a new FontDescriptor given an OS-specific font name, height, and style.\n \n @see Font#Font(org.eclipse.swt.graphics.Device, java.lang.String, int, int)\n\n @param name os-specific font name\n @param height height (pixels)\n @param style a bitwise combination of NORMAL, BOLD, ITALIC \n @return a new FontDescriptor\n',non-directive
'User template management can be\noffered by including a <tt>TemplatePreferencePage</tt> which uses a <tt>TemplateStore</tt> and <tt>ContextTypeRegistry</tt> as the\nunderlying model to store templates. ',non-directive
'@param store the preference store\n ',non-directive
'@param message\n            the message\n ',non-directive
?,non-directive
' Gets a short from a Map in a null-safe manner,\n using the default value if the the conversion fails.\n ',non-directive
'@since 3.0\n ',non-directive
'@since 3.2\n',non-directive
' Returns whether the current value of the preference with the given name\n has the default value.\n\n ',non-directive
' The string representation used for <code>true</code> (<code>\"true\"</code>).\n',non-directive
'This is the class loader that typically loads \nthe class containing the application <code>main</code> method. ',non-directive
' The popup priority: &gt; info pop-ups, &lt; standard content assist.\n Default value: <code>10</code>.\n\n @since 3.0\n',non-directive
' Return the currently displayed color.\n \n @return <code>RGB</code>\n',non-directive
' The label for stop buttons.\n',non-directive
?,non-directive
'@param parentShell\n            the parent shell\n ',non-directive
' Notifies that help has been requested for this dialog page.\n',non-directive
' Creates a new field editor.\n \n @param name the name of the preference this field editor works on\n @param labelText the label text of the field editor\n @param parent the parent of the field editor\'s control\n',non-directive
'@throws NullPointerException if the map, collection or transformer are null\n',non-directive
'@param monitor\n            the progress monitor\n ',non-directive
' Closes this dialog\'s tray, disposing its widgets.\n \n @throws IllegalStateException if the tray was not open\n',non-directive
'@return <code>true</code> if the node was removed,\n  and <code>false</code> otherwise\n',non-directive
' Sets the context information popup\'s foreground color.\n\n ',non-directive
'<li>paint revision information in the vertical ruler</li>\n  ',non-directive
' Returns the HTML from {',non-directive
' @return the <code>TreeViewer</code> for this dialog.\n @since 3.3\n',non-directive
' Creates a boolean field editor in the given style.\n \n',non-directive
'<p>\n The long is obtained from the results of {',non-directive
?,non-directive
'@see GridLayoutFactory#generateLayout(org.eclipse.swt.widgets.Composite)\n ',non-directive
'</p> \n ',non-directive
'@param message\n            the message\n',non-directive
'@since 3.5\n',non-directive
' Updates the message (or error message) shown in the message line to \n reflect the state of the currently active page in this container.\n ',non-directive
' Moves the progress indicator by the given amount of work units\n @param work the amount of work to increment by.\n',non-directive
?,non-directive
'@link Iterator#next()} method will return the lesser of\n <code>A.next()</code> and <code>B.next()</code>.\n ',non-directive
' Returns the wizard\'s shell if the wizard is visible. ',non-directive
'<li><a href=\"\">##### REFER TO ANY FRAMEMAKER SPECIFICATION HERE #####</a>\n</ul>\n\n',non-directive
' Interface for a wizard page.\n <p>\n The class <code>WizardPage</code> provides an abstract implementation\n of this interface. However, clients are also free to implement this \n interface if <code>WizardPage</code> does not suit their needs.\n </p>\n',non-directive
'This implementation is used by the linked mode UI. ',non-directive
' Returns the JFace\'s header font. Convenience method equivalent to\n \n <pre>\n JFaceResources.getFontRegistry().get(JFaceResources.HEADER_FONT)\n </pre>\n \n @return the font\n',non-directive
?,non-directive
' Returns whether an empty string is a valid value.\n\n ',non-directive
' Initializes all field editors.\n',non-directive
?,non-directive
?,non-directive
?,non-directive
' Create the page control for the supplied page.\n \n',non-directive
' Sets the title to be shown in the title area of this dialog.\n \n',non-directive
'\n The margin height used by layout styles <code>FLAT</code> \n and <code>GRID</code>.\n',non-directive
'@throws UnsupportedOperationException if setValue is not supported by the map\n ',non-directive
?,non-directive
' Interface for a wizard.  A wizard maintains a list of wizard pages,\n stacked on top of each other in card layout fashion.\n <p>\n The class <code>Wizard</code> provides an abstract implementation\n of this interface. However, clients are also free to implement this \n interface if <code>Wizard</code> does not suit their needs.\n </p>\n @see Wizard\n',non-directive
'</p>\n\n ',non-directive
?,non-directive
' Returns this field editor\'s button box containing the Add, Remove,\n Up, and Down button.\n\n ',non-directive
' Sets the current value of the preference with the given name to\n the given string value without sending a property change.\n ',non-directive
'@since 3.0\n',non-directive
' Creates a new GridDataFactory initialized with the SWT defaults.\n This factory will generate GridData that is equivalent to \n \"new GridData()\".\n \n <p>\n Initial values are:\n </p>\n \n <ul>\n <li>align(SWT.BEGINNING, SWT.CENTER)</li>\n <li>exclude(false)</li>\n <li>grab(false, false)</li>\n <li>hint(SWT.DEFAULT, SWT.DEFAULT)</li>\n <li>indent(0,0)</li>\n <li>minSize(0,0)</li>\n <li>span(1,1)</li>\n </ul>\n \n @return a new GridDataFactory instance\n @see #fillDefaults()\n',non-directive
'<h2>Related Documentation</h2>\n\nFor documentation that includes information about algorithm parameter\nand key specifications, please see:\n<ul>\n  ',non-directive
' A change region describes a contiguous range of lines that was changed in the same revision of a\n document. ',non-directive
' Possible values are:\n <ul>\n ',non-directive
' Creates a scale field editor.\n \n @param name\n            the name of the preference this field editor works on\n @param labelText\n            the label text of the field editor\n @param parent\n            the parent of the field editor\'s control\n',non-directive
' Creates a string field editor.\n Use the method <code>setTextLimit</code> to limit the text.\n \n @param name the name of the preference this field editor works on\n @param labelText the label text of the field editor\n @param width the width of the text input field in characters,\n  or <code>UNLIMITED</code> for no limit\n @param parent the parent of the field editor\'s control\n',non-directive
'@since 3.4\n',non-directive
'@since 3.1 \n\n ',non-directive
?,non-directive
' Creates a copy of the reciever.\n \n @return a copy of the reciever\n',non-directive
'@return <code>true</code> if a revision model has been set, <code>false</code> otherwise\n',non-directive
'@link #getHover()}.\n\n ',non-directive
'@link IStatus} that is being displayed.\n ',non-directive
?,non-directive
' Removes the given listener from this registry. ',non-directive
'@param map  the map to use\n ',non-directive
'<li>when the user clicks the revision ruler with the mouse</li>\n ',non-directive
' Clear blocked state from the receiver.\n',non-directive
?,non-directive
'@param toQuery\n            display to query\n ',non-directive
' Gets a short from a Map in a null-safe manner,\n using the default value if the the conversion fails.\n <p>\n The short is obtained from the results of {@link #getNumber(Map,Object)}.\n\n @param map  the map to use\n @param key  the key to look up\n @param defaultValue  return if the value is null or if the\n     conversion fails\n @return the value in the Map as a short, <code>defaultValue</code> if null map input\n',non-directive
'@param store the preference store\n ',non-directive
' Identifier for the color used to show extra informations in labels, as a\n qualified name. For example in \'Foo.txt - myproject/bar\', the qualifier\n is \'- myproject/bar\'.\n \n @since 3.4\n',non-directive
' Sets the preference store used by this field editor.\n\n @param store the preference store, or <code>null</code> if none\n @see #getPreferenceStore\n',non-directive
' The BooleanPropertyAction is an action that set the values of a \n boolean property in the preference store.\n',non-directive
' Hides the proposal popup.\n',non-directive
' Converts the given value into an SWT font data object.\n Returns the given default value if the \n value does not represent a font data object.\n\n @param value the value to be converted\n @param dflt the default value\n @return the value as a font data object, or the default value\n',non-directive
?,non-directive
'</p>\n<p>\nThe following implementations are provided in the package:\n<ul>\n',non-directive
?,non-directive
'\n\nProvides services that allow Java programming language agents to instrument programs running on the JVM. \n',non-directive
' Provides utility methods and decorators for\n {',non-directive
?,non-directive
' Sets the current value of the boolean-valued preference with the\n given name.\n ',non-directive
?,non-directive
'@see #open(int, Shell, String, String, int)\n',non-directive
'@param id the subnode id\n ',non-directive
' Notifies of the pressing of the Help button.\n ',non-directive
?,non-directive
'@param symbolicName symbolic color name.\n ',non-directive
'@param header\n            the header\n ',non-directive
'@param verifyKeyListener the listener to be inserted\n ',non-directive
'<li><a href=\"\">##### REFER TO NON-SPEC DOCUMENTATION HERE #####</a>\n</ul>\n',non-directive
'@param key  the key to look up\n ',non-directive
' Creates a message dialog with a toggle. ',non-directive
'@return newly created image descriptor\n',non-directive
' Returns the control of this content assist subject control.\n\n ',non-directive
'@see JFacePreferences#ACTIVE_HYPERLINK_COLOR\n',non-directive
' Returns the global resource manager for the given display\n \n @since 3.1\n \n @param toQuery\n            display to query\n @return the global resource manager for the given display\n',non-directive
?,non-directive
' Wrap specifies whether a control will be wrapped to the next row if there\n is insufficient space on the current row.\n \n',non-directive
?,non-directive
'The value of this attribute is the name of the <i>agent class</i>. ',non-directive
' Create the combo box field editor.\n \n',non-directive
'@return a list of the iterator contents\n ',non-directive
'@return a new ColorDescriptor\n',non-directive
?,non-directive
'<h2>Package Specification</h2>\n\n</a>\n<ul>\n  ',non-directive
?,non-directive
'@param value the new current value of the preference\n \n ',non-directive
?,non-directive
?,non-directive
' The returned ColorDescriptor depends on the original Color. ',non-directive
'Internally, contribution lists\ncan be organized into named groups via special group markers (<tt>GroupMarker</tt>)\nto facilitate programatic insertion at specific positions within the list.\n',non-directive
'<h2>Related Documentation</h2>\n\nFor tool documentation, please see:\n<ul>\n  ',non-directive
?,non-directive
' Shell style appropriate for a resizable info popup that can get focus.\n',non-directive
' A field editor for a color type preference.\n',non-directive
'@return the value as a rectangle\n ',non-directive
'@param name the name of the preference\n ',non-directive
' Returns the default dialog margins, in pixels\n \n @return the default dialog margins, in pixels\n',non-directive
' Display the given error message. ',non-directive
'</p>\n\n ',non-directive
'@param mode the enrich mode\n ',non-directive
'A remote\nobject\'s reference can be made ``persistent\'\' and later activated into a\n``live\'\' object using the RMI activation mechanism.\n\n',non-directive
' Returns this field editor\'s current value.\n \n @return the value\n',non-directive
' Returns the current value of the color-valued preference with the\n given name in the given preference store.\n Returns the default-default value (<code>COLOR_DEFAULT_DEFAULT</code>) \n if there is no preference with the given name, or if the current value \n cannot be treated as a color.\n\n @param store the preference store\n @param name the name of the preference\n @return the color-valued preference\n',non-directive
'@param treeViewer\n \n ',non-directive
?,non-directive
'@return a list of pages\n',non-directive
?,non-directive
' Implements <code>IProgressMonitor.worked</code>.\n @see IProgressMonitor#worked(int)\n',non-directive
'@throws IOException if an I/O error occurs\n',non-directive
' <p>\n This dialog should be considered being a \"local\" way of error handling. ',non-directive
'@see #getDialogSettings\n  \n',non-directive
'@param eventConsumer the content assist subject control\'s event consumer. ',non-directive
' Convenience API. Converts the boolean <code>value</code> to a string\n and adds the pair <code>key/value</code> to this dialog settings.\n \n @param key\n            the key.\n @param value\n            the value to be associated with the <code>key</code>\n',non-directive
'@link #getNumber(Map,Object)}.\n\n ',non-directive
' Button id for a \"Select types\" button (value 20).\n',non-directive
'@param filename the file name\n ',non-directive
'@param indent offset to move the control\n ',non-directive
?,non-directive
?,non-directive
'@since 3.3\n',non-directive
?,non-directive
?,non-directive
'@param replacement the replacement text\n ',non-directive
' Sets the minimum size for the control. ',non-directive
'An attribute in the JAR file manifest specifies the\nagent class which will be loaded to start the agent. ',non-directive
' Returns a text edit describing the text modification that would be executed if the backspace\n key was pressed on the given selection.\n \n',non-directive
' Adds a listener for input changes to this input change provider.\n Has no effect if an identical listener is already registered.\n\n @param inputChangeListener the listener to add\n @since 3.4\n',non-directive
' A hunk describes a contiguous range of changed, added or deleted lines. ',non-directive
' Returns the error message label.\n \n',non-directive
?,non-directive
' Identifier for the color used to show extra informations in labels, as a\n qualified name. ',non-directive
'@param event\n            event object describing the change\n',non-directive
?,non-directive
'@see Dialog#createDialogArea(Composite)\n',non-directive
' Returns the modal nesting level.\n ',non-directive
'<LI> The JDBC 2.1 core API\n ',non-directive
'A {',non-directive
' Gets a Map from a Map in a null-safe manner.\n <p>\n If the value returned from the specified map is not a Map then\n <code>null</code> is returned.\n\n @param map  the map to use\n @param key  the key to look up\n @return the value in the Map as a Map, <code>null</code> if null map input\n',non-directive
'@param parent the parent of the field editor\'s control\n',non-directive
'@return the value as a long\n ',non-directive
' Button id for an \"Open\" button (value 11).\n',non-directive
'<li><code>RadioGroupFieldEditor</code> - enumerations</li>\n   ',non-directive
'@param tableTree\n            the control\n ',non-directive
'@see org.eclipse.jface.window.Window#handleShellCloseEvent()\n',non-directive
?,non-directive
?,non-directive
'@param parentShell\n            the parent shell\n ',non-directive
'@return <code>true</code> if either a current value or a default\n  value is known for the named preference, and <code>false</code> otherwise\n',non-directive
?,non-directive
' Constructs a new <code>BufferOverflowException</code>.\n',non-directive
'<LI><code>ParameterMetaData</code> interface -- provides information\n              about the parameters to <code>PreparedStatement</code> commands\n  </UL>\n  ',non-directive
'@param map  the map to use\n ',non-directive
?,non-directive
'@param defaultValue  what to return if the value is null or if the\n     conversion fails\n  ',non-directive
'@return the <code>TreeViewer</code> for this dialog.\n ',non-directive
' Moves the receiver to <code>start</code>, keeping {',non-directive
'The painter will draw the\n color boxes onto the passed {',non-directive
'@param blockedHandler\n            The blockedHandler for the dialogs.\n',non-directive
' Creates a new range equal to the passed line range.\n\n @param range the range to copy\n @return a <code>Range</code> equal to <code>range</code>\n',non-directive
?,non-directive
'@return the button\n ',non-directive
'@see java.lang.Integer#valueOf(java.lang.String)\n',non-directive
?,non-directive
' Removes all contribution nodes known to this manager.\n',non-directive
' Returns the Apply button.\n \n @return the Apply button\n',non-directive
' Creates a new color field editor\n',non-directive
'@param parent The SWT parent of the part.\n ',non-directive
' Gets an int from a Map in a null-safe manner,\n using the default value if the the conversion fails.\n ',non-directive
'@param takeFocus <code>true</code> iff the replacing information control should take focus\n',non-directive
' Gets an empty ordered iterator.\n <p>\n This iterator is a valid iterator object that will iterate\n over nothing.\n\n @return  an ordered iterator over nothing\n',non-directive
?,non-directive
' Sets the default value for the double-valued preference with the\n given name. \n ',non-directive
' Creates a new updater for the given <code>category</code>.\n\n @param category the new category.\n',non-directive
' Gets a Closure that always throws an exception.\n ',non-directive
?,non-directive
'@param map  the map whose value to look up\n  ',non-directive
?,non-directive
' Button id for a \"Proceed\" button (value 10).\n',non-directive
?,non-directive
'@param map  the map to use\n ',non-directive
'<p>\n A field editor presents the value of a preference to the end \n user. ',non-directive
'@throws IllegalArgumentException if the map is empty\n ',non-directive
'@link org.apache.commons.collections.Put Put} and\n{',non-directive
' Sets the default value of the preference with the given name\n in the given preference store.\n\n ',non-directive
'</dd>\t\t\t\n\n<dt><code>Boot-Class-Path</code></dt>\n',non-directive
' Creates a new GridDataFactory that creates copies of the given GridData\n by default.\n \n @param data GridData to copy\n @return a new GridDataFactory that creates copies of the argument by default\n',non-directive
' Button id for a \"Details\" button (value 13).\n',non-directive
?,non-directive
' Sets or clears the message for this page.\n ',non-directive
' Opens an error dialog to display the given error. ',non-directive
' Creates a string button field editor.\n \n @param name the name of the preference this field editor works on\n @param labelText the label text of the field editor\n @param parent the parent of the field editor\'s control\n',non-directive
'-->\n\n',non-directive
' Left margin in dialog units (value 20).\n',non-directive
'@return the string representing the given boolean value\n',non-directive
'<tt>Reconciler</tt> and <tt>MonoReconciler</tt> implements reconciling\nas a periodic background activity and folds co-located changes while being\ninactive.\n',non-directive
' Returns the default value array for the font-valued preference\n with the given name in the given preference store.\n ',non-directive
' Adds (or replaces) a font to this font registry under the given\n symbolic name.\n ',non-directive
'<li>{',non-directive
' Creates a new GridDataFactory that creates copies of the given GridData\n by default.\n \n',non-directive
' The symbolic font name for the viewer font (value\n <code>\"org.eclipse.jface.viewerfont\"</code>).\n \n @deprecated This font is not in use\n',non-directive
'@author Arun Mammen Thomas\n ',non-directive
?,non-directive
' Returns the preference store of this preference page.\n\n ',non-directive
'@link #lazyMap(Map,Transformer)}\n  ',non-directive
' A mutator for the button providing the toggle option. ',non-directive
?,non-directive
' Returns the default value for the float-valued preference\n with the given name.\n Returns the default-default value (<code>0.0f</code>) if there\n is no default preference with the given name, or if the default \n value cannot be treated as a float.\n\n @param name the name of the preference\n @return the default value of the named preference\n',non-directive
?,non-directive
'@since 3.4\n',non-directive
'<h2>Timing</h2>\n\nThe {',non-directive
'<li>fill(false)</li>\n ',non-directive
'@return a new GridDataFactory instance\n ',non-directive
'<li><a href=\"\">##### REFER TO ANY FRAMEMAKER SPECIFICATION HERE #####</a>\n</ul>\n\n',non-directive
?,non-directive
' Creates a font field editor with an optional preview area.\n \n',non-directive
'<!--\n<h2>Package Specification</h2>\n\n##### FILL IN ANY SPECS NEEDED BY JAVA COMPATIBILITY KIT #####\n<ul>\n  ',non-directive
'@return the boolean-valued preference\n',non-directive
?,non-directive
'<p>\n\n',non-directive
' Sets the name of the preference this field editor operates on.\n ',non-directive
?,non-directive
' This class provides a convienient shorthand for creating and initializing\n GridData. ',non-directive
'<p>\n The Short is obtained from the results of {',non-directive
' Creates a ProgressMonitorPart.\n @param parent The SWT parent of the part.\n @param layout The SWT grid bag layout used by the part. A client\n can supply the layout to control how the progress monitor part\n is layed out. If null is passed the part uses its default layout.\n @param progressIndicatorHeight The height of the progress indicator in pixel.\n',non-directive
'</p>\n<p>\nThe following collection implementations are provided in the package:\n<ul>\n',non-directive
'the current task name ',non-directive
'@param preferencePage\n            the preference page\n',non-directive
' (non-Javadoc) Method declared on IPreferenceNode.\n',non-directive
'@link #getNumber(Map,Object)}.\n\n ',non-directive
?,non-directive
' A field editor for a directory path type preference. A standard directory\n dialog appears when the user presses the change button.\n',non-directive
?,non-directive
' Set the value to be used for Scale.setPageIncrement(int) and update the\n scale.\n \n @param pageIncrement\n            a value greater than 0.\n @see org.eclipse.swt.widgets.Scale#setPageIncrement(int)\n',non-directive
'A tactic that often works well is to examine a reference queue in\nthe course of performing some other fairly-frequent action.  ',non-directive
'An ExecutorService manages\nqueuing and scheduling of tasks, and allows controlled shutdown.  ',non-directive
'In the case\n of a specific font, the supplied font is used for the calculations.\n \n',non-directive
?,non-directive
' Sets or clears the container of this page.\n\n ',non-directive
'This is\nthe class loader which typically loads the class containing the application <code>main</code> method.\n',non-directive
?,non-directive
'<h2>Executors</h2>\n\n<b>Interfaces.</b> {',non-directive
?,non-directive
' Add the listeners to the tree viewer.\n ',non-directive
?,non-directive
' Create a ProgressIndicator as a child under the given parent.\n \n @param parent\n            The widgets parent\n',non-directive
'</p>\n \n ',non-directive
?,non-directive
'</p>\n',non-directive
' Tells whether the SWT Browser widget and hence this information\n control is available.\n\n ',non-directive
'@param value the new current value of the preference\n',non-directive
' Set the composite that is showing the page.\n @param pageContainer Composite\n \n @since 3.1\n',non-directive
'@author\t  Josh Bloch\n',non-directive
'</p>\n\n ',non-directive
' Creates a new file field editor \n',non-directive
' Thrown when allocation of an SWT device resource fails\n \n ',non-directive
'@since 3.3\n',non-directive
'@param exception  the root cause of the exception\n',non-directive
?,non-directive
'@param size\n            the page size encoded as <code>new Point(width,height)</code>\n ',non-directive
' Extends {',non-directive
'<LI>Pooled statements -- reuse of statements associated with a pooled \n       connection\n  ',non-directive
?,non-directive
'@param control the control the foreground and/or background color should be set\n \n ',non-directive
'@return the value in the Map as a String, <code>null</code> if null map input\n',non-directive
'@return a GridLayoutFactory that creates GridLayouts as though created with\n their default constructor\n ',non-directive
' Sets whether ModalContext may process events (by calling\n <code>Display.readAndDispatch()</code>) while running operations. ',non-directive
'@param path\n            the path\n ',non-directive
' Constructs an <code>LineIndexOutOfBoundsException</code> with the specified detail message.\n\n ',non-directive
'\n Construct a new <code>BufferOverflowException</code>.\n \n',non-directive
?,non-directive
' Removes the given page change listener from this page change provider.\n ',non-directive
' Returns an array of FontData containing copies of the FontData\n from the original. \n \n',non-directive
' Sets the name of the selected item preference. ',non-directive
' Creates and returns a new image descriptor from a file.\n Convenience method for\n <code>new FileImageDescriptor(location,filename)</code>.\n\n @param location the class whose resource directory contain the file\n @param filename the file name\n @return a new image descriptor\n',non-directive
' Returns the descriptor for JFace\'s standard font. ',non-directive
'@param value the new default value of the preference\n',non-directive
'@return the string representing the given long value\n',non-directive
' Returns the default value for the string-valued preference\n with the given name.\n ',non-directive
' Converts the given long value to a string.\n Equivalent to <code>String.valueOf(value)</code>.\n\n @param value the long value\n @return the string representing the given long\n',non-directive
'The framework contains\nan abstract base class for preference dialogs (<tt>PreferenceDialog</tt>),\nand an abstract preference page class (<tt>FieldEditorPreferencePage</tt>)\nfor hosting these field editors.\n',non-directive
?,non-directive
'This two-tiered approach to saving and restoring preference setting\n minimized the number of preferences that need to be persisted; indeed,\n the normal starting state does not require storing any preferences\n at all.\n ',non-directive
' Changes the rendering mode and triggers redrawing if needed.\n\n ',non-directive
'@param selection the selection to replace\n ',non-directive
'Returns the given default value if the \n value does not represent an int.\n\n ',non-directive
?,non-directive
?,non-directive
?,non-directive
'<p>\n\n ',non-directive
'<li><a href=\"\">##### REFER TO NON-SPEC DOCUMENTATION HERE #####</a>\n</ul>\n',non-directive
' Returns the preference page for this node.\n\n @return the preference page\n',non-directive
' Extension interface for {@link org.eclipse.jface.text.contentassist.IContentAssistProcessor}\n which provides the context for the\n {@linkplain org.eclipse.jface.contentassist.ISubjectControlContentAssistant subject control content assistant}.\n\n @since 3.0\n @deprecated As of 3.2, replaced by Platform UI\'s field assist support\n',non-directive
' Creates a factory that creates copies of the given layout.\n \n @param l layout to copy\n @return a new GridLayoutFactory instance that creates copies of the given layout\n',non-directive
'@link #fixedSizeSortedMap(SortedMap)}\n  ',non-directive
'<li>minSize(0,0)</li>\n ',non-directive
?,non-directive
'@return the name of the preference\n',non-directive
' Converts the given SWT point object to a string.\n ',non-directive
' Returns the current value of the boolean-valued preference with the\n given name.\n ',non-directive
'@link Layout} used to maintain {',non-directive
?,non-directive
?,non-directive
'  Looks up the given key in the given map, converting the result into\n  an integer, using the default value if the the conversion fails.\n\n  ',non-directive
'A wizard maintains a list of wizard pages,\n stacked on top of each other in card layout fashion.\n ',non-directive
?,non-directive
'<h2>\nPackage Specification</h2>\n<tt>ISubjectControlContentAssistant</tt> defines the concept of the content assist add-on.\n',non-directive
'<p>\nThe following implementations are provided:\n<ul>\n',non-directive
' Creates a copy of the receiver.\n \n',non-directive
'<!--\n<h2>Package Specification</h2>\n<h2>Related Documentation</h2>\n-->\n\n',non-directive
'@return an immutable version of the iterator\n',non-directive
'@param toCreate Color to convert into a ColorDescriptor.\n ',non-directive
'@link org.apache.commons.collections.IteratorUtils IteratorUtils},\nwhich is a single class that uses static methods to construct instances\nof the classes in this package.\n',non-directive
?,non-directive
'@param parent\n            the SWT parent for the title area composite.\n ',non-directive
' Creates a new FontDescriptor given the an array of FontData that describes \n the font.\n \n',non-directive
?,non-directive
'<LI>National Character Set support added\n ',non-directive
?,non-directive
' Returns the preference page in which this field editor\n appears.\n\n @return the preference page, or <code>null</code> if none\n @deprecated use #getPage()\n',non-directive
'The supplied closures are:\n <ul>\n ',non-directive
' Returns the wizard this dialog is currently displaying.\n \n @return the current wizard\n',non-directive
' Sets the message for this page with an indication of what type of message\n it is.\n ',non-directive
' Sets the default value of the preference with the given name\n in the given preference store.\n\n @param store the preference store\n @param name the name of the preference\n @param value the new default value of the preference\n',non-directive
'@param <K> the type of the keys in the map\n ',non-directive
?,non-directive
' Creates a new wizard page with the given name, title, and image.\n\n ',non-directive
'<li>Unmodifiable - ensures the collection cannot be altered\n',non-directive
' Creates the resource described by this descriptor\n \n @since 3.1 \n\n @param device the Device on which to allocate the resource\n @return the newly allocated resource (not null)\n @throws DeviceResourceException if unable to allocate the resource\n',non-directive
'@since 1.5\n\n',non-directive
'@param out\n            the output stream\n ',non-directive
'@param name the name of the preference\n ',non-directive
' Creates a new event for the given source, selected (current) page and\n direction.\n \n',non-directive
'@return the symbolic font name\n',non-directive
' Creates a reader that breaks an input text to fit in a given width.\n\n @param reader Reader of the input text\n @param gc The graphic context that defines the currently used font sizes\n @param maxLineWidth The max width (pixels) where the text has to fit in\n',non-directive
'@linkplain #isEmpty(ISelection)\n empty}. ',non-directive
'@link Control}.\n     ',non-directive
'@link ILineDiffer}.\n\n ',non-directive
'@link org.eclipse.swt.widgets.Text} to an {',non-directive
'@param store\n            the preference store\n ',non-directive
' Return whether or not the dialog font is currently the same as the\n default font.\n \n @return boolean if the two are the same\n',non-directive
'@param page the page\n ',non-directive
'@since JDK1.0\n',non-directive
'@see org.apache.commons.collections.functors.ExceptionClosure\n \n ',non-directive
'@param key  the key to look up\n ',non-directive
'@return a new transforming iterator\n ',non-directive
'@param parent the parent of the field editor\'s control\n',non-directive
'@since Commons Collections 5\n @TODO fix version\n',non-directive
'<p>\n This method will handle primitive arrays as well as object arrays.\n ',non-directive
' Return the preference store for the receiver.\n \n @return IPreferenceStore or null\n',non-directive
'@param reader\n            a Reader specifying the stream where the settings are read\n            from.\n ',non-directive
'@author <a href=\"mailto:ggregory@seagullsw.com\">Gary Gregory</a>\n',non-directive
'\n The margin height used by layout styles <code>FLAT</code> \n and <code>GRID</code>.\n',non-directive
?,non-directive
?,non-directive
?,non-directive
'@param value The font data.\n ',non-directive
'\n<p>\nThis package contains implementations of the\n{',non-directive
?,non-directive
'@see IProgressMonitor#setCanceled(boolean)\n',non-directive
'A {',non-directive
' Updates this dialog\'s controls to reflect the current page.\n',non-directive
'@see #setEmptyStringAllowed\n',non-directive
' Sets the context information popup\'s orientation.\n ',non-directive
'the current sub task name ',non-directive
?,non-directive
' Sets the default value of the preference with the given name\n in the given preference store.\n\n @param store the preference store\n @param name the name of the preference\n @param value the new default value of the preference\n',non-directive
?,non-directive
'A client\n can supply the layout to control how the progress monitor part\n is layed out. ',non-directive
'Otherwise, <code>false</code> is returned.\n\n ',non-directive
' An abstract implementation of a wizard page that manages a\n set of embedded wizards.\n ',non-directive
'@since 3.2\n',non-directive
'@see Display#getSystemColor(int)\n',non-directive
' Horizontal spacing in dialog units (value 4).\n',non-directive
' Disposes the SWT resources allocated by this\n dialog page.\n',non-directive
' Creates a new integer field editor \n',non-directive
' Constructs an <code>LineIndexOutOfBoundsException</code> with the specified detail message.\n\n @param s the detail message.\n',non-directive
' Creates a new information control replacer.\n\n @param creator the default information control creator\n',non-directive
?,non-directive
'@param maxLineWidth The max width (pixels) where the text has to fit in\n',non-directive
' Gets an enumeration that wraps an iterator.\n\n ',non-directive
' Return the cancel button if the id is a the cancel id.\n \n',non-directive
' Creates a new registry for the given device.\n \n',non-directive
' Creates a string field editor of unlimited width.\n ',non-directive
'@see #getPreferenceStore\n',non-directive
'@see org.eclipse.jface.window.Window#getInitialLocation(org.eclipse.swt.graphics.Point)\n',non-directive
?,non-directive
' Sets whether this page is complete. \n <p>\n This information is typically used by the wizard to decide\n when it is okay to move on to the next page or finish up.\n </p>\n\n @param complete <code>true</code> if this page is complete, and\n   and <code>false</code> otherwise\n @see #isPageComplete()\n',non-directive
' Generates layout data to the given control, given the number of cells\n spanned by the control. ',non-directive
' The BufferOverflowException is used when the buffer\'s capacity has been\n exceeded.\n\n ',non-directive
' Constructs an <code>LineIndexOutOfBoundsException</code> with no detail message.\n',non-directive
' Computes a size for this page\'s UI component. \n\n ',non-directive
' The symbolic font name for the header font (value\n <code>\"org.eclipse.jface.headerfont\"</code>).\n',non-directive
' Creates a copy of the receiver.\n \n',non-directive
'the label ',non-directive
'@throws IllegalArgumentException if the map is null\n ',non-directive
'@param aboveButtons\n            if <code>true</code> status line is placed above buttons; if\n            <code>false</code> to the right\n',non-directive
' Returns the descriptor for JFace\'s text font. ',non-directive
'@since 3.1\n \n ',non-directive
'@param parentShell\n            the parent SWT shell\n',non-directive
'@param pageName the name of the page\n',non-directive
'<li>\nsetting the viewer\'s label provider (an object implementing\n<tt>ILabelProvider</tt>),</li>\n\n',non-directive
'@return a multi-value map backed by the given map which returns collections\n created by the specified collection factory\n ',non-directive
' Sets the margins for layouts created with this factory. ',non-directive
'@return this\n',non-directive
'The <tt>org.eclipse.ui.editors.templates</tt>\nextension point can be used to allow other plug-ins to contribute\ntemplates to an editor. ',non-directive
'@since 3.2\n',non-directive
'This method fails if the value does not represent a double.\n\n ',non-directive
' Utility for color operations.\n\n ',non-directive
' Vertical spacing in dialog units (value 4).\n',non-directive
' Enables showing the revision author.\n\n @param show <code>true</code> to show the author, <code>false</code> to hide it\n',non-directive
'@return the closure\n',non-directive
?,non-directive
'@since 1.2\n',non-directive
' Returns the first page to be shown in this wizard.\n\n ',non-directive
'<P>\n<P>\n<h3><code>java.sql</code> and <code>javax.sql</code> Features Introduced in the JDBC 3.0 API</h3>\n<UL>\n  ',non-directive
'@param key\n            the key.\n ',non-directive
?,non-directive
' Creates a new RowLayout and attaches it to the given composite. ',non-directive
?,non-directive
'@param source\n            the page changing provider (the source of this event)\n ',non-directive
?,non-directive
'@param key the key\n ',non-directive
?,non-directive
'@return  the value in the map as a number, or defaultValue if the\n    original value is null, the map is null or the number conversion\n    fails\n',non-directive
' Returns whether this dialog page is in a valid state.\n \n',non-directive
' Sets the value associated with the current key (optional operation).\n\n ',non-directive
'</dd>\n<dt><code>Can-Redefine-Classes</code></dt>\n',non-directive
'<li>{',non-directive
' Gets a String from a Map in a null-safe manner.\n ',non-directive
'\n\nProvides classes and interfaces for parsing and managing\ncertificates, certificate revocation lists (CRLs), and \ncertification paths. ',non-directive
' This class manages SWT resources. ',non-directive
'@see #margins(Point)\n ',non-directive
?,non-directive
'@param parentShell The shell this is being sent from. ',non-directive
'<li>https://bugs.eclipse.org/bugs/show_bug.cgi?id=50123\n\t\t= &gt; Combo broken on MacOS X</li>\n  </ul>\n\t',non-directive
'@param symbolicName the symbolic font name\n ',non-directive
?,non-directive
' Sets the current value of the preference with the given name\n in the given preference store. This method does not update\n the font registry or fire a property change event.\n \n @param store the preference store\n @param name the name of the preference\n @param value the new current value of the preference\n \n @see PreferenceConverter#setValue(IPreferenceStore, String, FontData[])\n',non-directive
' Sets this field editor\'s value.\n\n @param value the new value, or <code>null</code> meaning the empty string\n',non-directive
' Returns the title image label.\n \n @return the title image label\n',non-directive
'@see #getDialogBoundsStrategy()\n',non-directive
'Template variables are resolved by a <tt>TemplateVariableResolver.</tt> <tt>GlobalTemplateVariables</tt> offers\nsome default variables such as date, user, and selection, but advanced\nfeatures such as resolving to language constructs can be performed in\nsubclasses.<br>\n',non-directive
'@param manager the resource manager used to allocate images\n \n ',non-directive
'@since 3.0\n ',non-directive
'The abstract base\nclass <tt>Wizard</tt> is provided as a starting point; it is simpler to\nsubclass <tt>Wizard</tt> than to implement <tt>IWizard</tt> from scratch.\n',non-directive
'@param contentType the content type under which to register\n',non-directive
'<li>\n<tt>DirectoryFieldEditor</tt> - directories</li>\n\n',non-directive
'@see Display#getSystemColor(int)\n',non-directive
' The IInputValidator is the interface for simple validators. \n @see org.eclipse.jface.dialogs.InputDialog\n',non-directive
'<h2>Package Specification</h2>\n<ul>\n  ',non-directive
' Undoes everything that was done by {@link #createImage(ImageDescriptor)}.\n \n @since 3.1 \n\n @param descriptor identifier for the image to dispose\n',non-directive
'@link SWT#COLOR_MAGENTA magenta}.\n ',non-directive
'@param name the name of the preference\n ',non-directive
' Shell style appropriate for a simple hover popup that cannot get focus.\n \n',non-directive
'@param display the display the color is from\n ',non-directive
' Notifies that the container of this preference page has been canceled.\n \n',non-directive
'<p>\n The comparator is optional. ',non-directive
' Release the page managed by this node, and any SWT resources\n held onto by this node (Images, Fonts, etc).  \n\n ',non-directive
'@since 3.2\n',non-directive
?,non-directive
'@link #length()} constant. ',non-directive
'Positive\n for added lines, negative for deleted lines.\n',non-directive
'The binding manager manages a collection of bindings, and\ndecides which bindings are active at any point in time.  ',non-directive
' Returns this field editor\'s list control.\n\n @param parent the parent control\n @return the list control\n',non-directive
?,non-directive
' Sets the minimum page size.\n \n @param minWidth\n            the minimum page width\n @param minHeight\n            the minimum page height\n @see #setMinimumPageSize(Point)\n',non-directive
'<p>\n Standard implementations of common factories are provided by\n {',non-directive
' Event object describing a page selection change. The source of these events\n is a page change provider.\n \n @see IPageChangeProvider\n @see IPageChangedListener\n \n @since 3.1\n',non-directive
'@return true if non-null and non-empty\n ',non-directive
?,non-directive
?,non-directive
' RowLayoutFactory creates and initializes row layouts. ',non-directive
?,non-directive
'Default value: <code>10</code>.\n\n ',non-directive
' Creates a color field editor.\n \n',non-directive
' Removes the given preference node from the list of subnodes\n (immediate children) of this node.\n\n ',non-directive
' Gets an int from a Map in a null-safe manner,\n using the default value if the the conversion fails.\n <p>\n The int is obtained from the results of {@link #getNumber(Map,Object)}.\n\n @param map  the map to use\n @param key  the key to look up\n @param defaultValue  return if the value is null or if the\n     conversion fails\n @return the value in the Map as an int, <code>defaultValue</code> if null map input\n',non-directive
'@param min\n            the value used for Scale.setMinimum(int).\n ',non-directive
' The string representation used for <code>false</code> (<code>\"false\"</code>).\n',non-directive
'@param newTitle\n            the window title for the container\n',non-directive
'<h3>Packages</h3>\n<ul>\n  ',non-directive
'@param replacement the replacement text\n ',non-directive
'@throws IllegalArgumentException if the predicate is null\n ',non-directive
'@param w\n            the control\n ',non-directive
'@return the created title area composite.\n',non-directive
?,non-directive
'<p>Three specific contribution managers are provided: a status line manager\n(<tt>StatusLineManager</tt>), a tool bar manager (<tt>ToolBarManager</tt>),\nand a hierarchical menu manager (<tt>MenuManager</tt>).\n',non-directive
' Returns the default value for the string-valued preference\n with the given name.\n Returns the default-default value (the empty string <code>\"\"</code>) \n is no default preference with the given name, or if the default \n value cannot be treated as a string.\n\n @param name the name of the preference\n @return the default value of the named preference\n',non-directive
'@author Stephen Colebourne\n',non-directive
'</p>\n \n ',non-directive
?,non-directive
' Gets an iterator that transforms the elements of another iterator.\n <p>\n The transformation occurs during the next() method and the underlying\n iterator is unaffected by the transformation.\n\n @param iterator  the iterator to use, not null\n @param transform  the transform to use, not null\n @return a new transforming iterator\n @throws NullPointerException if either parameter is null\n',non-directive
'@throws ClassCastException if the iterators collection contains the wrong object type\n',non-directive
'@return the line coverage of the adjusted ranges\n',non-directive
?,non-directive
' Converts the given value into a boolean.\n ',non-directive
'<li>extendedMargins(0,0,0,0)</li>\n ',non-directive
' The label for show details buttons.\n',non-directive
'@return a newly created image descriptor\n',non-directive
' Converts the given value into a double.\n ',non-directive
?,non-directive
?,non-directive
'The framework\nconsists of abstract base classes for viewers (<tt>Viewer</tt>, <tt>StructuredViewer</tt>,\n<tt>AbstractTreeViewer</tt>) together with concrete viewer classes (<tt>ListViewer</tt>,\n<tt>TreeViewer</tt>,\n<tt>TableViewer</tt>,\n<tt>TableTreeViewer</tt>, <tt>CheckboxTreeViewer</tt>,\nand <tt>CheckboxTableViewer</tt>),\nand various lesser support classes. ',non-directive
' Creates a FontDescriptor that describes an existing font. ',non-directive
'@param height\n            margin height (pixels)\n ',non-directive
' Persist the last location of the dialog.\n ',non-directive
?,non-directive
'@since 3.4\n',non-directive
'<p>\n The result of this method is typically used by the container.\n ',non-directive
' Sets the default value of the preference with the given name\n in the given preference store.\n\n ',non-directive
'If the value is a <code>String</code> and it equals \'true\' ignoring case\n then <code>true</code> is returned, otherwise <code>false</code>.\n ',non-directive
'@link Hunk} information\n',non-directive
'@param parent the parent composite\n',non-directive
'@param iterator2  the first iterators to use, not null\n ',non-directive
'@return the font\n',non-directive
'<p>\n This is a shortcut for <code>setMessage(newMesasge, NONE)</code>\n </p>\n \n ',non-directive
' Converts the given value into a long.\n ',non-directive
?,non-directive
' Converts the given value into an SWT rectangle.\n ',non-directive
' Message label is the label the message is shown on.\n',non-directive
' Creates and returns a new image descriptor from a URL.\n\n @param url The URL of the image file.\n @return a new image descriptor\n',non-directive
?,non-directive
'@exception DataFormatException if the given value does not represent\n\ta rectangle\n',non-directive
'@exception java.io.IOException if there is a problem saving this store\n',non-directive
' Converts the given value into an SWT rectangle.\n Returns the given default value if the \n value does not represent a rectangle.\n\n @param value the value to be converted\n @param dflt the default value\n @return the value as a rectangle, or the default value\n',non-directive
' {@inheritDoc}\n \n ',non-directive
'The {',non-directive
'It displays\n wizard pages, at most one of which is considered\n the current page. ',non-directive
' Button id for a \"Retry\" button (value 8).\n',non-directive
' Returns the line coverage of the adjusted ranges, an empty range if the coverage is empty.\n\n @return the line coverage of the adjusted ranges\n',non-directive
'This implementation determines whether the information is valid by asking the content\n assist processor for all  context information objects for the current position. ',non-directive
'</p>\n\n ',non-directive
'@since 3.3\n\n',non-directive
'@see java.lang.Double#valueOf(java.lang.String)\n',non-directive
'@since 3.0\n',non-directive
' Returns the last status.\n \n',non-directive
' Returns whether the first progress monitor is the same as, or a wrapper\n around, the second progress monitor.\n \n @param monitor1\n            the first progress monitor\n @param monitor2\n            the second progress monitor\n @return <code>true</code> if the first is the same as, or a wrapper\n         around, the second\n @see ProgressMonitorWrapper\n',non-directive
' Sets the minimum page size used for the pages.\n \n',non-directive
'<li><code>float</code> = <code>0.0f</code></li>\n \t',non-directive
?,non-directive
'@return Composite.\n \n',non-directive
'@link #getHtml()}.\n ',non-directive
'@param value the value to be converted\n ',non-directive
?,non-directive
'@since 3.5\n',non-directive
' Prints the contents of this preference store to the given print stream.\n \n',non-directive
' Creates a local registry that delegates to the given global registry\n for all resource allocation and deallocation. \n \n @param parentRegistry global registry \n',non-directive
' Returns the current value of the float-valued preference with the\n given name.\n Returns the default-default value (<code>0.0f</code>) if there\n is no preference with the given name, or if the current value \n cannot be treated as a float.\n\n @param name the name of the preference\n @return the float-valued preference\n',non-directive
' The margin height; <code>5</code> pixels by default.\n',non-directive
'@param args\n            the message arguments\n ',non-directive
' A listener which is notified when the current page of the multi-page dialog\n is changed.\n \n @see IPageChangeProvider\n @see PageChangedEvent\n \n @since 3.1\n',non-directive
?,non-directive
'@link java.util.regex.Pattern} class represents a\nregular expression that is specified in string form in a syntax similar to\nthat used by Perl.\n\n',non-directive
' The difference in lines compared to the corresponding line range in the original. Positive\n for added lines, negative for deleted lines.\n',non-directive
'<LI><code>SQLPermission</code> class -- provides permission when code\n                  running within a Security Manager, such as an applet,\n                  attempts to set up a logging stream through the\n                  <code>DriverManager</code>\n\t ',non-directive
' Returns the field editor\'s value.\n\n ',non-directive
'@param removeCollection  the collection to remove elements from\n ',non-directive
'@param dflt the default value\n ',non-directive
'@param name the name of the preference this field editor works on\n ',non-directive
' Creates the inner page container.\n \n @param parent\n @return Composite\n',non-directive
' Load a dialog settings from a file and fill the receiver with its\n content.\n \n',non-directive
' Sets the GridData span. ',non-directive
'@return  a map iterator over nothing\n',non-directive
' Store the default preference for the field\n being edited\n',non-directive
' Returns the shell for this wizard container.\n\n @return the shell, or <code>null</code> if this wizard\n   container does not have a shell\n',non-directive
'@see #setMinimumPageSize(Point)\n',non-directive
'@see RowLayoutFactory\n',non-directive
'@see IPageChangedListener#pageChanged\n \n ',non-directive
' Set this dialog page\'s title.\n\n @param title the title of this dialog page, \n  or <code>null</code> if none\n',non-directive
?,non-directive
'@param yHint vertical hint (pixels), or SWT.DEFAULT to use the control\'s preferred size\n ',non-directive
' PixelConverter performs various conversions from device-independent units\n (such as DLUs or characters) to pixels. ',non-directive
' Adds an image to decorated field to be shown in the message area.\n \n',non-directive
'</p>\n\n ',non-directive
'@return <code>true</code> if the page is active,\n  and <code>false</code> otherwise\n',non-directive
'<p> The {',non-directive
' Dispose of all allocated colors. ',non-directive
' Sets the context selector\'s foreground color.\n\n @param foreground the foreground color\n @since 2.0\n',non-directive
' Button id for a \"Help\" button (value 17).\n',non-directive
' Returns the preference store.\n\n @return the preference store, or <code>null</code> if none\n',non-directive
'@since 3.4\n',non-directive
' Returns the section with the given name in this dialog settings.\n \n @param sectionName\n            the key\n @return IDialogSettings (the section), or <code>null</code> if none\n',non-directive
?,non-directive
' A field editor for a font type preference.\n',non-directive
' Checks whether the text input field contains a valid value or not.\n\n @return <code>true</code> if the field value is valid,\n   and <code>false</code> if invalid\n',non-directive
?,non-directive
'  Looks up the given key in the given map, converting the result into\n  a long, using the default value if the the conversion fails.\n\n  ',non-directive
'@param oldValue\n            the old value\n ',non-directive
'@link #getNumber(Map,Object)}.\n\n ',non-directive
' Shows the given message in the page for this\n field editor if it has one.\n\n @param msg the message\n',non-directive
' Add the listeners to the tree viewer.\n @param viewer\n \n @since 3.1\n',non-directive
' Sets the indent of the control within the cell. Moves the position of the control\n by the given number of pixels. Positive values move toward the lower-right, negative\n values move toward the upper-left.\n \n @param hIndent distance to move to the right (negative values move left)\n @param vIndent distance to move down (negative values move up)\n @return this\n',non-directive
'@since 3.0\n ',non-directive
'@param labelText the label text of the field editor\n ',non-directive
'@return the value as a font list\n ',non-directive
?,non-directive
' Converts the given SWT RGB color value object to a string.\n ',non-directive
?,non-directive
' Indicates whether the mouse cursor is allowed to leave the subject area without closing the hover.\n\n @return whether the mouse cursor is allowed to leave the subject area without closing the hover\n',non-directive
'<li>font-family</li>\n </ul>\n ',non-directive
'<li>Transformed - transforms elements added to the buffer\n',non-directive
' Provides labels for <code>IPreferenceNode</code> objects.\n \n',non-directive
' Creates a new FontDescriptor given the associated FontData\n \n @param data FontData describing the font to create\n @return a newly created FontDescriptor\n',non-directive
'@since Commons Collections 1.0\n ',non-directive
'@param key\n            the key\n ',non-directive
'@return Control\n',non-directive
?,non-directive
' Creates and returns a new image descriptor given ImageData\n describing the image.\n \n @since 3.1 \n\n @param data contents of the image\n @return newly created image descriptor\n',non-directive
'@see ProgressMonitorWrapper\n',non-directive
'@exception DataFormatException if the given value does not represent\n\ta boolean\n',non-directive
?,non-directive
' Convenience API. ',non-directive
'This offers several benefits over creating RowData the normal way:\n \n <ul>\n ',non-directive
?,non-directive
'@return a new RowLayoutFactory instance that creates copies of the given\n         layout\n',non-directive
'@param value the value to be converted\n ',non-directive
' Returns the text label used to present this node in a preference dialog.\n\n @return the text label for this node, or <code>null</code>\n   if there is no label for this node\n',non-directive
?,non-directive
' The Help button has been pressed.\n',non-directive
'@param iterator  the iterator to use, not null\n ',non-directive
'<p>\n1) Direct access to the Sun-specific MXBean interface\n<blockquote><pre>\n   com.sun.management.RuntimeMXBean mxbean = \n       (com.sun.management.RuntimeMXBean) ManagementFactory.getRuntimeMXBean();\n\n   // Get the standard attribute \"VmVendor\"\n   String vendor = mxbean.getVmVendor();\n\n   // Get the platform-specific attribute \"Bar\"\n   BarType bar = mxbean.getBar();\n\n</pre>\n</blockquote>\n\n<p>\n2) Access the Sun-specific MXBean interface via <tt>MBeanServer</tt>\n\n<blockquote><pre>\n   MBeanServerConnection mbs;\n\n   // Connect to a running JVM (or itself) and get MBeanServerConnection\n   // that has the JVM MXBeans registered in it\n   ...\n\n   ',non-directive
?,non-directive
'@see org.eclipse.jface.dialogs.InputDialog\n',non-directive
'@since 3.3\n',non-directive
'A {',non-directive
' Converts the given int value to a string.\n Equivalent to <code>String.valueOf(value)</code>.\n\n @param value the int value\n @return the string representing the given int\n',non-directive
'@link org.eclipse.swt.widgets.Combo} to a {',non-directive
?,non-directive
'@return the string representing the given point\n',non-directive
'@see <a href=\"../../../javax/management/package-summary.html\">\n     JMX Specification.</a>\n\n',non-directive
' Applys the font to the field editors managed by this page.\n',non-directive
'@param parent\n            The parent shell.\n ',non-directive
'@param defaultValue  return if the value is null or if the\n     conversion fails\n ',non-directive
'@param shellStyle\n            The shell style.\n ',non-directive
' Creates a progress monitor dialog under the given shell. ',non-directive
' Adds the pair <code>key/value</code> to this dialog settings.\n \n',non-directive
'@return the default value of the named preference\n',non-directive
'<p>\n A message provides instruction or information to the user.\n ',non-directive
?,non-directive
' Creates a new registry for the given device.\n \n @param device device to manage\n',non-directive
' Returns the font descriptor for the JFace default font.\n \n @return the font descriptor for the JFace default font\n @since 3.3\n',non-directive
'@return a list of the iterator contents\n ',non-directive
'Use the methods <code>load(String)</code> and <code>store(String)</code>\n to load and store this dialog settings.\n\n ',non-directive
' Button height in dialog units (value 14).\n \n',non-directive
?,non-directive
'@param key\n            the key\n ',non-directive
'@param information the information\n',non-directive
'DeviceResourceDescriptors\n are managed by a ResourceRegistry.\n \n',non-directive
' Returns a copy of the original FontData\n \n @param next FontData to copy\n @return a copy of the given FontData\n @since 3.3\n',non-directive
'@return the text area\n',non-directive
?,non-directive
' Updates the label with the current task and subtask names.\n',non-directive
'@return a copy of the argument\n',non-directive
'@since 3.5\n',non-directive
'The value control\n displays the currently selected font name.\n ',non-directive
' Shortens the given text <code>textValue</code> so that its width in\n pixels does not exceed the width of the given control. ',non-directive
?,non-directive
'@link org.apache.commons.collections.SortedBag SortedBag} interfaces.\n',non-directive
' Set the treeViewer.\n @param treeViewer\n \n @since 3.1\n',non-directive
?,non-directive
?,non-directive
'@return <code>true</code> if <code>selection</code> does not contain any text,\n         <code>false</code> otherwise\n ',non-directive
'<p>\nThe following implementations are provided in the package:\n<ul>\n',non-directive
' Removes the verify key listener from this content assist subject control\'s\n list of verify key listeners. ',non-directive
'@throws DataFormatException thrown if request string could not seperated\n',non-directive
'@return <code>true</code> if information control is replaceable, <code>false</code> otherwise\n',non-directive
' Returns the default value for the double-valued preference\n with the given name.\n Returns the default-default value (<code>0.0</code>) if there\n is no default preference with the given name, or if the default \n value cannot be treated as a double.\n\n @param name the name of the preference\n @return the default value of the named preference\n',non-directive
' Increments the nesting depth of running operations.\n \n @since 3.0\n',non-directive
'@param chars\n            the number of characters\n ',non-directive
?,non-directive
'@param value the boolean object\n ',non-directive
' Returns the currently selected page in the dialog.\n \n',non-directive
' The label for retry buttons.\n',non-directive
'@param proposal the proposal\n',non-directive
'\nProvides a framework for wizards.\n',non-directive
'\nProvides a content assist add-on for an <tt>ITextViewer</tt>.\n',non-directive
?,non-directive
'@return the Color used for banner foregrounds\n ',non-directive
'@param newValue the new value.\n',non-directive
?,non-directive
' Creates a selection listener.\n',non-directive
'  Looks up the given key in the given map, converting the result into\n  a map, using the default value if the the conversion fails.\n\n  ',non-directive
' Creates a new wizard page with the given name, title, and image.\n\n @param pageName the name of the page\n @param title the title for this wizard page,\n   or <code>null</code> if none\n @param titleImage the image descriptor for the title of this wizard page,\n   or <code>null</code> if none\n',non-directive
'These classes also provide a number of methods for\nconverting among primitive values, as well as supporting such\nstandard methods as equals and hashCode.  ',non-directive
?,non-directive
?,non-directive
' Creates a new preference page with the given title and no image.\n\n @param title the title of this preference page\n',non-directive
'@param collection the <code>Collection</code> to use as input values for the map.\n ',non-directive
'@param numColumns the number of columns for the radio button presentation\n ',non-directive
' Gets a list based on an iterator.\n ',non-directive
'</p>\n\n ',non-directive
' Returns all the pages in this wizard.\n\n @return a list of pages\n',non-directive
' Adds the given preference node as a subnode of the\n node at the given path.\n\n ',non-directive
?,non-directive
?,non-directive
'@see org.eclipse.jface.viewers.ILabelProvider#getImage(java.lang.Object)\n',non-directive
'@param persistBounds\n            A boolean indicating whether the bounds (size and location) of\n            the dialog should be persisted upon close of the dialog. ',non-directive
'@param name the name of the preference\n ',non-directive
'@param showPersistActions\n            A boolean indicating whether actions allowing the user to\n            control the persisting of the dialog size and location should\n            be shown in the dialog menu. ',non-directive
'The details as to how the load is initiated, is implementation\ndependent.\n\n',non-directive
?,non-directive
'@return the margin in pixels\n',non-directive
'@link FactoryUtils}. ',non-directive
'@param dflt the default value\n ',non-directive
' Finds and returns the contribution node at the given path.\n\n ',non-directive
' A selection provider for annotate revisions. ',non-directive
' Creates a new field editor preference page with the given title \n and style, but no image.\n\n @param title the title of this preference page\n @param style either <code>GRID</code> or <code>FLAT</code>\n',non-directive
'@return true if empty or null\n ',non-directive
'@see org.eclipse.swt.widgets.Scale#setPageIncrement(int)\n',non-directive
?,non-directive
'</pre>\n',non-directive
'@param increment\n            the value used for Scale.setIncrement(int).\n ',non-directive
' Returns a text edit describing the text modification that would be executed if the backspace\n key was pressed on the given selection.\n \n @param selection the selection to delete\n @return a text edit describing the operation needed to delete <code>selection</code>\n @throws BadLocationException if computing the edit failed\n',non-directive
?,non-directive
' Returns the JFace\'s header font. ',non-directive
?,non-directive
'@param descriptor descriptor to find\n ',non-directive
' Converts the given integer object to a string.\n Equivalent to <code>String.valueOf(value.intValue())</code>.\n\n @param value the integer object\n @return the string representing the given integer value\n',non-directive
?,non-directive
'@param exceptions\n            the list of controls to not disable (element type:\n            <code>Control</code>)\n ',non-directive
'<li><a href=\n    \"{@docRoot}/../technotes/guides/security/permissions.html\"><b>\n    Policy Permissions\n    </b></a></li>\n\n  ',non-directive
' Interface for a page in a multi-page dialog.\n',non-directive
'\nProvides a presentation reconciler add-on for an <tt>ITextViewer</tt>.\n',non-directive
'</p>\n',non-directive
'@param name the name of the preference this field editor works on\n ',non-directive
' Sets the current value of the preference with the given name\n in the given preference store. \n <p>\n Included for backwards compatibility.  This method is equivalent to\n </code>setValue(store, name, new FontData[]{value})</code>.\n </p>\n \n @param store the preference store\n @param name the name of the preference\n @param value the new current value of the preference\n',non-directive
'@see #spacing(int, int)\n \n ',non-directive
' Returns the value of the given key in this dialog settings.\n \n @param key\n            the key\n @return the value, or <code>null</code> if none\n',non-directive
'@param fill\n            the fill status\n ',non-directive
'@since 3.0\n ',non-directive
' Text limit constant (value <code>-1</code>) indicating unlimited\n text limit and width.\n',non-directive
'@return <code>true</code> if the page is in a valid state,\n   and <code>false</code> if invalid\n',non-directive
?,non-directive
' Return the label for the image.\n',non-directive
'<li>RFC 2459: X.509 Certificate and CRL Profile\n</ul>\n\n',non-directive
' Sets the progress monitor part\'s font.\n',non-directive
'<p>\n If the value is a <code>Boolean</code> its value is returned.\n ',non-directive
'@param defaultValue  what to return if the value is null or if the\n     conversion fails\n  ',non-directive
'</p>\n',non-directive
?,non-directive
' Property name constant (value <code>\"field_editor_value\"</code>)\n to signal a change in the value of this field editor.\n',non-directive
'<p>\n The double is obtained from the results of {',non-directive
?,non-directive
?,non-directive
'\n<p>\nThis package contains implementations of collection and map related key/value classes.\nThese are usually used in maps, however they can be used as data holders in any collection.\n<p>\nThe following key/value designs are included:\n<ul>\n<li>Map Entry - various map entry implementations\n<li>KeyValue - a key and value pair, without map entry semantics\n<li>MultiKey - a holder of multiple keys tied together\n</ul>\n</pre>\n',non-directive
' The label for no buttons.\n',non-directive
?,non-directive
'@since 3.1 \n\n ',non-directive
' Adjusts this change region to a diff hunk. This will change the adjusted ranges.\n\n @param hunk the diff hunk to adjust to\n',non-directive
' Sets the indent used for the first column of the radion button matrix.\n\n @param indent the indent (in pixels)\n',non-directive
?,non-directive
'The returned array\n has size <code>steps</code>. ',non-directive
' Provides input for a {',non-directive
'Convert the value of the given key in this dialog\n settings to a boolean and return it.\n \n',non-directive
' Sets the text of the change button.\n\n ',non-directive
' Sets the range of valid values for this field.\n \n @param min the minimum allowed value (inclusive)\n @param max the maximum allowed value (inclusive)\n',non-directive
'</p>\n\n ',non-directive
' Creates a new wizard page with the given name, and\n with no title or image.\n\n ',non-directive
'@return  a list iterator over the array\n ',non-directive
'@param theControl\n ',non-directive
' Interface for a page in a multi-page dialog.\n',non-directive
'@param keyTransformer the <code>Transformer</code> used to transform the collection value into a key value\n ',non-directive
' Return the layout for the composite that contains\n the pages.\n @return PageLayout\n \n @since 3.1\n',non-directive
' Sets the preference store for this preference dialog.\n \n',non-directive
?,non-directive
'<li><code>IntegerFieldEditor</code> - integers</li>\n   ',non-directive
' Performs any actions appropriate in response to the user \n having pressed the Finish button, or refuse if finishing\n now is not permitted.\n\n ',non-directive
'<P>\nThe agent JAR is appended to the system class path. ',non-directive
'@author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n ',non-directive
' Return the <code>Image</code> to be used when displaying information.\n \n @return image the information image\n',non-directive
' Determines whether extra horizontal or vertical space should be allocated to\n this control\'s column when the layout resizes. ',non-directive
' Constructs a new <code>LineIndexOutOfBoundsException</code>\n object with an argument indicating the illegal index.\n\n @param index the illegal index.\n',non-directive
' Provides a set of convenience methods for creating HTML pages.\n ',non-directive
'</p>\n',non-directive
'@param name the name of the preference\n ',non-directive
'@return the selection provider\n',non-directive
' Image registry key for info message image (value\n <code>\"dialog_messasge_info_image\"</code>).\n \n',non-directive
'@link #fixedSizeMap(Map)}\n  ',non-directive
'@param background the background color\n ',non-directive
'@return the value\n',non-directive
' Get the color selector used by the receiver.\n \n',non-directive
' The button bar; <code>null</code> until dialog is layed out.\n',non-directive
'@since Commons Collections 3.2\n',non-directive
'@param width\n            margin width (pixels)\n ',non-directive
' Gets an array based on an iterator.\n <p>\n As the wrapped Iterator is traversed, an ArrayList of its values is\n created. At the end, this is converted to an array.\n\n @param iterator  the iterator to use, not null\n @param arrayClass  the class of array to create\n @return an array of the iterator contents\n @throws NullPointerException if iterator parameter is null\n @throws NullPointerException if arrayClass is null\n @throws ClassCastException if the arrayClass is invalid\n',non-directive
' Returns the dialog settings for this wizard page.\n\n ',non-directive
'<p>\n Dialogs are usually modal. ',non-directive
'@param iterator  the iterator to use, not null\n ',non-directive
' Image registry key for info image (value <code>\"dialog_info_image\"</code>).\n \n',non-directive
' Return the Down button.  \n \n @return the button\n @since 3.5\n',non-directive
' Returns whether this page is complete or not.\n ',non-directive
?,non-directive
'@throws IllegalArgumentException if the array is not an array\n ',non-directive
'@param image\n            the image.\n',non-directive
?,non-directive
'\nService provider classes for the classes in the java.text package.\n',non-directive
'@see #save()\n',non-directive
'<p>\nThe following key/value designs are included:\n<ul>\n',non-directive
'Special keys are ones that do not (e.g., Arrow Up, F11, and\nNumLock).\n',non-directive
?,non-directive
' Abstract base class for various JFace registries.\n \n',non-directive
' \n JFacePreferences is a class used to administer the preferences used by JFace\n objects.\n',non-directive
'@param predicates  an array of predicates to check, not null\n ',non-directive
' Returns JFace\'s standard font. ',non-directive
'<li>Lazy - creates objects in the map on demand\n',non-directive
'the current task name ',non-directive
' Layout constant (value <code>1</code>) indicating that\n the field editors\' basic controls are put into a grid layout.\n',non-directive
'@link #getNumber(Map,Object)}.\n\n ',non-directive
' Get the comparator used for the values in the value-to-key map aspect.\n ',non-directive
'@throws IllegalArgumentException if the map is null\n ',non-directive
?,non-directive
?,non-directive
'@param name the name of the preference this field editor works on\n ',non-directive
?,non-directive
' Button id for a \"Deselect All\" button (value 19).\n',non-directive
'<li>Blocking - blocks on get and remove until an element is available\n</ul>\n',non-directive
'@return the string representing the given double value\n',non-directive
'</p>\n \n ',non-directive
?,non-directive
'<li><a href=\"../../../../technotes/guides/security/cert3.html\">\nX.509 Certificates and CRLs</a>\n</ul>\n\n',non-directive
' Saves this preference store to the given output stream. The given string\n is inserted as header information.\n \n @param out\n            the output stream\n @param header\n            the header\n @exception java.io.IOException\n                if there is a problem saving this store\n',non-directive
'@return <code>false</code> to abort the container\'s cancel \n  procedure and <code>true</code> to allow the cancel to happen\n',non-directive
?,non-directive
' Gets a double from a Map in a null-safe manner,\n using the default value if the the conversion fails.\n ',non-directive
'Attaches GridData to the control. ',non-directive
'@param name the name of the preference\n ',non-directive
?,non-directive
' Creates a new RowDataFactory initialized with the SWT defaults.\n \n',non-directive
'Returns the given default value if the value cannot be parsed.\n\n ',non-directive
?,non-directive
'The spacing is\n the distance between items within the layout.\n \n',non-directive
'@param pageName the name of the wizard page\n ',non-directive
?,non-directive
' Creates a new object and saves in it the current enable/disable state of\n the given control and its descendents except for the given list of\n exception cases; the controls that are saved are also disabled.\n \n @param w\n            the control\n @param exceptions\n            the list of controls to not disable (element type:\n            <code>Control</code>), or <code>null</code> if none\n',non-directive
'@param fontData the font information to use\n ',non-directive
?,non-directive
?,non-directive
'</p>\n<p>\nThe following decorators are provided in the package:\n<ul>\n',non-directive
?,non-directive
?,non-directive
'@param text the label text of the field editor\n',non-directive
'@param <O> the output type from the transformer\n\n ',non-directive
?,non-directive
?,non-directive
'@param displayMask\n            the mask to use to filter the displaying of child items, as\n            per <code>IStatus.matches</code>\n ',non-directive
'@param map  the map to use\n ',non-directive
?,non-directive
'@return the Apply button\n',non-directive
'Anything\n allocated by this registry will be automatically cleaned up with the given\n control is disposed. ',non-directive
'<li>\n<tt>IWizard</tt> - a wizard consisting of several wizard pages</li>\n\n',non-directive
' Returns the current message for this message provider.\n <p>\n A message provides instruction or information to the user.\n </p>\n \n @return the message, or <code>null</code> if none\n',non-directive
'Is the ability to set native method prefix needed by this agent.\n                        ',non-directive
'@param display the display\n ',non-directive
'@since 3.1\n',non-directive
?,non-directive
'</p>\n',non-directive
'@since 3.3\n',non-directive
' Creates a new preference page with an empty title and no image.\n',non-directive
' Sets the revision information to be drawn and triggers a redraw.\n\n @param info the revision information to show, <code>null</code> to draw none\n',non-directive
'@link Iterator#next()} method will return the lesser of\n <code>A.next()</code> and <code>B.next()</code> and so on.\n ',non-directive
?,non-directive
'@param collectionFactory  a factor which creates collection objects\n ',non-directive
'That is, the class containing the <code>premain</code> method.\n                        ',non-directive
'@param preferenceStore The preference store to propogate changes to\n ',non-directive
?,non-directive
?,non-directive
'@return  the value in the map as a number, or defaultValue if the\n    original value is null, the map is null or the number conversion\n    fails\n',non-directive
'\nProvides support for dialogs.\n',non-directive
?,non-directive
' Set the layoutData for the messageArea. In most cases this will be a copy\n of the layoutData used in setTitleLayoutData.\n \n @param layoutData\n            the layoutData for the message area composite.\n @see #setTitleLayoutData(Object)\n',non-directive
' Gets a singleton list iterator.\n ',non-directive
'@param name the name of the preference this field editor works on\n ',non-directive
?,non-directive
?,non-directive
' Shell style appropriate for an info popup that can get focus.\n',non-directive
'<dd>A variation of the native formatter that provides a more compact representation.</dd>\n<dt>EmacsKeyFormatter</dt>\n',non-directive
' Adds owner draw support for tables.\n\n ',non-directive
' Creates a list field editor.\n \n',non-directive
'<li><i>Direct access to an MXBean interface</i>\n    <ol type=\"a\">\n    ',non-directive
' The symbolic font name for the dialog font (value\n <code>\"org.eclipse.jface.dialogfont\"</code>).\n',non-directive
?,non-directive
' Implements <code>IProgressMonitor.setCanceled</code>.\n @see IProgressMonitor#setCanceled(boolean)\n',non-directive
'@return the viewer\'s input document\n',non-directive
'<li>https://bugs.eclipse.org/bugs/show_bug.cgi?id=50121\n\t\t= &gt; Combo doesn\'t get Arrow_up/Down keys on GTK</li>\n\n\t\t',non-directive
' Convenience API. Convert the value of the given key in this dialog\n settings to a double and return it.\n \n @param key\n            the key\n @return the value coverted to double, or throws\n         <code>NumberFormatException</code> if none\n \n @exception NumberFormatException\n                if the string value does not contain a parsable number.\n @see java.lang.Double#valueOf(java.lang.String)\n',non-directive
' Creates a new event for the given source and selected page.\n \n',non-directive
' Returns the number of pixels corresponding to the height of the given\n number of characters.\n \n',non-directive
'<li><tt>TemplateTranslator</tt> and <tt>TemplateBuffer</tt> are used to\nparse the template grammar and don\'t need to be used usually.</li>\n  ',non-directive
'@linkplain org.eclipse.jface.contentassist.ISubjectControlContentAssistant subject control content assistant}.\n\n ',non-directive
'<LI> The JDBC 1.0 API\n</UL>\n',non-directive
'<li><a href=\n    \"{@docRoot}/../technotes/guides/security/crypto/HowToImplAProvider.html\"><b>\n    How to Implement a Provider for the Java Cryptography Architecture\n    </b></a></li>\n  ',non-directive
?,non-directive
'@param key  the key to look up\n ',non-directive
?,non-directive
?,non-directive
'@param <V> the type of the values in the map\n ',non-directive
' Adjusts the enable state of the OK \n button to reflect the state of the currently active \n page in this container.\n ',non-directive
' Returns the readable content as string.\n @return the readable content as string\n @exception IOException in case reading fails\n',non-directive
' Returns the wizard page that would to be shown if the user was to\n press the Next button.\n\n @return the next wizard page, or <code>null</code> if none\n',non-directive
'The returned object\n will always throw an {',non-directive
'<!--\n<h2>Package Specification</h2>\n\n##### FILL IN ANY SPECS NEEDED BY JAVA COMPATIBILITY KIT #####\n<ul>\n  ',non-directive
'</dd>\n</dl>\n',non-directive
'@param data FontData describing the font to create\n ',non-directive
' Gets a list iterator over an object or primitive array.\n ',non-directive
' Sets whether the progress dialog is cancelable or not.\n \n @param cancelable\n            <code>true</code> if the end user can cancel this progress\n            dialog, and <code>false</code> if it cannot be canceled\n',non-directive
' @param proposals the proposals\n',non-directive
' Returns the cause of this throwable or <code>null</code> if the\n cause is nonexistent or unknown. \n \n @return the cause or <code>null</code>\n @since 3.1\n',non-directive
?,non-directive
?,non-directive
'@return the root node\n',non-directive
' Create a default instance of the blocked handler which does not do\n anything.\n',non-directive
'A wizard is any object implementing <tt>IWizard</tt>. ',non-directive
'@param cancelComponent the control whose selection will\n trigger a cancel\n',non-directive
' Sets the number of columns in the layout\n \n ',non-directive
?,non-directive
' Create the details button if it should be included.\n \n',non-directive
'<li>indent(0,0)</li>\n ',non-directive
' Returns the default page image for this wizard.\n ',non-directive
?,non-directive
' Checks whether it is alright to leave this page.\n \n @return <code>false</code> to abort page flipping and the\n  have the current page remain visible, and <code>true</code>\n  to allow the page flip\n',non-directive
'If the attribute is not present the JVM will abort.\n                        ',non-directive
' Returns the wizard page that would to be shown if the user was to\n press the Back button.\n\n ',non-directive
'@throws IOException\n',non-directive
'@link #getNumber(Map,Object)}.\n\n ',non-directive
' Gets an iterator that provides an ordered iteration over the elements\n contained in a collection of ordered {',non-directive
'If null is specified then natural order is used.\n\n ',non-directive
'@param selection\n            the <code>ISelection</code> to examine.\n ',non-directive
?,non-directive
'-->\n\n',non-directive
'</p>\n \n ',non-directive
'@link Iterator}. ',non-directive
'@see IProgressMonitor#isCanceled()\n',non-directive
' Returns the top level control for this dialog page.\n \n',non-directive
'@param value the point object\n ',non-directive
'@param symbolicName\n ',non-directive
'The ordering is that of the iterator()\n method on the collection.\n \n',non-directive
' Returns <code>true</code> if a revision model has been set, <code>false</code> otherwise.\n\n @return <code>true</code> if a revision model has been set, <code>false</code> otherwise\n',non-directive
' Create the progress monitor part in the receiver.\n \n @param composite\n @param pmlayout\n @return ProgressMonitorPart\n',non-directive
'@since 3.4\n',non-directive
'@return <code>true</code> if the iterator has more elements\n',non-directive
' Returns the extent of the wizard for this node.\n ',non-directive
' Adds a listener for input changes to this input change provider.\n ',non-directive
?,non-directive
'<li>The setters on RowDataFactory all return \"this\", allowing them to be\n chained</li>\n </ul>\n ',non-directive
'@link Iterator#remove}, {',non-directive
?,non-directive
' Returns the currently selected wizard node within this page.\n \n',non-directive
'<p>\n Typically this indicates that the message should be shown without an\n icon.\n ',non-directive
?,non-directive
'@see GridLayoutFactory#generateLayout(org.eclipse.swt.widgets.Composite)\n ',non-directive
?,non-directive
' Returns the first page to be shown in this wizard.\n\n @return the first wizard page\n',non-directive
'@link #getNumber(Map,Object)}.\n\n ',non-directive
' Sets the default value for the long-valued preference with the\n given name. \n ',non-directive
'-->\n\n',non-directive
' Moves this range such that the {',non-directive
'@param font the font to use\n ',non-directive
' The scale, or <code>null</code> if none.\n',non-directive
'@see org.eclipse.jface.dialogs.IPageChangeProvider#addPageChangedListener(org.eclipse.jface.dialogs.IPageChangedListener)\n ',non-directive
?,non-directive
'@param vIndent distance to move down (negative values move up)\n ',non-directive
' Shell style appropriate for an info popup that can get focus.\n',non-directive
'\n\nProvides classes and interfaces for handling text, dates, numbers, and messages\nin a manner independent of natural languages.  ',non-directive
'@see IRunnableContext#run\n',non-directive
'<li><a href=\"\">##### REFER TO NON-SPEC DOCUMENTATION HERE #####</a>\n</ul>\n',non-directive
' Return the <code>Image</code> to be used when displaying information.\n \n',non-directive
'<LI>Ability to programmatically update <code>BLOB</code>,\n      <code>CLOB</code>, <code>ARRAY</code>, and <code>REF</code> values.\n  ',non-directive
?,non-directive
'@return the style for the message label\n \n ',non-directive
'@return the default minimum button size, in pixels\n',non-directive
'\nProvides a revision model and a protocol to display revision information in a vertical ruler column.\n',non-directive
'<LI><code>SQLException</code> -- thrown by most methods when there\n\t\t is a problem accessing data and by some methods for other reasons\n\t  ',non-directive
' Sets whether the progress dialog is cancelable or not.\n \n',non-directive
'<li><a href=\n    \"{@docRoot}/../technotes/guides/security/SecurityToolsSummary.html\"><b>\n    Security Tools Summary\n    </b></a></li>\n\n  ',non-directive
'<li><code>double</code> = <code>0.0</code></li>\n \t',non-directive
'@param parent\n            the parent shell of the dialog, or <code>null</code> if none\n ',non-directive
'<h4><a name=\"examples\">Ways to Access MXBeans</a></h4>\n\nThere are three different ways to access the management interfaces. \n\n',non-directive
' Interface for a wizard.  ',non-directive
' Constant for a simple dialog with the question image and OK/Cancel buttons (value 5).\n \n @see #open(int, Shell, String, String, int)\n @since 3.5\n',non-directive
'It also provides\naccess to the native-style key formatting facilities.\n',non-directive
?,non-directive
'@return an iterator over part of the array\n ',non-directive
' A mutator for the array of buttons in the button bar.\n \n',non-directive
'</p>\n<p>\nOverride the following methods in <tt>SourceViewerConfiguration</tt> to customize the hyperlink behavior of a source viewer:\n<ul>\n  ',non-directive
' Returns the value that will be used for Scale.setIncrement(int).\n \n @return the value.\n @see org.eclipse.swt.widgets.Scale#setIncrement(int)\n',non-directive
'<li>PriorityBuffer - provides for removal based on a comparator ordering\n',non-directive
?,non-directive
' The symbolic font name for the window font (value\n <code>\"org.eclipse.jface.windowfont\"</code>).\n \n',non-directive
'@return the default value of the named preference\n',non-directive
'@param map  the map to decorate\n ',non-directive
?,non-directive
' @param display the display the color is from\n @return the Color used for banner backgrounds\n @see SWT#COLOR_LIST_BACKGROUND\n @see Display#getSystemColor(int)\n',non-directive
?,non-directive
'@return the value in the Map as a double, <code>defaultValue</code> if null map input\n',non-directive
'If the <code>agentmain</code> method throws an uncaught exception it will be ignored.\n\n\n\n',non-directive
' Default control creator.\n',non-directive
'Each ColorDescriptor will create a particular SWT \n Color on demand. ',non-directive
?,non-directive
'@param value the double object\n ',non-directive
?,non-directive
?,non-directive
?,non-directive
'@return the value as an int\n ',non-directive
' Sets the delay after which the content assistant is automatically invoked\n if the cursor is behind an auto activation character.\n\n ',non-directive
'@return a <code>Range</code> equal to <code>range</code>\n',non-directive
' Gets an iterator over an object or primitive array.\n <p>\n This method will handle primitive arrays as well as object arrays.\n The primitives will be wrapped in the appropriate wrapper class.\n\n @param array  the array over which to iterate\n @return  an iterator over the array\n @throws IllegalArgumentException if the array is not an array\n @throws NullPointerException if array is null\n',non-directive
' Convenience method to open a simple confirm (OK/Cancel) dialog.\n \n @param parent\n            the parent shell of the dialog, or <code>null</code> if none\n @param title\n            the dialog\'s title, or <code>null</code> if none\n @param message\n            the message\n @return <code>true</code> if the user presses the OK button,\n         <code>false</code> otherwise\n',non-directive
'This was not provided in JDK1.2.\n',non-directive
' Creates a new wizard dialog for the given wizard.\n \n',non-directive
'<p>\n As the wrapped Iterator is traversed, an ArrayList of its values is\n created. ',non-directive
'@see StringConverter\n',non-directive
'@noinstantiate This class is not intended to be instantiated by clients.\n',non-directive
'@since 3.3\n',non-directive
'Each predicate is evaluated\n until one returns true.\n \n',non-directive
'@link org.apache.commons.collections.Get Get} with matching\ngeneric parameters).\n\n',non-directive
' {@inheritDoc}\n \n ',non-directive
' Create the page control for the supplied page.\n \n @param page - the preference page to be shown\n @param parent - the composite to parent the page\n \n @since 3.1\n',non-directive
?,non-directive
'</dd>\n\n<dt><code>Agent-Class</code></dt>\n',non-directive
?,non-directive
' Returns all preference nodes managed by this\n manager.\n\n ',non-directive
' Returns the title bar color for this wizard.\n\n @return the title bar color\n',non-directive
'@param valueTransformer the <code>Transformer</code> used to transform the collection value into a value\n ',non-directive
'<li><code>String</code> = <code>\"\"</code> (the empty string)</li>\n </ul>\n ',non-directive
'For example, a\nhashtable that uses weak references to implement weak keys could poll its\nreference queue each time the table is accessed.  ',non-directive
'\n\nProvides classes and interfaces for obtaining reflective\ninformation about classes and objects.  ',non-directive
' Returns the preferred preview height. \n\n @return the height, or <code>-1</code> if no previewer\n  is installed\n',non-directive
' Enable the title and disable the message text and image.\n',non-directive
'@param name the name of the preference this field editor works on\n ',non-directive
'<li>PKCS #8: Private-Key Information Syntax Standard, \n    Version 1.2, November 1993</li>\n  ',non-directive
?,non-directive
'@throws NullPointerException if array is null\n',non-directive
?,non-directive
' Returns whether this dialog page is in a valid state.\n \n @return <code>true</code> if the page is in a valid state,\n   and <code>false</code> if invalid\n',non-directive
'<li>ReferenceIdentityMap - allows the garbage collector to collect keys and values using == for comparison\n',non-directive
' Shows the preference page corresponding to the given preference node.\n Does nothing if that page is already current.\n \n @param node\n            the preference node, or <code>null</code> if none\n @return <code>true</code> if the page flip was successful, and\n         <code>false</code> is unsuccessful\n',non-directive
' The tray dialog\'s default layout is a modified version of the default\n <code>Window</code> layout that can accomodate a tray, however it still\n conforms to the description of the <code>Window</code> default layout.\n ',non-directive
'\nProvides useful building blocks used throughout JFace,\nincluding property change events, a listener list implementation, and runtime\nchecked assertions.\n<br>&nbsp;\n',non-directive
' Persist the last known size of the dialog.\n ',non-directive
'<p>\n The short is obtained from the results of {',non-directive
?,non-directive
'@param columnIndex\n            the column index\n ',non-directive
' Gets a short from a Map in a null-safe manner.\n <p>\n The short is obtained from the results of {@link #getNumber(Map,Object)}.\n\n @param map  the map to use\n @param key  the key to look up\n @return the value in the Map as a short, <code>0</code> if null map input\n',non-directive
'@param creator the default information control creator\n',non-directive
'@param status\n            the status to set\n',non-directive
' The Cancel button control.\n',non-directive
'@param map  the map to use\n ',non-directive
' Utility for color operations.\n\n @since 3.3\n',non-directive
' Button id for a \"Skip\" button (value 5).\n',non-directive
' Creates a GridLayoutFactory that creates GridLayouts with no margins and \n default dialog spacing.\n \n',non-directive
' Sets the context selector\'s foreground color.\n\n ',non-directive
' The symbolic font name for the window font (value\n <code>\"org.eclipse.jface.windowfont\"</code>).\n \n @deprecated This font is not in use\n',non-directive
'@deprecated use asString(FontData)\n',non-directive
'@param titleText\n            Text to be shown in an upper title area, or <code>null</code>\n            if there is no title.\n ',non-directive
'This method fails if the value does not represent a rectangle.\n ',non-directive
'@return a combination iterator over the iterators\n ',non-directive
'@param store the preference store\n ',non-directive
'@since 3.4\n',non-directive
'@param newValue\n            the new value\n',non-directive
?,non-directive
'The\n{',non-directive
'@see #spacing(int)\n',non-directive
' Notifies that the selected page has changed.\n \n',non-directive
' Set the foreground and background colors of the\n control to the specified values. ',non-directive
' Creates a new font field editor \n',non-directive
?,non-directive
?,non-directive
'@return the <code>for</code> closure\n',non-directive
' Normalizes a color in its perceived brightness. ',non-directive
' Returns the name of the preference this field editor operates on.\n\n @return the name of the preference\n',non-directive
' Returns a FontDescriptor that is equivalent to the reciever, but uses\n the given style bits. \n \n',non-directive
'@see org.eclipse.swt.widgets.Text\n ',non-directive
'@param selection the selection\n ',non-directive
'\nProvides support for trim specification. \n<h2>\nPackage Specification</h2>\n<p> This package provides classes for trim widgets.\n',non-directive
?,non-directive
'@return the symbolic font name\n',non-directive
?,non-directive
'<li>extendedMargins(0,0,0,0)</li>\n ',non-directive
'This method fails if the value does not represent a boolean.\n ',non-directive
' Sets or clears the error message.\n ',non-directive
' Sets the name of the selected item preference.\n \n',non-directive
'@param key  the key to look up\n ',non-directive
'@return the first wizard page\n',non-directive
?,non-directive
' Computes the size of the color image displayed on the button.\n ',non-directive
' Vertical spacing (in pixels) between cells in the layouts inside popup\n dialogs (value is 1).\n',non-directive
'@throws IOException\n',non-directive
?,non-directive
'Decorations can optionally show \ndescriptive text when the user hovers over them.  \n',non-directive
'@param indent the indent (in pixels)\n',non-directive
' Interface for containers that can host a wizard. ',non-directive
'@param predicate  the validating predicate\n ',non-directive
'<h3>Command-Line Interface</h3>\n\n<P> \nOn implementations with a command-line interface, an agent is started by\nadding this option to the command-line:\n<blockquote>\n<code><b>-javaagent:</b></code><i>jarpath[</i><code><b>=</b></code><i>options]</i>\n</blockquote>\n<i>jarpath</i> is the path to the agent JAR file.\n',non-directive
' Returns this dialog page\'s title.\n\n @return the title of this dialog page, \n  or <code>null</code> if none\n',non-directive
'Returns the given default value if the \n value does not represent an RGB color value.\n\n ',non-directive
?,non-directive
' Removes a revision listener.\n\n @param listener the listener\n @since 3.3\n',non-directive
'</p>\n\n ',non-directive
'@since 3.0\n',non-directive
'@param key\n            the key\n ',non-directive
' Adds the given field editor to this page.\n\n ',non-directive
?,non-directive
'<p>An algorithm parameter specification is a transparent representation\nof the sets of parameters used with an algorithm. ',non-directive
?,non-directive
'@param yHint\n            vertical hint (pixels), or SWT.DEFAULT to use the control\'s\n            preferred size\n ',non-directive
'\n Construct a new <code>BufferOverflowException</code>.\n \n',non-directive
' A field editor for a file path type preference. ',non-directive
'@param store the preference store\n ',non-directive
' Returns the current value of the double-valued preference with the\n given name.\n Returns the default-default value (<code>0.0</code>) if there\n is no preference with the given name, or if the current value \n cannot be treated as a double.\n\n @param name the name of the preference\n @return the double-valued preference\n',non-directive
?,non-directive
'Converts the boolean <code>value</code> to a string\n and adds the pair <code>key/value</code> to this dialog settings.\n \n',non-directive
' Creates a new RowLayout and attaches it to the given composite. Does not\n create the rowData of any of the controls in the composite.\n \n @param c\n            composite whose layout will be set\n @see #create\n @see RowLayoutFactory\n',non-directive
?,non-directive
'@param map  the map to use\n ',non-directive
?,non-directive
'@since 3.3\n',non-directive
?,non-directive
'The\nvalue of this attribute is the name of the <i>agent class</i>. ',non-directive
'@throws IOException\n',non-directive
?,non-directive
'@param style a bitwise combination of SWT.NORMAL, SWT.ITALIC and SWT.BOLD\n ',non-directive
'If the value is a <code>Number</code> an integer zero value returns\n <code>false</code> and non-zero returns <code>true</code>.\n ',non-directive
'@param reader Reader of the input text\n ',non-directive
'@throws IllegalArgumentException if the either array is null\n ',non-directive
'@see and ',non-directive
'@since 3.1\n',non-directive
'@param name the name of the preference\n ',non-directive
?,non-directive
'<p>\n Null returns true.\n\n ',non-directive
'@since 3.0\n',non-directive
'@return the text control\n',non-directive
'A number of implementations also support the new MapIterator interface that enables\nsimple iteration of map keys and values.\n',non-directive
'@param parent\n            the parent of the field editor\'s control\n ',non-directive
' Returns this field editor\'s label component.\n ',non-directive
'@return <code>true</code> if the field value is valid,\n   and <code>false</code> if invalid\n',non-directive
' Sets the width and height hints. ',non-directive
'<h2>Related Documentation</h2>\n\nFor further documentation, please see:\n<ul>\n  ',non-directive
'A natural key is anything else.</p>\n<p>\nNatural keys are further subdivided into special keys and character keys.\n',non-directive
'@return image the warning image\n',non-directive
'<li><a href=\"../../../technotes/guides/serialization\">Serialization Enhancements</a>\n</ul>\n\n',non-directive
'@see #fillDefaults()\n',non-directive
' Creates a preference node with the given id and preference page. ',non-directive
' Return the <code>Image</code> to be used when displaying a warning.\n \n',non-directive
' Returns <code>true</code> if <code>selection</code> extends to two or more lines,\n <code>false</code> otherwise.\n \n',non-directive
'@return a new GridDataFactory that creates copies of the argument by default\n',non-directive
' Sets the default value of the preference with the given name\n in the given preference store.\n\n ',non-directive
?,non-directive
'<p>The individual preference values are maintained in a <b>preference store</b>\n(<tt>IPreferenceStore</tt>). ',non-directive
'@param methodName  the name of the method\n ',non-directive
'@param section\n            the section to be added\n',non-directive
' The value of the preference when the user wishes to prompted for an\n answer every time the question is to be asked.\n',non-directive
?,non-directive
'@since 3.1\n',non-directive
'@since 3.2\n',non-directive
'@param image\n            desired image to be shown in the ImageAndMessageArea\n',non-directive
' Sets the minimum page size.\n \n',non-directive
?,non-directive
' Button id for an \"Abort\" button (value 7).\n',non-directive
' An interface for a preference page. ',non-directive
'@return the set of keys this manager knows about.  ',non-directive
'@return IPreferencePage\n \n ',non-directive
?,non-directive
'@param label\n            the label text of the field editor\n ',non-directive
' Convenience method to open a simple confirm (OK/Cancel) dialog.\n \n',non-directive
' Informs this field editor\'s listener, if it has one, about a change to\n the value (<code>VALUE</code> property) provided that the old and new\n values are different.\n \n',non-directive
'<tt>PatternRule</tt> defines a pattern-configurable\nrule.\n',non-directive
'@return the default value of the named preference\n',non-directive
' Get the composite that is showing the page.\n\n @return Composite.\n \n @since 3.1\n',non-directive
?,non-directive
?,non-directive
'@param map  the map whose value to look up\n  ',non-directive
'There are two ways to\n use RowLayoutFactory. ',non-directive
?,non-directive
'If the value is a <code>Number</code> an integer zero value returns\n <code>false</code> and non-zero returns <code>true</code>.\n ',non-directive
?,non-directive
' Implements <code>IProgressMonitor.internalWorked</code>.\n @see IProgressMonitor#internalWorked(double)\n',non-directive
'@throws IllegalArgumentException if the closures array is null\n ',non-directive
'</p>\n\n ',non-directive
'A preference page consists of multiple preference fields, which can be\ndisplayed and modified though <b>field editors</b>. ',non-directive
' A concrete implementation of a node in a preference dialog tree. ',non-directive
'<p>\n Null returns false.\n\n ',non-directive
'JFace\n classes make ids by adding to this number.\n',non-directive
'@link #lazySortedMap(SortedMap,Factory)}\n  ',non-directive
?,non-directive
' Removes the given listener from this preference store.\n ',non-directive
?,non-directive
'@param dflt the default value\n ',non-directive
?,non-directive
'@link java.lang.Runnable}.  ',non-directive
'@link #getNumber(Map,Object)}.\n\n ',non-directive
'BigDecimal provides arbitrary-precision signed decimal numbers suitable for\ncurrency calculations and the like.   ',non-directive
'\n\nThe classes and interfaces in this package have been\nsuperseded by classes in the java.security package.\nSee that package and, for example, java.security.Permission for details.\n\n<!--\n<h2>Package Specification</h2>\n\n##### FILL IN ANY SPECS NEEDED BY JAVA COMPATIBILITY KIT #####\n<ul>\n  <li><a href=\"\">##### REFER TO ANY FRAMEMAKER SPECIFICATION HERE #####</a>\n</ul>\n\n<h2>Related Documentation</h2>\n\nFor overviews, tutorials, examples, guides, and tool documentation, please see:\n<ul>\n  <li><a href=\"\">##### REFER TO NON-SPEC DOCUMENTATION HERE #####</a>\n</ul>\n-->\n\n@since JDK1.1\n',non-directive
'<p>\n The Map consists of object keys and Closure values. ',non-directive
?,non-directive
' <p>Returns a new FontDescriptor that is equivalent to the reciever, but\n has the given height.</p>\n \n <p>Does not modify the reciever.</p>\n \n @param height a height, in points\n @return a new FontDescriptor with the height, in points\n @since 3.3\n',non-directive
'@see #open(int, Shell, String, String, int)\n',non-directive
'@return ColorSelector/\n',non-directive
'<li><a href=\"\">##### REFER TO NON-SPEC DOCUMENTATION HERE #####</a>\n</ul>\n',non-directive
'At the end, the list is returned.\n\n ',non-directive
' Image registry key of the default image for wizard pages (value\n <code>\"org.eclipse.jface.wizard.Wizard.pageImage\"</code>).\n',non-directive
?,non-directive
'@since 3.3\n',non-directive
' Adjusts the enable state of the Back, Next, and Finish \n buttons to reflect the state of the currently active \n page in this container.\n ',non-directive
'@return the number of lines touched by <code>selection</code>\n ',non-directive
?,non-directive
'@author Stephen Colebourne\n',non-directive
?,non-directive
' Set whether or not the button is enabled.\n \n @param state\n            the enabled state.\n',non-directive
'@param currentPage\n            the current page. ',non-directive
' Horizontal margin in dialog units (value 7).\n',non-directive
?,non-directive
'<li>\n    <a href=\n      \"{@docRoot}/../technotes/guides/security/crypto/HowToImplAProvider.html\">\n      <b>How to Implement a Provider for the\n      Java<FONT SIZE=-2><SUP>TM</SUP></FONT> Cryptography Architecture\n      </b></a></li>\n</ul>\n\n',non-directive
?,non-directive
'@param data\n            the column layout data\n',non-directive
' \n JFacePreferences is a class used to administer the preferences used by JFace\n objects.\n',non-directive
'@return the size of the leading image, by default <code>0</code> is returned\n ',non-directive
'@return the current value\n ',non-directive
' Enables the content assistant\'s auto insertion mode. ',non-directive
' Sets the name of the file used when loading and storing this preference\n store.\n <p>\n Afterward, the methods <code>load()</code> and <code>save()</code>\n can be used to load and store this preference store.\n </p>\n \n @param name\n            the file name\n @see #load()\n @see #save()\n',non-directive
'<li>FixedSize - ensures that the size of the list cannot change</li>\n',non-directive
'<li>MapBackedSet - a set formed by decorating a Map\n</ul>\n',non-directive
'@param value the RGB color value object\n ',non-directive
'  Looks up the given key in the given map, converting the result into\n  a short, using the default value if the the conversion fails.\n\n  @param map  the map whose value to look up\n  @param key  the key of the value to look up in that map\n  @param defaultValue  what to return if the value is null or if the\n     conversion fails\n  @return  the value in the map as a number, or defaultValue if the\n    original value is null, the map is null or the number conversion\n    fails\n',non-directive
?,non-directive
'@param name the name of the preference\n ',non-directive
?,non-directive
' Minimal interface to a page change provider. ',non-directive
'<h2>Related Documentation</h2>\n\nFor overviews, tutorials, examples, guides, and tool documentation, please see:\n<ul>\n  ',non-directive
' Get the specified {',non-directive
' Gets an int from a Map in a null-safe manner.\n ',non-directive
'@param defaultValue  return if the value is null or if the\n     conversion fails\n ',non-directive
'@param title The displayable name of the action.\n ',non-directive
?,non-directive
'@param parent\n            the parent of the field editor\'s control\n',non-directive
?,non-directive
?,non-directive
' Sets whether this page is complete. \n ',non-directive
' Gets the next <em>key</em> from the <code>Map</code>.\n\n ',non-directive
'Show the blockage and \n forward any actions to blockingMonitor. \n ',non-directive
'@since 2.0\n',non-directive
'@param labelText the label text of the field editor\n ',non-directive
'</p>\n\n ',non-directive
' Gets an empty ordered map iterator.\n <p>\n This iterator is a valid map iterator object that will iterate\n over nothing.\n\n @return  a map iterator over nothing\n',non-directive
' Removes the given listener from this preference store.\n Has no affect if the listener is not registered.\n\n @param listener a property change listener\n',non-directive
' Sets the text in the decorated field which will be displayed in the\n message area.\n \n',non-directive
'@param map  the map to use\n ',non-directive
'@link SubjectControlContextInformationValidator} interface.\n ',non-directive
?,non-directive
' Create a PixelConverter which will convert device-independent units to\n pixels using the specified font.\n \n',non-directive
'</p>\n \n ',non-directive
' Moves the progress indicator to the end.\n',non-directive
' Returns a parent composite for a field editor.\n ',non-directive
'@param proposals the proposals\n',non-directive
'This method fails if the value does not represent font data.\n ',non-directive
?,non-directive
'@return the gray-scale value\n',non-directive
'<h2>Related Documentation</h2>\n\nFor overviews, tutorials, examples, guides, and tool documentation, please see:\n<ul>\n  ',non-directive
?,non-directive
' Set this dialog page\'s title.\n\n ',non-directive
'The following decorators are provided in the package:\n<ul>\n',non-directive
'@param value the value to be converted\n ',non-directive
' Provides labels for <code>IPreferenceNode</code> objects.\n \n @since 3.0\n',non-directive
'@since 3.1 \n\n ',non-directive
'@param title the title of the note\n ',non-directive
'@return the <code>chained</code> closure\n ',non-directive
?,non-directive
?,non-directive
' Returns the subnode of this contribution node with the given node id.\n\n ',non-directive
'<h2>Package Specification</h2>\n\n<ul>\n  ',non-directive
' Create the contents for the receiver.\n \n',non-directive
'@param contentAssistSubjectControl the content assist subject control whose\n           document is used to compute the possible contexts\n ',non-directive
' Set blocked state from the receiver.\n \n',non-directive
' Restores the window enable state saved in this object.\n',non-directive
?,non-directive
?,non-directive
'</p>\n\n ',non-directive
'@return <code>true</code> to indicate the cancel request\n   was accepted, and <code>false</code> to indicate\n   that the cancel request was refused\n',non-directive
'@return the current key\n ',non-directive
'\n Gap between label and control.\n',non-directive
'Convenience method for\n <code>new FileImageDescriptor(location,filename)</code>.\n\n ',non-directive
'@param map  the map whose value to look up\n  ',non-directive
?,non-directive
'<LI>Programmatic updates--using <code>ResultSet</code> updater methods\n  ',non-directive
?,non-directive
' The symbolic font name for the viewer font (value\n <code>\"org.eclipse.jface.viewerfont\"</code>).\n \n',non-directive
'<li>FixedSize - ensures that the size of the map cannot change\n',non-directive
'@param vAlign vertical alignment. ',non-directive
' Creates a scale field editor.\n \n',non-directive
' The <code>WizardPage</code> implementation of this method \n declared on <code>DialogPage</code> updates the container\n if this page is the current page.\n',non-directive
'@link #length()} constant.\n\n ',non-directive
'</p>\n<p>\n<tt>ControlDecoration</tt> can be used to decorate an arbitrary control with \nan image that communicates information about the control\'s content.  ',non-directive
'@see Reader#ready()\n',non-directive
?,non-directive
' Returns the currently selected wizard node within this page.\n \n @return the wizard node, or <code>null</code> if no node is selected\n',non-directive
?,non-directive
'</p>\n\n ',non-directive
?,non-directive
'It is shown when hovering over the cue image or the adapted {',non-directive
?,non-directive
' An exception indicating that a string value could not be\n converted into the requested data type.\n\n ',non-directive
'\nProvides a general framework for creating and managing\nwindows.\n',non-directive
' The label for OK buttons.\n',non-directive
' Gets an enumeration that wraps an iterator.\n\n @param iterator  the iterator to use, not null\n @return a new enumeration\n @throws NullPointerException if iterator is null\n',non-directive
' A map iterator over no elements.\n',non-directive
' Generates layout data to the given control, given the number of cells\n spanned by the control. ',non-directive
'Such information might include\n         detailed tracing on the internal execution of particular subsystems.           \n\n   ',non-directive
' Button id for an \"Ok\" button (value 0).\n',non-directive
'@throws ClassCastException if the iterators collection contains the wrong object type\n',non-directive
'@return the set of FontData associated with this font\n ',non-directive
' Converts the given value into an SWT RGB color value.\n This method fails if the value does not represent an RGB\n color value.\n <p>\n A valid RGB color value representation is a string of the form\n <code><it>red</it>,<it>green</it></code>,<it>blue</it></code> where\n <code><it>red</it></code>, <it>green</it></code>, and \n <code><it>blue</it></code> are valid ints.\n </p>\n\n @param value the value to be converted\n @return the value as an RGB color value\n @exception DataFormatException if the given value does not represent\n\tan RGB color value\n',non-directive
' Saves this preference store to the given output stream. ',non-directive
' Implements <code>IProgressMonitor.internalWorked</code>.\n ',non-directive
?,non-directive
' Returns whether the first progress monitor is the same as, or a wrapper\n around, the second progress monitor.\n \n',non-directive
'@link org.apache.commons.collections.Put Put} and\n{',non-directive
?,non-directive
?,non-directive
'@return an immutable version of the iterator\n',non-directive
'@param map  the map whose value to look up\n  ',non-directive
'@link org.eclipse.jface.contentassist.IContentAssistSubjectControl}.\n\n ',non-directive
'@return the closure\n ',non-directive
'@return whether or not context help is available for this dialog\n',non-directive
?,non-directive
'@return the error message label\n ',non-directive
'@return a text edit describing the operation needed to replace <code>selection</code>\n ',non-directive
'@return a new FontDescriptor\n',non-directive
?,non-directive
' @param completionPosition the completion position\n',non-directive
?,non-directive
'@param <V>\n ',non-directive
'@see #isPageComplete()\n',non-directive
'@param args  the arguments\n ',non-directive
'@since 3.3\n',non-directive
'@param parent the parent of the field editor\'s control\n',non-directive
' An accessor for the current preference store for this dialog.\n \n',non-directive
?,non-directive
?,non-directive
'<li>{',non-directive
'@param key the key\n ',non-directive
'@param w\n            the control\n ',non-directive
' Sets the revision information to be drawn and triggers a redraw.\n\n ',non-directive
' Creates a radio group field editor.  \n ',non-directive
'@param c\n            composite whose layout will be set\n ',non-directive
' Converts the given value into an SWT RGB color value.\n ',non-directive
'@param page\n            the wizard page to use to resize the dialog\n ',non-directive
'@link org.eclipse.jface.text.contentassist.IContextInformationValidator} to\n allow to install a content assistant on the given\n {',non-directive
'<LI>Exceptions\n\t<UL>\n\t  ',non-directive
' Creates a new sticky hover manager.\n\n @param textViewer the text viewer\n',non-directive
?,non-directive
'@return the closure\n',non-directive
?,non-directive
'<li>Unmodifiable - ensures the bag cannot be altered\n',non-directive
' Set the preference store for the receiver.\n \n',non-directive
' Create a new instance of the receiver.\n',non-directive
'@param minH\n            the minimum height\n',non-directive
'\nThis package is a modified copy of <code>org.eclipse.jface.text.contentassist</code> that supports the linked mode proposals.\n',non-directive
'After the current values of\n the preferences have been modified, it is a simple matter to write\n out only those preferences whose values are different from their defaults.\n ',non-directive
'@return the font\n',non-directive
' Set the control for the receiver.\n @param newControl\n',non-directive
'@param proposals the proposals\n',non-directive
' The cursor used in the cancel button;\n',non-directive
?,non-directive
' Creates and returns a new SWT <code>ImageData</code> object\n for this image descriptor.\n ',non-directive
?,non-directive
'@see #applyTo\n',non-directive
?,non-directive
'<p>\n The dialog settings is used to record state between wizard invocations\n (for example, radio button selection, last import directory, etc.)\n </p>\n \n ',non-directive
'@param listener a property change listener\n',non-directive
' Reveals the given region. Offset and length based on the subject\'s\n model (e.g. document).\n\n @param offset the offset of the selection based on the subject\'s model e.g. document\n @param length the length of the selection based on the subject\'s model e.g. document\n',non-directive
' The number of extra pixels taken as horizontal trim by the table column.\n ',non-directive
'<LI><code>DatabaseMetaData</code> interface -- provides information\n              about the database\n\t ',non-directive
'@since 3.5\n',non-directive
' Layout constant (value <code>0</code>) indicating that\n each field editor is handled as a single component.\n',non-directive
' Returns the title bar color for this wizard.\n\n ',non-directive
'@param debugMode\n            <code>true</code> for debug mode, and <code>false</code>\n            for normal mode (the default)\n',non-directive
'@return <code>true</code> if a wizard has been created,\n   and <code>false</code> otherwise\n',non-directive
' Returns the root level nodes of this preference manager.\n \n @return an array containing the root nodes\n @since 3.2\n',non-directive
'@param value the new current value of the preference\n',non-directive
' Creates a new FontDescriptor given the associated FontData\n \n ',non-directive
'@link TableColumn} sizes in a {',non-directive
'@since 3.3\n',non-directive
'This API includes a framework whereby different\ndrivers can be installed dynamically to access different data sources.\n',non-directive
?,non-directive
?,non-directive
'@param prefKey\n            The prefKey to set. ',non-directive
'Paths represent directories or libraries\n                        (commonly referred to as JAR or zip libraries on\n                        many platforms). \t\t\t\n                        ',non-directive
'@param parent\n ',non-directive
'@param store the preference store\n ',non-directive
' @param proposal the completion proposal\n',non-directive
'</ol>\n',non-directive
'Input is provided to matchers via\nthe {',non-directive
'@return a new GridLayoutFactory instance that creates copies of the given layout\n',non-directive
'<li><code>boolean</code> = <code>false</code></li>\n \t',non-directive
'@return image the information image\n',non-directive
'@link #getNumberOfLines()}.\n\n ',non-directive
' Creates a new path field editor \n',non-directive
'This package contains\nan algorithm parameter specification for parameters used with the\nDSA algorithm.\n\n',non-directive
'@see ColorRegistry#get(String)\n ',non-directive
?,non-directive
?,non-directive
' <p>\n Initial values are:\n </p>\n \n <ul>\n ',non-directive
' Converts the given value into a double.\n Returns the given default value if the \n value does not represent a double.\n\n @param value the value to be converted\n @param dflt the default value\n @return the value as a double, or the default value\n',non-directive
?,non-directive
'@return this\n ',non-directive
'@since 3.2\n',non-directive
'@since 3.4\n',non-directive
' Gets a list based on an iterator.\n <p>\n As the wrapped Iterator is traversed, an ArrayList of its values is\n created. At the end, the list is returned.\n\n @param iterator  the iterator to use, not null\n @return a list of the iterator contents\n @throws NullPointerException if iterator parameter is null\n',non-directive
' Set the widths of the columns.\n \n',non-directive
?,non-directive
'@param manager The manager to set.\n \n',non-directive
'@version 1.15, 04/02/10\n',non-directive
'@param value the string to be converted\n ',non-directive
'@param array  the array over which to iterate\n ',non-directive
?,non-directive
'@link #getStartLine()}.\n\n ',non-directive
'@return the width.\n',non-directive
' Creates an empty font registry.\n\n @param display the Display\n',non-directive
'@return the revision hover\n',non-directive
'the cancel lister attached to the cancel component ',non-directive
'<p>\n A <code>Factory</code> creates an object without using an input parameter.\n ',non-directive
'@since 2.0\n',non-directive
?,non-directive
'@since 3.4\n',non-directive
'A standard file \n dialog appears when the user presses the change button.\n',non-directive
?,non-directive
'@param value the rectangle object\n ',non-directive
'@param titleMessage\n            String for the titke\n ',non-directive
' A field editor to edit directory paths.\n',non-directive
'@param symbolicName symbolic color name\n ',non-directive
'<li>span(1,1)</li>\n </ul>\n  ',non-directive
?,non-directive
' Checks to see if there are more entries still to be iterated.\n\n @return <code>true</code> if the iterator has more elements\n',non-directive
?,non-directive
'@version $Revision: 815034 $ $Date: 2009-09-15 07:54:39 +0200 (Tue, 15 Sep 2009) $\n\n ',non-directive
'@link javax.management.ObjectName ObjectName}. \n',non-directive
'<li>NOP - does nothing\n ',non-directive
'@since 3.3\n',non-directive
'@return the number of pixels\n',non-directive
' Sets the image for this dialog.\n \n',non-directive
'@see #DEFAULT\n ',non-directive
' Convenience API. ',non-directive
' An <code>AbstractControlContentAssistSubjectAdapter</code> delegates assistance requests from a\n {@linkplain org.eclipse.jface.text.contentassist.ContentAssistant content assistant}\n to a <code>Control</code>.\n\n A visual feedback can be configured via {@link #setContentAssistCueProvider(ILabelProvider)}.\n\n @since 3.0\n @deprecated As of 3.2, replaced by Platform UI\'s field assist support\n',non-directive
'<p>\n<tt>SourceViewer</tt> supports hyperlinked text regions inline in the displayed text. ',non-directive
'@since 3.2\n',non-directive
'<li>\nan <b>input</b> - the object that serves as the viewer\'s model</li>\n\n',non-directive
'editor.setPreferenceName(\"font\");\n \teditor.load();\n </pre>\n </p>\n\n ',non-directive
'A <code>KeyStroke</code> is\ncomposed of one or more keys held down at the same time.  ',non-directive
?,non-directive
'@return the next line\n ',non-directive
?,non-directive
'<li>CRC-32 checksum is described in RFC 1952 (above)\n<p>\n  ',non-directive
' Gets a Double from a Map in a null-safe manner.\n <p>\n The Double is obtained from the results of {@link #getNumber(Map,Object)}.\n\n @param map  the map to use\n @param key  the key to look up\n @return the value in the Map as a Double, <code>null</code> if null map input\n',non-directive
'@see org.apache.commons.collections.functors.IfClosure\n \n ',non-directive
?,non-directive
'The returned object\n will always throw an {',non-directive
'@param documentOffset an offset within the document for which\n           completions should be computed\n ',non-directive
' Return the Up button.  \n \n',non-directive
?,non-directive
'@return this\n',non-directive
'@see org.eclipse.swt.widgets.Scale#setMaximum(int)\n',non-directive
?,non-directive
' Updates the message (or error message) shown in the message line to \n reflect the state of the currently active page in this container.\n ',non-directive
'@see org.apache.commons.collections.functors.IfClosure\n \n ',non-directive
'<p>\n<!--\n<h2>Package Specification</h2>\n\n##### FILL IN ANY SPECS NEEDED BY JAVA COMPATIBILITY KIT #####\n<ul>\n  ',non-directive
'<h2>Package Specification</h2>\n\n<ul>\n  ',non-directive
'<p>Image descriptors are objects that knows how to create an image on demand.\n',non-directive
' Convenience method that applies the edit returned from {',non-directive
?,non-directive
' Set the value to be used for Scale.setMinumum(int) and update the\n scale.\n \n',non-directive
'@param descriptor RGB value of the color to dispose\n',non-directive
' Creates this field editor\'s main control containing all of its\n basic controls.\n\n ',non-directive
' Creates a new GridLayout and attaches it to the given composite.\n Does not create the GridData of any of the controls in the composite.\n \n @param c composite whose layout will be set\n @see #generateLayout\n @see #create\n @see GridLayoutFactory\n',non-directive
'@since 3.3\n',non-directive
?,non-directive
'@author Matt Benson\n',non-directive
' Creates a selection listener.\n',non-directive
?,non-directive
?,non-directive
' An empty unmodifiable sorted map.\n ',non-directive
'@link #createColor(RGB)}.\n \n',non-directive
' Extends <code>Window.open()</code>. ',non-directive
'@throws IllegalArgumentException if the array is not an array\n ',non-directive
'@since JDK1.0\n',non-directive
'@param key\n            the key.\n ',non-directive
?,non-directive
'@param name the name of the preference\n ',non-directive
' Save a dialog settings to a stream\n \n @param writer\n            a Writer specifying the stream the settings are written in.\n @throws IOException\n',non-directive
' Sets the default page image descriptor for this wizard.\n ',non-directive
'@param name the name of the preference this field editor works on\n ',non-directive
' Converts the given int value to a string.\n ',non-directive
'@return image the question image\n',non-directive
'@return the button\n ',non-directive
'All the supplied closures are Serializable.\n\n ',non-directive
'@param key\n            the key\n ',non-directive
'@since 3.3\n',non-directive
' Convert the given value into an array of SWT font data objects.\n \n',non-directive
'@return an immutable version of the iterator\n',non-directive
' Get the page for the node.\n @param node\n @return IPreferencePage\n \n @since 3.1\n',non-directive
'<p>\n If the value is a <code>Boolean</code> its value is returned.\n ',non-directive
' Returns the current value of the float-valued preference with the\n given name.\n ',non-directive
'@param name\n            the name of the preference this field editor works on\n ',non-directive
' Returns the preferred preview height. \n\n ',non-directive
?,non-directive
'The classes <code>String</code> and\n<code>StringBuffer</code> similarly provide commonly used operations on\ncharacter strings.\n',non-directive
'@return the value in the Map as a long, <code>0L</code> if null map input\n',non-directive
'@link Hunk}s, grouping\n contiguous blocks of lines that are changed (added, deleted).\n\n ',non-directive
?,non-directive
'When the agent is started on the command-line using\nthe <code>-javaagent</code> option then the <code>Premain-Class</code> attribute\nspecifies the name of the agent class and the <code>Agent-Class</code> attribute is\nignored. ',non-directive
' A field editor for a combo box that allows the drop-down selection of one of\n a list of items.\n \n',non-directive
?,non-directive
?,non-directive
' Creates a new GridData instance. All attributes of the GridData instance\n will be initialized by the factory.\n \n @return a new GridData instance\n',non-directive
?,non-directive
' Returns a list of string values corresponding to the given list of keys.\n The lookup is done with <code>getString</code>. The values are in the\n same order as the keys.\n \n @param keys\n            a list of keys\n @return a list of corresponding string values\n',non-directive
'It can be associated with a control or\n a font. ',non-directive
'@return <code>true</code> if this page is complete, and\n  <code>false</code> otherwise\n',non-directive
'<LI>Custom mapping an SQL user-defined type (UDT) to a class in the\n\t  Java programming language\n  <UL>\n\t ',non-directive
?,non-directive
'This class provides a set of \nstatic factory methods to obtain the MXBeans for the Java platform\nto allow an application to access the MXBeans directly.\n\n',non-directive
' Identifier for the Active Hyperlink Colour\n',non-directive
'@exception DataFormatException if the given value does not represent\n\tan RGB color value\n',non-directive
'@return image the error image\n',non-directive
' Button id for a \"Cancel\" button (value 1).\n',non-directive
'@return this\n',non-directive
'<li>{',non-directive
'@return a boolean indicating whether the dialog is \n resizable and should have the default style bits for\n resizable dialogs\n \n ',non-directive
' Identifier for the color used to show label decorations For example in\n \'Foo.txt [1.16]\', the decoration is \'[1.16]\'.\n \n',non-directive
?,non-directive
?,non-directive
'</p>\n\n ',non-directive
'Every reference object provides methods for getting and\nclearing the reference.  ',non-directive
'@exception DataFormatException if the given value does not represent\n\tfont data\n',non-directive
' Disposes of this wizard and frees all SWT resources.\n',non-directive
'@return the top level control\n',non-directive
' Returns whether the current value of the preference with the given name\n has the default value.\n\n @param name the name of the preference\n @return <code>true</code> if the preference has a known default value\n and its current value is the same, and <code>false</code> otherwise\n (including the case where the preference is unknown to this store)\n',non-directive
'@see #getPreferenceStore\n',non-directive
'<!--\n<h2>Package Specification</h2>\n\n##### FILL IN ANY SPECS NEEDED BY JAVA COMPATIBILITY KIT #####\n<ul>\n  ',non-directive
'@param text the new text\n',non-directive
?,non-directive
'@param contentBounds the bounds of the content area of the information control\n ',non-directive
' The <code>PreferencePage</code> implementation of this \n <code>IPreferencePage</code> method returns <code>true</code>\n if the page is valid.\n @see IPreferencePage#okToLeave()\n',non-directive
'<dd>Provide a native-looking, human-readable format for keys.</dd>\n<dt>CompactKeyFormatter</dt>\n',non-directive
' Updates the enabled state of the Apply button to reflect whether \n this page is valid.\n',non-directive
' Clear out the cached color for name. ',non-directive
' Image registry key for question image (value\n <code>\"dialog_question_image\"</code>).\n \n',non-directive
' Saves the current enable/disable state of the given control and its\n descendents in the returned object; the controls are all disabled.\n \n @param w\n            the control\n @return an object capturing the enable/disable state\n',non-directive
'@param imageData The imageData to set.\n ',non-directive
?,non-directive
?,non-directive
' Sets whether help is available for this wizard.\n <p>\n The result of this method is typically used by the container to show or\n hide the Help button.\n </p>\n \n @param b\n            <code>true</code> if help is available, and\n            <code>false</code> if this wizard is helpless\n @see #isHelpAvailable()\n',non-directive
'@throws IndexOutOfBoundsException if the line range is not well-formed\n',non-directive
' Clear the cursors in the dialog.\n \n',non-directive
'@link org.apache.commons.collections.Closure Closure},\n{',non-directive
'@param pageId\n            The identifier for the page\n',non-directive
'<li>exclude(false)</li>\n ',non-directive
'</p>\n\n ',non-directive
'@see org.apache.commons.collections.functors.SwitchClosure\n \n ',non-directive
' The label for open buttons.\n',non-directive
'@param name the name of the preference\n ',non-directive
?,non-directive
' Sets this field editor\'s label text.\n The label is typically presented to the left of the entry field.\n\n @param text the label text\n',non-directive
' Disposes of this wizard and frees all SWT resources.\n',non-directive
' Button id for a \"Deselect All\" button (value 19).\n',non-directive
'<LI> <I>Problem diagnosis by the development organization</I>.\n         ',non-directive
'@param <K>\n ',non-directive
' Sets whether ModalContext is running in debug mode.\n \n',non-directive
'@param previewAreaText the text used for the preview window. ',non-directive
'<P>\nThere are four main target uses of the logs:\n</P>\n\n<OL>\n   ',non-directive
?,non-directive
?,non-directive
' Set the preference store for the receiver.\n \n @param store\n            IPreferenceStore\n',non-directive
' Pack specifies whether all controls in the layout take their preferred\n size. ',non-directive
'\n<p>Provides JFace-specific support for commands.</p>\n\n<h2>Package Specification</h2>\n<p>\nThis package provides a handler that wraps a legacy instance of\n<code>IAction</code>, as well as a manager for associating images with commands.\n',non-directive
'@param parent\n            the parent Shell of the dialog\n',non-directive
' {@inheritDoc}\n \n ',non-directive
' Image registry key of the default image for wizard pages (value\n <code>\"org.eclipse.jface.wizard.Wizard.pageImage\"</code>).\n',non-directive
' Creates a new RowDataFactory that creates copies of the given RowData by\n default.\n \n',non-directive
'@link #getHtml()}\n',non-directive
'@param closure2  the second closure\n ',non-directive
'@see PreferenceStore\n',non-directive
'@return the point-valued preference\n',non-directive
'@param page - the preference page to be shown\n ',non-directive
' Returns the tray currently shown in the dialog, or <code>null</code>\n if there is no tray.\n \n @return the dialog\'s current tray, or <code>null</code> if there is none\n',non-directive
'<p>\nThe following decorators are provided in the package:\n<ul>\n',non-directive
' The label for hide details buttons.\n',non-directive
' Applys the font to the field editors managed by this page.\n',non-directive
' Returns this page\'s name.\n\n ',non-directive
' Sets or clears the container of this wizard.\n\n @param wizardContainer the wizard container, or <code>null</code> \n',non-directive
'@param takeFocusOnOpen\n            A boolean indicating whether focus should be taken by this\n            popup when it opens.\n ',non-directive
?,non-directive
'@see #generateLayout\n ',non-directive
'Use the method <code>setTextLimit</code> to limit the text.\n \n',non-directive
'\nProvides support for trim specification. \n',non-directive
?,non-directive
' An interface used by a preference page to talk to\n its dialog.\n',non-directive
' Null-safe check if the specified map is empty.\n ',non-directive
' Sets the text of the change button.\n\n ',non-directive
'@since 3.0\n',non-directive
'\n\nProvides classes and interfaces for supporting the server\nside of RMI.  ',non-directive
' Identifier for the color used to counter informations For example in\n \'Foo.txt (2 matches)\', the counter information is \'(2 matches)\'.\n \n',non-directive
' Sets the context selector\'s background color.\n\n @param background the background color\n @since 2.0\n',non-directive
' Returns this field editor\'s label text.\n\n @return the label text\n',non-directive
?,non-directive
'@since 3.0\n',non-directive
' Gets a Number from a Map in a null-safe manner.\n ',non-directive
' Converts the given value into a float.\n ',non-directive
'</p>\n\n ',non-directive
'@return the value in the Map as an int, <code>0</code> if null map input\n',non-directive
'<li>margins(5,5)</li>\n ',non-directive
'@param defaultValue\n ',non-directive
' Converts the given value into an SWT rectangle.\n This method fails if the value does not represent a rectangle.\n <p>\n A valid rectangle representation is a string of the form\n <code><it>x</it>,<it>y</it>,<it>width</it>,<it>height</it></code>\n where <code><it>x</it></code>, <code><it>y</it></code>,\n <code><it>width</it></code>, and <code><it>height</it></code>\n are valid ints.\n </p>\n\n @param value the value to be converted\n @return the value as a rectangle\n @exception DataFormatException if the given value does not represent\n\ta rectangle\n',non-directive
'-->\n\n',non-directive
' The label for stop buttons.\n',non-directive
?,non-directive
' Set the layoutData for the messageArea. ',non-directive
'@since 3.1\n',non-directive
?,non-directive
?,non-directive
?,non-directive
'@param name the name of the preference\n ',non-directive
'\n The vertical spacing used by layout styles <code>FLAT</code> \n and <code>GRID</code>.\n',non-directive
' Creates a new field editor.\n',non-directive
'The control will not be permitted\n to shrink below this size. ',non-directive
'<h3>Manifest Attributes</h3>\nThe following manifest attributes are defined for an agent JAR file:\n<blockquote>\n<dl>\n<dt><code>Premain-Class</code></dt>\n',non-directive
'@param value the float value\n ',non-directive
'@param pack\n            the pack status\n ',non-directive
'@param fonts list of fonts\n ',non-directive
'@param value the new current value of the preference\n',non-directive
'@param selectedPage\n            the selected page. ',non-directive
'@see #MessageDialog(Shell, String, Image, String, int, String[], int)\n ',non-directive
?,non-directive
'@param data GridData to copy\n ',non-directive
' Sets the layout data on the given control. ',non-directive
' Adds a new column of data to this table layout.\n \n @param column\n            the column\n \n @param data\n            the column layout data\n',non-directive
'<li><a href=\"\">##### REFER TO NON-SPEC DOCUMENTATION HERE #####</a>\n</ul>\n',non-directive
' Returns the preference store used by this field editor.\n\n ',non-directive
'<p>\n The short is obtained from the results of {',non-directive
?,non-directive
' A map iterator over no elements.\n',non-directive
?,non-directive
'<LI>Retrieving and updating the results of a query\n  <UL>\n\t ',non-directive
?,non-directive
' Gets an immutable version of a {@link MapIterator}. The returned object\n will always throw an {@link UnsupportedOperationException} for\n the {@link Iterator#remove}, {@link MapIterator#setValue(Object)} methods.\n\n @param mapIterator  the iterator to make immutable\n @return an immutable version of the iterator\n',non-directive
?,non-directive
' Convenience method to open a standard information dialog.\n \n',non-directive
'@param defaultIndex\n            the index in the button label array of the default button\n ',non-directive
'@see #load()\n ',non-directive
'<P>\nIf the agent cannot be resolved \n(for example, because the agent class cannot be loaded,\nor because the agent class does not have an appropriate <code>premain</code> method), the JVM will abort.\n',non-directive
'<!--\n<h2>Package Specification</h2>\n\n##### FILL IN ANY SPECS NEEDED BY JAVA COMPATIBILITY KIT #####\n<ul>\n  ',non-directive
'@link java.util.Iterator Iterator} interface.\n',non-directive
' Creates a new FontDescriptor given the an array of FontData that describes \n the font.\n \n @since 3.1\n\n @param data an array of FontData that describes the font (will be passed into\n the Font\'s constructor)\n @return a FontDescriptor that describes the given font\n',non-directive
'@throws IndexOutOfBoundsException if start is less than zero\n ',non-directive
?,non-directive
?,non-directive
'@see FieldEditor#store()\n',non-directive
?,non-directive
' Event object describing a page selection change. ',non-directive
'@link java.lang.management.ManagementFactory#getPlatformMBeanServer\n getPlatformMBeanServer} method.  ',non-directive
' Controls whether the wizard needs Previous and Next buttons even if it\n currently contains only one page.\n ',non-directive
'@return a GridLayoutFactory that creates GridLayouts as though created with\n their default constructor\n ',non-directive
'A registry is a remote object that maps names to remote objects.  ',non-directive
' Creates a new hunk.\n\n ',non-directive
'@return the button box\n',non-directive
' Sets the number of columns in the layout\n \n @param numColumns number of columns in the layout\n @return this\n',non-directive
' Returns whether this page is complete or not.\n <p>\n This information is typically used by the wizard to decide\n when it is okay to finish.\n </p>\n\n @return <code>true</code> if this page is complete, and\n  <code>false</code> otherwise\n',non-directive
' The value of the preference when the user has asked that the answer to\n the question always be \"okay\" or \"yes\".\n',non-directive
'@author  Mandy Chung\n',non-directive
' Defines a functor interface implemented by classes that create objects.\n ',non-directive
'@link Tree}.\n \n',non-directive
' Disposes any remaining resources allocated by this manager. \n',non-directive
'\n<p>Provides JFace-specific support for contexts.</p>\n\n<h2>Package Specification</h2>\n<p>\nThis package provides some context identifiers that have special meaning in the\ncontext of JFace.\n',non-directive
'@see org.eclipse.jface.resource.ResourceManager\n \n ',non-directive
'See\nthe <tt><a href=\"../../../text/revisions/package.html\">org.eclipse.jface.text.revisions</a></tt>\npackage for the API classes implementing the revision model.\n',non-directive
'@link java.lang.management.MemoryManagerMXBean}</tt> </td>\n<td> Memory manager in the Java virtual machine.</td>\n</tr>\n<tr>\n<td> <tt>{',non-directive
' Returns the selection provider.\n\n ',non-directive
'@return the <code>switch</code> closure\n ',non-directive
'Defaults to <code>true</code>\n \n ',non-directive
?,non-directive
?,non-directive
?,non-directive
?,non-directive
?,non-directive
'@since JDK1.5\n@revised 1.6\n\n',non-directive
' Removes from the list all fonts that do not exist in this system.  \n If none are valid, return the first irregardless.  If the list is \n empty return <code>null</code>.\n \n @param fonts the fonts to check\n @param display the display to check against\n @return the list of fonts that have been found on this system\n @since 3.1\n',non-directive
?,non-directive
'<li>exclude(false)</li>\n ',non-directive
'This package also supports\nthe generation and storage of cryptographic public key pairs,\nas well as a number of exportable cryptographic operations\nincluding those for message digest and signature generation.  ',non-directive
' Image registry key for menu image.\n \n',non-directive
'</p>\n ',non-directive
'@param display the display the color is from\n ',non-directive
'<li><a href=\"\">##### REFER TO NON-SPEC DOCUMENTATION HERE #####</a>\n</ul>\n',non-directive
?,non-directive
'@return <code>true</code> if the node was removed,\n  and <code>false</code> otherwise\n',non-directive
'@param progressIndicatorHeight The height of the progress indicator in pixel.\n',non-directive
' {@inheritDoc} This control can handle {',non-directive
' Converts the given value into a float.\n Returns the given default value if the \n value does not represent a float.\n\n @param value the value to be converted\n @param dflt the default value\n @return the value as a float, or the default value\n',non-directive
' Creates a new empty dialog page.\n',non-directive
'<li>HashedMap - general purpose HashMap replacement supporting MapIterator\n',non-directive
'<li><a href=\"\">##### REFER TO NON-SPEC DOCUMENTATION HERE #####</a>\n</ul>\n',non-directive
' Vertical spacing in dialog units (value 4).\n',non-directive
'@param value the new current value of the preference\n',non-directive
?,non-directive
?,non-directive
'@since 3.1 \n\n ',non-directive
' Returns the value that will be used for Scale.setIncrement(int).\n \n',non-directive
?,non-directive
'@param labelText\n            the label text of the field editor\n ',non-directive
?,non-directive
' <p>Returns a previously-allocated resource or allocates a new one if none\n exists yet. ',non-directive
' The minimum width; <code>0</code> pixels by default.\n',non-directive
' Fires a <code>PropertyChangeEvent</code>.\n \n',non-directive
'@see #spacing(int)\n',non-directive
'@param map  the map whose value to look up\n  ',non-directive
' Sets the current value of the double-valued preference with the\n given name.\n ',non-directive
?,non-directive
'<li>\n<tt>PathEditor</tt> - paths</li>\n</ul>\n',non-directive
'</p>\n \n ',non-directive
'@param defaultValue  return if the value is null or if the\n     conversion fails\n ',non-directive
' Creates a new field editor.\n \n',non-directive
'@param key  the key to look up\n ',non-directive
'@since Commons Collections 3.2\n',non-directive
' The <code>PreferencePage</code> implementation of this \n <code>IPreferencePage</code> method returns <code>true</code>\n if the page is valid.\n ',non-directive
'@param location the location to read the resource bundle from\n ',non-directive
' Returns the value of the given key in this dialog settings.\n \n',non-directive
'@see #setTitleLayoutData(Object)\n',non-directive
'@return a new image descriptor\n',non-directive
'@see org.apache.commons.collections.functors.ChainedClosure\n \n ',non-directive
' Create a new section in the receiver and return it.\n \n @param name\n            the name of the new section\n @return the new section\n',non-directive
' A mutator for the preference store to be modified by the toggle button.\n \n @param prefStore\n            The prefStore to set. If this value is <code>null</code>,\n            then no preference will be modified.\n',non-directive
'@param node the node to remove\n ',non-directive
'Otherwise, <code>null</code> is returned.\n\n ',non-directive
' Button id for a \"Finish\" button (value 16).\n',non-directive
' Returns the number of pixels corresponding to the given number of\n horizontal dialog units.\n \n @param dlus\n            the number of horizontal dialog units\n @return the number of pixels\n',non-directive
?,non-directive
' A mutator for the text on the toggle button. The button will\n automatically get updated with the new text, if it exists.\n \n @param message\n            The new text of the toggle button; if it is <code>null</code>,\n            then used the default toggle message.\n',non-directive
'\n\nProvides the management interface for monitoring and management of the \nJava virtual machine as well as the operating system on which the \nJava virtual machine is running.  ',non-directive
' Returns the current value of the point-valued preference with the\n given name in the given preference store.\n Returns the default-default value (<code>POINT_DEFAULT_DEFAULT</code>) \n if there is no preference with the given name, or if the current value \n cannot be treated as a point.\n\n @param store the preference store\n @param name the name of the preference\n @return the point-valued preference\n',non-directive
'@param listener\n            a page changed listener\n',non-directive
'@param value the value to be converted\n ',non-directive
' Returns a FontDescriptor that is equivalent to the reciever, but uses\n the given style bits. \n \n <p>Does not modify the reciever.</p>\n \n @param style a bitwise combination of SWT.NORMAL, SWT.ITALIC and SWT.BOLD\n @return a new FontDescriptor with the given style\n \n @since 3.3\n',non-directive
'Creates a new GridData instance and\n assigns it to the control by calling control.setLayoutData.\n  \n',non-directive
'@return  the value in the map as a number, or defaultValue if the\n    original value is null, the map is null or the number conversion\n    fails\n',non-directive
'</p>\n \n ',non-directive
'Subject to change without notice.\n',non-directive
'@param key  the key to look up\n ',non-directive
' Minimum width of message area in dialog units (value 300).\n',non-directive
' Returns the Device for which this ResourceManager will create resources \n \n ',non-directive
' The default-default value for long preferences (<code>0L</code>).\n',non-directive
?,non-directive
'@since 3.3\n',non-directive
' Moves the range by <code>delta</code> lines, keeping {',non-directive
'default for the menu until the user changed it.\n ',non-directive
'@param display the <code>Display</code> to hook into.\n',non-directive
' Gets an iterator that provides an ordered iteration over the elements\n contained in an array of {',non-directive
?,non-directive
'@since 3.3\n',non-directive
' Returns the Apply button.\n \n',non-directive
'@throws NoSuchElementException if the iteration is finished\n',non-directive
' Updates this dialog\'s controls to reflect the current page.\n',non-directive
?,non-directive
' Creates a new event for the given source and selected page.\n \n @param source\n            the page change provider\n @param selectedPage\n            the selected page. In the JFace provided dialogs this\n            will be an <code>IDialogPage</code>.\n',non-directive
?,non-directive
'@link Iterator}s.\n ',non-directive
?,non-directive
'Menus and\ntools bars are typically populated with contribution items that delegate\nto actions (<tt>ActionContributionItem</tt>).\n',non-directive
'@see SWT#COLOR_LIST_FOREGROUND\n ',non-directive
' Tests whether the given information control is replaceable.\n\n ',non-directive
'This method fails if the value does not represent a long.\n\n ',non-directive
' Creates a new range equal to the passed line range.\n\n ',non-directive
' Returns all the pages in this wizard.\n\n ',non-directive
'@param array  the array over which to iterate\n ',non-directive
' Returns the toggle button.\n \n @return the toggle button\n',non-directive
'@return an array of the iterator contents\n ',non-directive
'@return the wizard\n',non-directive
'@see #getDialogBoundsSettings()\n ',non-directive
'<LI>Since 1.1 or no \"since\" tag -- in the original JDBC 1.0 API and part of\n      the JDK<sup><font size=-2>TM</font></sup>, version 1.1\n</UL>\n',non-directive
'@since JDK1.1\n',non-directive
'<h2>\nPackage Specification</h2>\nA <b>preference manager</b> (class <tt>PreferenceManager</tt>) maintains\na tree of <b>preference nodes</b>. ',non-directive
'@param chars\n            the number of characters\n ',non-directive
'@param shouldExclude true iff the control should be excluded from layouts\n ',non-directive
'@return the font\n',non-directive
'@param max\n            the value used for Scale.setMaximum(int).\n ',non-directive
' Gets an immutable version of a {',non-directive
'<!--\n<h2>Package Specification</h2>\n\n##### FILL IN ANY SPECS NEEDED BY JAVA COMPATIBILITY KIT #####\n<ul>\n  ',non-directive
' Sets the hover later returned by {@link #getHover()}.\n\n @param hover the hover\n',non-directive
'@since 1.5\n\n',non-directive
' Returns the default value for the boolean-valued preference\n with the given name.\n ',non-directive
' Converts the given value into a long.\n ',non-directive
?,non-directive
'It also activates the information control closer.\n\n ',non-directive
'<p> An instance of the {',non-directive
'@param b\n            <code>true</code> if a progress monitor is required, and\n            <code>false</code> if none is needed\n ',non-directive
'@param delta the number of lines to shift the range\n ',non-directive
'<LI>auto java.sql.Driver discovery -- no longer need to load a \n<code>java.sql.Driver</code> class via <code>Class.forName</code>\n ',non-directive
'@return font data like described above\n ',non-directive
' Deallocates anything that was allocated by createFont, given a font\n that was allocated by an equal FontDescriptor.\n \n',non-directive
'@since 3.4\n',non-directive
'@since 3.4\n',non-directive
'The <code>premain</code> methods will be run under the same security and classloader \nrules as the application <code>main</code> method.\n',non-directive
?,non-directive
'@param selection the selection\n ',non-directive
'@return a combination iterator over the iterators\n ',non-directive
?,non-directive
'<li>{',non-directive
' An accessor for the current key of the toggle preference.\n \n',non-directive
'<li><a href=\"\">##### REFER TO ANY FRAMEMAKER SPECIFICATION HERE #####</a>\n</ul>\n\n',non-directive
' Computes the correct dialog size for the current page and resizes its\n shell if nessessary. Also causes the container to refresh its layout.\n \n @param page\n            the wizard page to use to resize the dialog\n @since 2.0\n',non-directive
?,non-directive
'@since 3.1\n',non-directive
' Gets an iterator that iterates through an array of {',non-directive
?,non-directive
' Creates a ColorDescriptor from an existing Color, given the Device associated\n with the original Color. ',non-directive
'@link #getNumber(Map,Object)}.\n\n ',non-directive
?,non-directive
' Provides input for a {@link BrowserInformationControl}.\n\n @since 3.4\n',non-directive
'current blocked status ',non-directive
' Return the DialogPage that the receiver is sending\n updates to.\n \n @return DialogPage or <code>null</code> if it \n has not been set.\n \n @since 3.1\n',non-directive
' Returns the value control for this field editor. ',non-directive
' This class provides a convienient shorthand for creating and initializing\n GridData. This offers several benefits over creating GridData normal way:\n \n <ul>\n <li>The same factory can be used many times to create several GridData instances</li>\n <li>The setters on GridDataFactory all return \"this\", allowing them to be chained</li> \n <li>GridDataFactory uses vector setters (it accepts Points), making it easy to\n     set X and Y values together</li>\n </ul>\n \n <p>\n GridDataFactory instances are created using one of the static methods on this class. \n </p>\n \n <p>\n Example usage:\n </p>\n <code><pre>\n \n ////////////////////////////////////////////////////////////\n // Example 1: Typical grid data for a non-wrapping label\n \n     // GridDataFactory version\n     GridDataFactory.fillDefaults().applyTo(myLabel);\n \n     // Equivalent SWT version\n     GridData labelData = new GridData(GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL);\n     myLabel.setLayoutData(labelData);\n \n ///////////////////////////////////////////////////////////\n // Example 2: Typical grid data for a wrapping label\n \n     // GridDataFactory version\n     GridDataFactory.fillDefaults()\n          .align(SWT.FILL, SWT.CENTER)\n    \t    .hint(150, SWT.DEFAULT)\n    \t    .grab(true, false)\n          .applyTo(wrappingLabel);\n      \n     // Equivalent SWT version\n     GridData wrappingLabelData = new GridData(GridData.FILL_HORIZONTAL | GridData.VERTICAL_ALIGN_CENTER);\n     wrappingLabelData.minimumWidth = 1;\n     wrappingLabelData.widthHint = 150;\n     wrappingLabel.setLayoutData(wrappingLabelData);\n \n //////////////////////////////////////////////////////////////\n // Example 3: Typical grid data for a scrollable control (a list box, tree, table, etc.)\n \n     // GridDataFactory version\n     GridDataFactory.fillDefaults().grab(true, true).hint(150, 150).applyTo(listBox);\n \n     // Equivalent SWT version\n     GridData listBoxData = new GridData(GridData.FILL_BOTH);\n     listBoxData.widthHint = 150;\n     listBoxData.heightHint = 150;\n     listBoxData.minimumWidth = 1;\n     listBoxData.minimumHeight = 1;\n     listBox.setLayoutData(listBoxData);\n \n /////////////////////////////////////////////////////////////\n // Example 4: Typical grid data for a button\n\n     // GridDataFactory version\n     Point preferredSize = button.computeSize(SWT.DEFAULT, SWT.DEFAULT, false);\n     Point hint = Geometry.max(LayoutConstants.getMinButtonSize(), preferredSize);\n     GridDataFactory.fillDefaults().align(SWT.FILL, SWT.CENTER).hint(hint).applyTo(button);\n\n     // Equivalent SWT version\n     Point preferredSize = button.computeSize(SWT.DEFAULT, SWT.DEFAULT, false);\n     Point hint = Geometry.max(LayoutConstants.getMinButtonSize(), preferredSize);\n     GridData buttonData = new GridData(GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_CENTER);\n     buttonData.widthHint = hint.x;\n     buttonData.heightHint = hint.y;\n     button.setLayoutData(buttonData);\n     \n /////////////////////////////////////////////////////////////\n // Example 5: Generated GridData\n\n     // Generates GridData a wrapping label that spans 2 columns\n     GridDataFactory.generate(wrappingLabel, 2, 1);\n     \n     // Generates GridData for a listbox. and adjusts the preferred size to 300x400 pixels\n     GridDataFactory.defaultsFor(listBox).hint(300, 400).applyTo(listBox);\n     \n     // Generates GridData equivalent to example 4\n     GridDataFactory.generate(button, 1, 1);\n          \n </pre></code>\n \n @since 3.2\n',non-directive
'@param activeLine the document line of interest\n ',non-directive
'@param span the new span. ',non-directive
' Creates a new GridDataFactory initialized with the SWT defaults.\n ',non-directive
?,non-directive
' Helper method to construct a <code>FontData</code> from the given string.\n ',non-directive
'@link java.util.SortedMap SortedMap} interfaces.\n',non-directive
'@param name the name of the preference\n ',non-directive
'@param cleanOnDisplayDisposal\n            whether all fonts allocated by this <code>FontRegistry</code>\n            should be disposed when the display is disposed\n ',non-directive
'</p>\n \n ',non-directive
?,non-directive
'\n<p>\nThis package contains implementations of the\n{',non-directive
'In this case the main\n benefit is a more concise syntax and the ability to create more than one\n identical RowLayout from the same factory. ',non-directive
' Return whether the Details button should be included. ',non-directive
?,non-directive
'@param key\n            the resource name\n ',non-directive
'@param toCreate RGB values to create\n ',non-directive
'@return the button corresponding to the button id\n',non-directive
' Returns the value, an array of strings, of the given key in this dialog\n settings.\n \n @param key\n            the key\n @return the array of string, or <code>null</code> if none\n',non-directive
' Return whether or not the receiver has a value for the supplied key.\n \n',non-directive
' The DialogMessageArea is a resusable component for adding an accessible\n message area to a dialog.\n \n',non-directive
' Update the image being displayed on the button using the current color\n setting.\n',non-directive
' Sets the title to be shown in the title area of this dialog.\n \n @param newTitle\n            the title show\n',non-directive
' Converts the given long value to a string.\n ',non-directive
'<li>spacing(LayoutConstants.getSpacing().x</li>\n </ul>\n ',non-directive
'@link Iterator#remove}, {',non-directive
' Escapes any occurrence of \'&\' in the given String so that\n it is not considered as a mnemonic\n character in SWT ToolItems, MenuItems, Button and Labels.\n ',non-directive
' Image registry key for info message image (value\n <code>\"dialog_message_error_image\"</code>).\n \n @since 2.0\n',non-directive
' The symbolic font name for the standard font (value\n <code>\"org.eclipse.jface.defaultfont\"</code>).\n',non-directive
' Update the layout data for a column\n \n ',non-directive
?,non-directive
'@return IterableMap<K, V>\n ',non-directive
'@throws NullPointerException if the map, collection or transformers are null\n',non-directive
?,non-directive
'<dd>An Xemacs-style formatter (e.g., C^x C^x).</dd>\n</dl>\n',non-directive
'@link java.util.Map Map} whose input key/value constraints are\ndifferent than its output key/value constraints.  ',non-directive
'@since 1.2\n',non-directive
' Creates a file field editor.\n \n',non-directive
'<li>numColumns(1)</li>\n ',non-directive
?,non-directive
'@return the default value of the named preference\n',non-directive
' Convenience API. ',non-directive
' Stores this field editor\'s value back into the preference store.\n',non-directive
' Button id for a \"Proceed\" button (value 10).\n',non-directive
?,non-directive
'@param height\n            the page height\n ',non-directive
'At the end, this is converted to an array.\n\n ',non-directive
?,non-directive
?,non-directive
?,non-directive
' Sets whether this page is valid.\n The enable state of the container buttons and the\n apply button is updated when a page\'s valid state \n changes.\n <p>\n\n @param b the new valid state\n',non-directive
' <p>\n Initial values are:\n </p>\n \n <ul>\n ',non-directive
'</pre>\n',non-directive
?,non-directive
'@param name the name of the preference\n ',non-directive
' Get the last known right side width.\n \n',non-directive
'@param spacing space between controls in the layout (pixels)\n ',non-directive
'If null is specified then natural order is used.\n\n ',non-directive
'If set to <code>false</code>, \n help control can still be shown on a per-dialog basis.\n \n',non-directive
?,non-directive
?,non-directive
' Provides utility methods for {@link Enumeration} instances.\n\n @since Commons Collections 3.0\n @version $Id: EnumerationUtils.java 814997 2009-09-15 05:29:56Z bayard $\n\n @author <a href=\"mailto:ggregory@seagullsw.com\">Gary Gregory</a>\n',non-directive
?,non-directive
'@param showDialogMenu\n            A boolean indicating whether a menu for moving and resizing\n            the popup should be provided.\n ',non-directive
?,non-directive
' Undoes everything that was done by a previous call to {',non-directive
'The margins are\n the distance between the outer cells and the edge of the layout.\n \n',non-directive
'<li>ListOrdered - ensures that insertion order is retained-->\n</ul>\n',non-directive
'</p>\nContains everything needed to:\n<ul>\n  ',non-directive
' Returns the Device for which this ResourceManager will create resources \n \n @since 3.1\n\n @return the Device associated with this ResourceManager\n',non-directive
'\n The field editor preference page implementation of a <code>PreferencePage</code>\n method loads all the field editors with their default values.\n',non-directive
?,non-directive
' Set the value to be used for Scale.setPageIncrement(int) and update the\n scale.\n \n',non-directive
' Creates a new exception.\n',non-directive
'</p></li> \n      \n  ',non-directive
'@return the value in the Map as a float, <code>0.0F</code> if null map input\n',non-directive
' Creates a new field editor preference page with the given title,\n image, and style.\n\n ',non-directive
'@param parent The parent to create the radioBox in\n ',non-directive
?,non-directive
'@param value the new default value of the preference\n',non-directive
'<li>\nimage registries (<tt>ImageRegistry</tt>) - for hanging on to the SWT image\nobjects needed by an application</li>\n\n',non-directive
' Constructs an <code>LineIndexOutOfBoundsException</code> with no detail message.\n',non-directive
'<LI><code>SQLOutput</code> interface -- provides methods for writing\n              UDT attributes back to a stream\n  </UL>\n  ',non-directive
'<LI> <I>Problem diagnosis by end users and system administrators</I>. \n          ',non-directive
' Returns the resource bundle for JFace itself. ',non-directive
'<li><code>DirectoryFieldEditor</code> - directories</li>\n   ',non-directive
' Create a new object.\n\n ',non-directive
'@param store the preference store\n ',non-directive
'@param labelText the label text of the field editor\n ',non-directive
' Default control creator.\n',non-directive
?,non-directive
'@param size\n            the page size encoded as <code>new Point(width,height)</code>\n ',non-directive
' Returns the formatted message for the given key in JFace\'s resource\n bundle.\n \n @param key\n            the resource name\n @param args\n            the message arguments\n @return the string\n',non-directive
?,non-directive
' Creates a new exception.\n\n @param message the message\n',non-directive
'@param previouslyCreatedObject an object that was returned by an equal \n descriptor in a previous call to createResource(...).\n',non-directive
' @param listener the proposal listener\n',non-directive
' The dialog area; <code>null</code> until dialog is layed out.\n',non-directive
'The {',non-directive
'@return <code>true</code> if <code>range</code> has the same offset and length as the receiver\n',non-directive
' This registries <code>Display</code>. All colors will be allocated using \n it.\n',non-directive
' A local registry that shares its resources with some global registry.\n ',non-directive
?,non-directive
'</p>\n \n ',non-directive
' Gets the next <em>key</em> from the <code>Map</code>.\n\n @return the next key in the iteration\n @throws NoSuchElementException if the iteration is finished\n',non-directive
'@link Layout} used to maintain\n {',non-directive
'@author Matthew Hawthorne\n ',non-directive
?,non-directive
'@link #create(DeviceResourceDescriptor)}. \n ',non-directive
' Image registry key for info message image (value\n <code>\"dialog_message_error_image\"</code>).\n \n',non-directive
'@param data\n            RowData to copy\n ',non-directive
'<h2>Related Documentation</h2>\n\nFor overviews, tutorials, examples, guides, and tool documentation, please see:\n<ul>\n  ',non-directive
' Creates a new revision painter for a vertical ruler column.\n\n @param column the column that will delegate{@link #paint(GC, ILineRange) painting} to the\n        newly created painter.\n @param sharedColors a shared colors object to store shaded colors in\n',non-directive
'@param l layout to copy\n ',non-directive
'@param pageContainer the parent control\n',non-directive
'This attribute is optional.\n',non-directive
'@exception DataFormatException if the given value does not represent\n\tan int\n',non-directive
'@param colorData an <code>RGB</code> object\n',non-directive
'@param theControl \n ',non-directive
'@param page\n            the new page\n',non-directive
' Creates the resource described by this descriptor\n \n ',non-directive
' Image registry key for help image (value\n <code>\"dialog_help_image\"</code>).\n \n @since 3.2\n',non-directive
' Creates a new RowLayout, and initializes it with values from the factory.\n \n @return a new initialized RowLayout.\n @see #applyTo\n',non-directive
'@return an array of preference names\n',non-directive
'<LI> <I>Formatter</I>: Provides support for formatting LogRecord objects. ',non-directive
' Initialize the field editor with the given preference name and label.\n \n',non-directive
' Button id for a \"Stop\" button (value 6).\n',non-directive
'<LI><code>Statement</code> --  used to send basic SQL statements\n\t ',non-directive
'@return whether the Details button should be included\n ',non-directive
'@return this\n',non-directive
' Creates a copy of the receiver.\n \n @return a copy of the receiver\n',non-directive
'@param blockedName The name of the locked operation.\n ',non-directive
'<code>Hunk</code>s are separated by\n one or more unchanged lines.\n\n ',non-directive
' Constant for the info image, or a simple dialog with the info image and a single OK button (value 2).\n \n @see #MessageDialog(Shell, String, Image, String, int, String[], int)\n @see #open(int, Shell, String, String, int)\n',non-directive
'@since 3.2\n',non-directive
'true if canceled ',non-directive
'@param start  the index to start iterating at\n ',non-directive
'@return the long-valued preference\n',non-directive
'@since 3.1\n\n ',non-directive
'Use the method <code>setTextLimit</code> to limit the text.\n \n',non-directive
?,non-directive
' The TableColumnLayout is the {',non-directive
'<li>Chained - chains two or more closures together\n ',non-directive
?,non-directive
'@param missingResource\n',non-directive
?,non-directive
'@since 3.2\n',non-directive
' Identifier for the color used for the foreground of content assist\n popup dialogs.\n \n',non-directive
'<p>\n The comparator is optional. ',non-directive
' Show the title.\n \n',non-directive
'<li><a href=\"\">##### REFER TO ANY FRAMEMAKER SPECIFICATION HERE #####</a>\n</ul>\n\n',non-directive
'@link java.util.Set Set} and\n{',non-directive
'<li>\n<tt>IWizardContainer</tt> - the outside world from the point of view of\na wizard</li>\n</ul>\n',non-directive
' Checks whether the text input field contains a valid value or not.\n\n ',non-directive
'@param device SWT device on which to allocate the Color\n ',non-directive
' Returns the default font to use for this dialog page.\n \n @return the font\n',non-directive
'@see #spacing(int, int)\n',non-directive
'@param editor the field editor\n',non-directive
'@param out\n            the print writer\n',non-directive
?,non-directive
'@param defaultValue  what to return if the value is null or if the\n     conversion fails\n  ',non-directive
'The control will not be permitted\n to shrink below this size. ',non-directive
'@throws NullPointerException if either iterator is null\n',non-directive
'<li>ListOrdered - ensures that insertion order is retained\n',non-directive
'A Map provides a lookup from a key to a value.\n',non-directive
'@throws IllegalArgumentException if any closure in the array is null\n',non-directive
?,non-directive
?,non-directive
'@return the string\n',non-directive
'@param colorName name of the color\n \n ',non-directive
'@return the value in the Map as a Long, <code>null</code> if null map input\n',non-directive
' Create a new instance of the receiver.\n',non-directive
'@param device device to manage\n',non-directive
?,non-directive
' Set the treeViewer.\n ',non-directive
?,non-directive
' Create the dialog area and the button bar for the receiver.\n \n @param parent\n',non-directive
' Converts a font data array  to a string. The string representation is\n that of asString(FontData) seperated by \';\'\n \n @param value The font data.\n @return The string representation of the font data arra.\n @since 3.0\n',non-directive
'@param dialogButtonLabels\n            an array of labels for the buttons in the button bar\n ',non-directive
' Returns the ok button.\n \n @return the ok button\n',non-directive
?,non-directive
' Get the change control. ',non-directive
'@since 3.5\n',non-directive
' The label for OK buttons.\n',non-directive
' Set blocked state from the receiver.\n \n @param reason\n            IStatus that gives the details\n',non-directive
'@param justify\n            the justify status\n ',non-directive
' Constant for no image (value 0).\n \n',non-directive
' @since 3.5\n',non-directive
' Returns the default dialog margins, in pixels\n \n ',non-directive
'@see #margins(Point)\n ',non-directive
' A listener which is notified when the current page of a multi-page dialog is\n changing. ',non-directive
' Makes the given page visible.\n ',non-directive
' Updates the window title to reflect the state of the current wizard.\n ',non-directive
'<p>\nThese classes are capable of formatting dates, numbers, and messages, parsing;\nsearching and sorting strings; and iterating over characters, words, sentences,\nand line breaks.  ',non-directive
'@throws BadLocationException if accessing the document failed\n',non-directive
' Converts the given double object to a string.\n Equivalent to <code>String.valueOf(value.doubleValue())</code>.\n\n @param value the double object\n @return the string representing the given double value\n',non-directive
' A field editor for an integer type preference.\n',non-directive
'For example: <code>\"no comment\"</code> into an array \n <code>a[0]=\"no\"</code> and <code>a[1]= \"comment\"</code>.\n\n ',non-directive
'@return a button in the dialog\'s button bar\n',non-directive
'An information control usually is a floating\nwindow.\n',non-directive
'@link #createFont(FontDescriptor)}.\n \n',non-directive
'@param listener the listener\n ',non-directive
'@param data contents of the image\n ',non-directive
'<h2>Package Specification</h2>\n<ul>\n  ',non-directive
'@param name the name of the preference\n ',non-directive
' Set the value to be used for Scale.setIncrement(int) and update the\n scale.\n \n @param increment\n            a value greater than 0.\n @see org.eclipse.swt.widgets.Scale#setIncrement(int)\n',non-directive
'Clients\n can use a nested registry to allocate and deallocate resources in the\n global registry. ',non-directive
'@param numColumns the number of columns for the radio button presentation\n ',non-directive
' Returns the Restore Defaults button.\n \n @return the Restore Defaults button\n',non-directive
' Get the button control being wrappered by the selector.\n \n',non-directive
'</p>\n\n ',non-directive
' An accessor for the labels to use on the buttons.\n \n',non-directive
?,non-directive
'This will change the adjusted ranges.\n\n ',non-directive
' Returns this field editor\'s text control.\n <p>\n The control is created if it does not yet exist\n </p>\n\n @param parent the parent\n @return the text control\n',non-directive
'@param id\n            the button id\n ',non-directive
'@param symbolicName the symbolic color name\n ',non-directive
' Copies the given GridLayout instance\n \n ',non-directive
?,non-directive
'</p>\n\n ',non-directive
' Button id for a \"Yes\" button (value 2).\n',non-directive
'@since 3.1\n',non-directive
' Sets the name of the selected item preference. Public equivalent to\n <code>setSelectedNodePreference</code>.\n \n @param pageId\n            The identifier for the page\n @since 3.0\n',non-directive
'\n The margin width used by layout styles <code>FLAT</code> \n and <code>GRID</code>.\n',non-directive
'Default\n preference values are not affected.\n \n',non-directive
?,non-directive
'@link #multiValueMap( Map )}\n  ',non-directive
'@see IProgressMonitor#done()\n',non-directive
'@param labelText the label text of the field editor\n ',non-directive
'@param iterators  the iterators to use, not null or empty or contain nulls\n ',non-directive
'@param key\n            the key.\n ',non-directive
' Returns the wizard that hosts this wizard page.\n\n ',non-directive
'@since 3.5\n',non-directive
' Constructs an image descriptor.\n',non-directive
' Returns the preview control for this field editor.\n\n ',non-directive
' Sets the location of the page so that its origin is in the upper left\n corner.\n \n',non-directive
'@param parent\n            the parent composite\n ',non-directive
?,non-directive
'The margins\n specify the number of pixels of horizontal and vertical margin that will\n be placed along the left/right and top/bottom edges of the layout. ',non-directive
'Other utilities based on Executors include the concrete\nclass {',non-directive
' Creates a ColorDescriptor from an existing color. \n \n',non-directive
' Informs this field editor\'s listener, if it has one, about a change\n to the value (<code>VALUE</code> property) provided that the old and\n new values are different.\n ',non-directive
' Converts the given value into an int.\n ',non-directive
'And finally it shows the first page.\n',non-directive
' Sets the current page.\n @param currentPage\n \n @since 3.1\n',non-directive
?,non-directive
' The default-default value for boolean preferences (<code>false</code>).\n',non-directive
' Returns JFace\'s text font. Convenience method equivalent to\n \n <pre>\n JFaceResources.getFontRegistry().get(JFaceResources.TEXT_FONT)\n </pre>\n \n @return the font\n',non-directive
'@param path the path\n ',non-directive
'<li><a href=\"http://java.sun.com/docs/books/jdbc\">\n<i>JDBC<sup><font size=-2>TM</font></sup>API Tutorial and Reference, \nThird Edition</i></a>--\na complete reference and tutorial for the JDBC 3.0 API\n</ul>\n',non-directive
' Creates an empty preference store.\n ',non-directive
?,non-directive
'@since 3.2\n',non-directive
'@return the number of lines contained in this range\n',non-directive
?,non-directive
' Constructs a new ControlAnimator instance and passes along the\n control that will be displayed or hidden.\n \n',non-directive
'@param text the label text\n',non-directive
'@see #fillDefaults\n',non-directive
?,non-directive
'@param key  the key of the value to look up in that map\n  ',non-directive
?,non-directive
?,non-directive
'@param mapIterator  the iterator to make immutable\n ',non-directive
?,non-directive
'@param iterator1  the first iterators to use, not null\n ',non-directive
'@param nodeId\n            the id to search for.\n ',non-directive
' Returns the current value of the point-valued preference with the\n given name in the given preference store.\n ',non-directive
'the cancel component ',non-directive
'@param key  the key to look up\n ',non-directive
' Gets a Short from a Map in a null-safe manner.\n ',non-directive
?,non-directive
'@since JDK1.1\n',non-directive
' Returns the readable content as string.\n ',non-directive
'<dd>\n                        Boolean (<code>true</code> or <code>false</code>, case irrelevant).\n                        ',non-directive
' Creates an empty preference store.\n <p>\n Use the methods <code>load(InputStream)</code> and\n <code>save(InputStream)</code> to load and store this preference store.\n </p>\n \n @see #load(InputStream)\n @see #save(OutputStream, String)\n',non-directive
' Helper to enable/disable Cancel button for this dialog.\n \n @param b\n            <code>true</code> to enable the cancel button, and\n            <code>false</code> to disable it\n @since 3.0\n',non-directive
'The image can maximally be 5 pixels wide and 8 pixels high.\n     ',non-directive
'@since 3.3\n',non-directive
'<li>CompositeMap - map that combines multiple maps into a single view\n',non-directive
' Gets a Closure that always throws an exception.\n This could be useful during testing as a placeholder.\n\n @see org.apache.commons.collections.functors.ExceptionClosure\n \n @return the closure\n',non-directive
'@return the requested resource. ',non-directive
'\n\nProvides for system input and output through data streams,\nserialization and the file system.\n\n',non-directive
?,non-directive
'@return a newly created FontDescriptor that describes the given font\n',non-directive
'  Looks up the given key in the given map, converting the result into\n  a double, using the default value if the the conversion fails.\n\n  ',non-directive
?,non-directive
'@param parent the parent of the field editor\'s control.\n ',non-directive
' Small indent in dialog units (value 7).\n',non-directive
'This is like a pre-generics\n{',non-directive
' Image registry key for question image (value\n <code>\"dialog_question_image\"</code>).\n \n @deprecated org.eclipse.swt.widgets.Display.getSystemImage(SWT.ICON_QUESTION)\n',non-directive
'For example: <code>\"no comment\"</code> into an array \n <code>a[0]=\"no\"</code> and <code>a[1]= \"comment\"</code>.\n ',non-directive
'</p>\n\n ',non-directive
'@return a newly created FontDescriptor\n',non-directive
?,non-directive
' The label for open buttons.\n',non-directive
?,non-directive
?,non-directive
'@link #getNumber(Map,Object)}.\n\n ',non-directive
?,non-directive
?,non-directive
'@link java.util.Comparator Comparator} interface.\n',non-directive
' Returns a color descriptor for the given RGB values\n @since 3.1 \n\n @param toCreate RGB values to create\n @return a new ColorDescriptor\n',non-directive
'@param value the value to be converted\n ',non-directive
' Adds a listener for page changes in this page change provider. Has no\n effect if an identical listener is already registered.\n \n @param listener\n            a page changed listener\n',non-directive
'@param name the name of the preference this field editor works on\n ',non-directive
' The <code>WizardSelectionPage</code> implementation of \n this <code>IWizardPage</code> method returns the first page \n of the currently selected wizard if there is one.\n',non-directive
'@link org.apache.commons.collections.Predicate Predicate},\n{',non-directive
?,non-directive
?,non-directive
' Returns this dialog page\'s image.\n\n @return the image for this dialog page, or <code>null</code>\n  if none\n',non-directive
' Defines an iterator that operates over an ordered <code>Map</code>.\n <p>\n This iterator allows both forward and reverse iteration through the map.\n\n @param <K> the type of the keys in the map\n @param <V> the type of the values in the map\n @since Commons Collections 3.0\n @version $Revision: 815006 $ $Date: 2009-09-15 07:44:36 +0200 (Tue, 15 Sep 2009) $\n\n @author Stephen Colebourne\n',non-directive
?,non-directive
'@version $Id: EnumerationUtils.java 814997 2009-09-15 05:29:56Z bayard $\n\n ',non-directive
'@param status The {',non-directive
' Convenience API. Converts the double <code>value</code> to a string and\n adds the pair <code>key/value</code> to this dialog settings.\n \n @param key\n            the key.\n @param value\n            the value to be associated with the <code>key</code>\n',non-directive
'<LI>Metadata for parameters of a <code>PreparedStatement</code> object\n  ',non-directive
'@return the first line after this range\n',non-directive
'@param foreground the foreground color\n ',non-directive
?,non-directive
'<li>\nand, finally, setting the viewer\'s input.</li>\n</ul>\n',non-directive
' Gets a list iterator over the end part of an object array.\n\n @param array  the array over which to iterate\n @param start  the index to start iterating at\n @return a list iterator over part of the array\n @throws IndexOutOfBoundsException if start is less than zero\n @throws NullPointerException if array is null\n',non-directive
' Returns the symbolic font name used by this field editor.\n\n ',non-directive
'<li>\n<tt>RadioGroupFieldEditor</tt> - enumerations</li>\n\n',non-directive
' Constructs a new instance of <code>PopupDialog</code>.\n \n',non-directive
' Identifier for the Active Hyperlink Colour\n',non-directive
' Set the page to be the receiver.\n @param dialogPage\n \n @since 3.1\n',non-directive
'@param b <code>true</code> if the empty string is allowed,\n  and <code>false</code> if it is considered invalid\n',non-directive
?,non-directive
'@link #predicatedSortedMap(SortedMap,Predicate,Predicate)}\n  ',non-directive
'<li>Transformed - transforms each element added\n',non-directive
'<li><code>FontFieldEditor</code> - fonts</li>\n   ',non-directive
'Programs can be configured to output logging\n                      for some levels while ignoring output for others.\n   ',non-directive
?,non-directive
'@return a copy of the receiver\n',non-directive
'</p>\n',non-directive
' Property name that signifies the selected color of this\n <code>ColorSelector</code> has changed.\n \n @since 3.0\n',non-directive
'@link java.lang.management.MemoryMXBean}</tt> </td>\n<td> Memory system of the Java virtual machine.</td>\n</tr>\n<tr>\n<td> <tt>{',non-directive
'<li>TreeList - a list that is optimised for insertions and removals at any index in the list</li>\n',non-directive
' Creates a reader that breaks an input text to fit in a given width.\n\n ',non-directive
'</p>\n\n ',non-directive
'@param dflt the default value\n ',non-directive
' The <code>WizardSelectionPage</code> implementation of \n this <code>IWizardPage</code> method returns <code>true</code>\n if there is a selected node.\n',non-directive
'@return the position category\n',non-directive
?,non-directive
'@see #spacing(Point)\n ',non-directive
' Returns the id of this contribution node.\n ',non-directive
'-->\n\n',non-directive
'@author Arron Bates\n ',non-directive
'BigInteger is analogous to Java\'s primitive integer types except that it\nprovides arbitrary precision, hence operations on BigIntegers do not overflow\nor lose precision.  ',non-directive
'@since 3.3\n',non-directive
'This package contains\nthe base window classes:\n<tt>Window</tt> itself, which provides support\nfor a basic windows; and <tt>ApplicationWindow</tt>, which provides ready-to-use\nsupport for a high-level \"main window\" with standard menus, tool bar, and\nstatus line. ',non-directive
'@param location the class whose resource directory contain the file\n ',non-directive
' Implements <code>IProgressMonitor.beginTask</code>.\n @see IProgressMonitor#beginTask(java.lang.String, int)\n',non-directive
'@return the font\n ',non-directive
?,non-directive
'@since 3.5\n',non-directive
'@see #setMinimumPageSize(Point)\n',non-directive
'@param map  the map to use\n ',non-directive
?,non-directive
?,non-directive
'@link #createDropDownList(Composite)} and \n displays details button if there is anything on the display list.\n \n',non-directive
?,non-directive
'-->\n\n',non-directive
?,non-directive
' Returns this field editor\'s current value as an integer.\n\n ',non-directive
'<p>\n This method will handle primitive arrays as well as object arrays.\n ',non-directive
?,non-directive
'The choices are presented as a list of radio buttons.\n',non-directive
' Disposes this image registry, disposing any images\n that were allocated for it, and clearing its entries.\n \n @since 3.1\n',non-directive
?,non-directive
'This attribute is optional, the default is <code>false</code>.\n',non-directive
'@param name os-specific font name\n ',non-directive
'</li>\n </ul>\n ',non-directive
'\n\nClasses for matching character sequences against patterns specified by regular\nexpressions.\n\n',non-directive
?,non-directive
' Return the Up button.  \n \n @return the button\n @since 3.5\n',non-directive
'@since Commons Collections 3.0\n ',non-directive
'@since 3.2\n',non-directive
'<h2>Related Documentation</h2>\n\nFor overviews, tutorials, examples, guides, and tool documentation, please see:\n<ul>\n  ',non-directive
'@param initialSize\n            the initial size of the shell, as returned by\n            <code>getInitialSize</code>.\n ',non-directive
?,non-directive
'-->\n',non-directive
' Opens this message dialog, creating it first if it has not yet been created.\n ',non-directive
'@param parentShell\n            the parent shell\n ',non-directive
'Dynamic control allows for updates to the \nlogging configuration within a currently running program. ',non-directive
' Saves the non-default-valued preferences known to this preference\n store to the file from which they were originally loaded.\n\n ',non-directive
'A <code>factor</code> of 1.0 will produce a\n color equal to <code>fg</code>, while a <code>factor</code> of 0.0 will produce one\n equal to <code>bg</code>.\n ',non-directive
?,non-directive
'<p>\n As the wrapped Iterator is traversed, an ArrayList of its values is\n created. ',non-directive
?,non-directive
?,non-directive
?,non-directive
?,non-directive
'@since 3.5\n',non-directive
'@param key\n            the resource name\n ',non-directive
?,non-directive
?,non-directive
'@param name the name of the preference\n ',non-directive
' Sets the size of all pages. The given size takes precedence over computed\n sizes.\n \n @param size\n            the page size encoded as <code>new Point(width,height)</code>\n @see #setPageSize(int,int)\n',non-directive
'@param minY minimum a value of 1 or more is a vertical size of the control (pixels). ',non-directive
'<p>\nThe following decorators are provided:\n<ul>\n',non-directive
'By changes the various\nproperties of the manager, the active bindings will change.  ',non-directive
'current blocked status ',non-directive
?,non-directive
'@param bg the background color\n ',non-directive
'@see #load(InputStream)\n ',non-directive
'@see org.eclipse.core.runtime.IProgressMonitorWithBlocking#clearBlocked()\n ',non-directive
?,non-directive
?,non-directive
'\n The margin width used by layout styles <code>FLAT</code> \n and <code>GRID</code>.\n',non-directive
'@param listener\n            a page changing listener\n ',non-directive
?,non-directive
'@return the string\n',non-directive
'It contains support for X.509 v3 \ncertificates and X.509 v2 CRLs.\n\n',non-directive
' Returns the font in JFace\'s font registry with the given symbolic font\n name. ',non-directive
'This could be useful during testing as a placeholder.\n\n ',non-directive
'-->\n\n',non-directive
' Creates a new change region for the given revision and line range.\n\n @param revision the revision of the new region\n @param lines the line range of the new region\n @throws IndexOutOfBoundsException if the line range is not well-formed\n',non-directive
' Adds a listener for page changes to the list of page changing listeners\n registered for this dialog. ',non-directive
' Gets a long from a Map in a null-safe manner,\n using the default value if the the conversion fails.\n <p>\n The long is obtained from the results of {@link #getNumber(Map,Object)}.\n\n @param map  the map to use\n @param key  the key to look up\n @param defaultValue  return if the value is null or if the\n     conversion fails\n @return the value in the Map as a long, <code>defaultValue</code> if null map input\n',non-directive
' Runs this operation.  ',non-directive
'@return the global resource manager for the given display\n',non-directive
'@return this\n',non-directive
'@see #setMinimumPageSize(int,int)\n',non-directive
' Removes the given listener from this registry. Has no affect if the\n listener is not registered.\n \n @param listener a property change listener\n',non-directive
' The default-default value for float preferences (<code>0.0f</code>).\n',non-directive
?,non-directive
' An interface for a preference page. This interface\n is used primarily by the page\'s container \n',non-directive
'@link #multiValueMap( Map, Factory )}\n  </ul>\n\n ',non-directive
'@return the background Color for widgets that display errors.\n ',non-directive
?,non-directive
'@param iterator  the iterator to use, not null\n ',non-directive
' Returns this field editor\'s list control.\n\n ',non-directive
?,non-directive
'@param helpAvailable whether or not context help is available for the dialog\n',non-directive
' @param parent\n            the SWT parent for the tree area controls.\n @return the new <code>Control</code>.\n @since 3.0\n',non-directive
'<p>\nA <tt>ContentProposalAdapter</tt> can be attached to an arbitrary control to provide \na popup showing content proposals.  ',non-directive
' Creates a new list field editor \n',non-directive
'@see #swtDefaults()\n',non-directive
'@return a text edit describing the operation needed to delete <code>selection</code>\n ',non-directive
'@param blocking The monitor to forward to. ',non-directive
?,non-directive
' Returns the page change provider that is the source of this event.\n \n',non-directive
'@param bounds shell bounds to crop\n',non-directive
'@param key  the key of the value to look up in that map\n  ',non-directive
?,non-directive
?,non-directive
'@author Paul Jack\n ',non-directive
' Old text value.\n ',non-directive
' Returns the label control. \n\n @return the label control, or <code>null</code>\n  if no label control has been created\n',non-directive
' Returns the wizard\'s shell if the wizard is visible. Otherwise\n <code>null</code> is returned.\n \n @return Shell\n',non-directive
' Returns whether the next page could be displayed.\n\n @return <code>true</code> if the next page could be displayed,\n   and <code>false</code> otherwise\n',non-directive
'@param margins margin size (pixels)\n ',non-directive
?,non-directive
' Updates this dialog\'s controls to reflect the current page.\n',non-directive
' Creates a new wizard selection page with the given name, and\n with no title or image.\n\n @param pageName the name of the page\n',non-directive
'@param length the length of the selection based on the subject\'s model e.g. ',non-directive
' Enables showing the revision author.\n\n ',non-directive
' Button id for a \"Details\" button (value 13).\n',non-directive
' Creates an integer field editor.\n \n @param name the name of the preference this field editor works on\n @param labelText the label text of the field editor\n @param parent the parent of the field editor\'s control\n',non-directive
' Returns all the sections in this dialog settings.\n \n',non-directive
'@param descriptor identifier for the requested resource\n ',non-directive
'@see PageChangedEvent\n \n ',non-directive
'@param theControl\n ',non-directive
' Converts the given double value to a string.\n ',non-directive
'@since 3.5\n',non-directive
' Creates a new dialog page with the given title.\n \n @param title\n            the title of this dialog page, or <code>null</code> if none\n',non-directive
' Indent in dialog units (value 21).\n',non-directive
' Sets the minimum page size.\n \n',non-directive
'<p>\n The String is obtained via <code>toString</code>.\n\n ',non-directive
'@param offset the document offset for which the information\n           has been computed\n',non-directive
' Creates a new field editor preference page with the given style,\n an empty title, and no image.\n\n @param style either <code>GRID</code> or <code>FLAT</code>\n',non-directive
'@since 2.0\n ',non-directive
?,non-directive
?,non-directive
?,non-directive
' Sets the title bar color for this dialog.\n \n',non-directive
?,non-directive
'</p>\n',non-directive
?,non-directive
?,non-directive
' Returns the wizard page with the given name belonging to this wizard.\n\n @param pageName the name of the wizard page\n @return the wizard page with the given name, or <code>null</code> if none\n',non-directive
'<li><code>getImage(Object)</code> provides the visual cue image.\n     ',non-directive
'</pre>\n',non-directive
'@link NumberFormat#parse(String)} on the system default formatter\n returning <code>null</code> if the conversion fails.\n ',non-directive
'\n The preference page implementation of an <code>IPreferencePage</code>\n method returns whether this preference page is valid. ',non-directive
?,non-directive
' Sets the context information popup\'s foreground color.\n\n @param foreground the foreground color\n @since 2.0\n',non-directive
?,non-directive
'@link #lazyMap(Map,Factory)}\n  ',non-directive
' Initializes this field editor with the preference value from\n the preference store.\n',non-directive
'Otherwise, <code>null</code> is returned.\n\n ',non-directive
' Sets or clears the error message for this page.\n \n',non-directive
'<li>align(SWT.BEGINNING, SWT.CENTER)</li>\n ',non-directive
?,non-directive
?,non-directive
' Sets whether this page is valid.\n ',non-directive
' Returns the toggle button.\n \n',non-directive
'@return the initial location of the shell\n \n ',non-directive
'\n\nProvides library support for the Java programming language annotation facility.\n\n@version  1.2, 04/02/10\n@author\t  Josh Bloch\n@since\t  1.5\n\n',non-directive
' type specifies whether the layout places controls in rows or columns.\n \n Possible values are:\n <ul>\n <li>HORIZONTAL: Position the controls horizontally from left to right</li>\n <li>VERTICAL: Position the controls vertically from top to bottom</li>\n </ul>\n \n @param type\n            One of SWT.HORIZONTAL or SWT.VERTICAL\n @return this\n \n @throws IllegalArgumentException\n             if type is not one of HORIZONTAL or VERTICAL\n',non-directive
' Thrown when allocation of an SWT device resource fails\n \n @since 3.1\n',non-directive
' Sets the title image to be shown in the title area of this dialog.\n \n @param newTitleImage\n            the title image to be shown\n',non-directive
'@see IPageChangeProvider\n ',non-directive
?,non-directive
'</p>\n \n ',non-directive
?,non-directive
' Button id for a \"No\" button (value 3).\n',non-directive
?,non-directive
?,non-directive
'This attribute is optional, the default is <code>false</code>.\n',non-directive
'A scheme is a grouping of bindings.\n',non-directive
'The static factory methods in the <tt>ManagementFactory</tt> class will\nreturn the MBeans with the platform extension.\n\n',non-directive
' Returns the button created when <code>createButton</code> is called\n with an ID of <code>IDialogConstants.CANCEL_ID</code>. ',non-directive
'@param parent the parent of the field editor\'s control\n',non-directive
'@return this\n',non-directive
'@return the value in the Map as a Float, <code>null</code> if null map input\n',non-directive
'<LI><code>BatchUpdateException</code> -- thrown to indicate that not all\n\t\t commands in a batch update executed successfully\n\t</UL>\n',non-directive
' Image registry key for error image (value\n <code>\"dialog_error_image\"</code>).\n \n',non-directive
?,non-directive
' Gets the previous <em>key</em> from the <code>Map</code>.\n\n ',non-directive
'A key stroke ends\nwhen the keys are released.  ',non-directive
'@param iterator1  the first iterators to use, not null\n ',non-directive
'@see StringButtonFieldEditor#VALIDATE_ON_FOCUS_LOST\n',non-directive
' Gets from a Map in a null-safe manner.\n\n ',non-directive
' Checks to see if there is a previous entry that can be iterated to.\n\n ',non-directive
?,non-directive
'<p>A data type used by the MXBean interfaces are mapped to\nan open type when being accessed via MBeanServer interface.\n',non-directive
'@param data\n ',non-directive
'@since 3.1\n',non-directive
' A custom implementation of the <code>IContentAssistant</code> interface.\n ',non-directive
' Fires a property change event corresponding to a change to the\n current value of the preference with the given name.\n ',non-directive
'@param parent\n            the parent of the field editor\'s control\n ',non-directive
'@param enabled The enabled state.\n ',non-directive
'@param parentShell\n            the parent shell of the dialog, or <code>null</code> if none\n ',non-directive
' Set the value to be used for Scale.setMinumum(int) and update the\n scale.\n \n @param min\n            a value greater than 0.\n @see org.eclipse.swt.widgets.Scale#setMinimum(int)\n',non-directive
'@since 3.4\n',non-directive
' Breaks out space-separated words into an array of words.\n For example: <code>\"no comment\"</code> into an array \n <code>a[0]=\"no\"</code> and <code>a[1]= \"comment\"</code>.\n\n @param value the string to be converted\n @return the list of words\n @throws DataFormatException thrown if request string could not seperated\n',non-directive
' Create a new instance of the reciever.\n',non-directive
' Apply the data to the receiver. By default do nothing.\n @param data\n @since 3.1\n',non-directive
' An ordered map iterator over no elements.\n',non-directive
'<p>\n As the wrapped Iterator is traversed, an ArrayList of its values is\n created. ',non-directive
'@see IRunnableContext\n',non-directive
' Sets the current value of the preference with the given name\n in the given preference store.\n\n ',non-directive
' Sets the text in the decorated field which will be displayed in the\n message area.\n \n @param text\n            the text to be displayed in the message area\n \n @see org.eclipse.swt.widgets.Text#setText(String string)\n',non-directive
'@return a new initialized RowLayout.\n ',non-directive
'<h2>Package Specification</h2>\n\n<P> \nAn agent is deployed as a JAR file. ',non-directive
'@see #margins(int, int)\n',non-directive
' Clear the cursors in the dialog.\n \n @since 3.0\n',non-directive
'@param value the value to be converted\n ',non-directive
'@param store the preference store\n ',non-directive
'The source of the event is this registry; the\n property name is the symbolic color name.\n ',non-directive
' Returns an RGB that lies between the given foreground and background\n colors using the given mixing factor. ',non-directive
' Clears the normal message from the message line.\n',non-directive
'But {',non-directive
'@return this\n',non-directive
' Creates a new empty dialog page.\n',non-directive
' Create the progress monitor part in the receiver.\n \n',non-directive
'The\n dialog\'s size will be adjusted to accomodate the tray.\n \n',non-directive
'@exception DataFormatException if the given value does not represent\n\ta float\n',non-directive
?,non-directive
'@param processor the processor to be used for validation\n',non-directive
' The <code>WizardSelectionPage</code> implementation of \n this <code>IWizardPage</code> method returns <code>true</code>\n if there is a selected node.\n',non-directive
' Interface for a wizard page.\n ',non-directive
'@link #start()} constant.\n\n ',non-directive
?,non-directive
?,non-directive
'@since 3.0\n',non-directive
' Gets an array based on an iterator.\n ',non-directive
' Sets the default value of the preference with the given name\n in the given preference store.\n\n ',non-directive
' The label for next buttons.\n',non-directive
?,non-directive
'@param parent - the composite to parent the page\n \n ',non-directive
'<li><a href=\"{@docRoot}/../technotes/tools/index.html\">JDK Tools and Utilities</a>\n</ul>\n\n',non-directive
' A content assist subject control can request assistance provided by a\n {',non-directive
'@param name the name of the preference\n ',non-directive
'@author Mike McCloskey\n',non-directive
' Sets the preference page in which this field editor\n appears.\n\n ',non-directive
'The margins\n specify the number of pixels of horizontal and vertical margin that will\n be placed along the left/right and top/bottom edges of the layout. ',non-directive
' Reads the supplied string and returns its corresponding\n FontData. ',non-directive
?,non-directive
?,non-directive
' (non-Javadoc)\n \n ',non-directive
?,non-directive
'@link org.apache.commons.collections.Transformer Transformer} and\n{',non-directive
' Convenience API. ',non-directive
'Is the ability to redefine classes\n                        needed by this agent.\n                        ',non-directive
' Creates a factory that creates copies of the given layout.\n \n',non-directive
'@throws NullPointerException if iterators array is null or contains a null\n',non-directive
'@param property The property that is being updated\n ',non-directive
'@link ILineDiffer} into {',non-directive
' The symbolic font name for the banner font (value\n <code>\"org.eclipse.jface.bannerfont\"</code>).\n',non-directive
' The default-default value for String preferences (<code>\"\"</code>).\n',non-directive
?,non-directive
'@link javax.management.openmbean.OpenType OpenType}.\n       ',non-directive
' Gets the dialog settings that should be used for remembering the bounds of\n of the dialog, according to the dialog bounds strategy.\n \n',non-directive
?,non-directive
?,non-directive
'<li><a href=\"\">##### REFER TO ANY FRAMEMAKER SPECIFICATION HERE #####</a>\n</ul>\n\n',non-directive
'@param key  the key to look up\n ',non-directive
'@param <V>\n ',non-directive
' Sets the document partitioning this content assistant is using.\n\n @param partitioning the document partitioning for this content assistant\n',non-directive
'@param shell the shell\n',non-directive
' Returns the number of pixels corresponding to the given number of\n horizontal dialog units.\n \n',non-directive
' Returns whether this field editor currently presents the\n default value for its preference.\n \n',non-directive
'@param orientation the popup\'s orientation\n',non-directive
'@param width\n            the page width\n ',non-directive
'@return the value as a boolean, or the default value\n',non-directive
?,non-directive
' Creates a file field editor.\n \n',non-directive
?,non-directive
' The label for cancel buttons.\n',non-directive
'<P>\nClasses, interfaces, methods, fields, constructors, and exceptions \nhave the following \"since\" tags that indicate when they were introduced \ninto the Java platform. ',non-directive
'The following snippet shows an example template for\nan instance check in Java:<br>\n<pre>if (${name} instanceof ${type}) {\n&nbsp;&nbsp;&nbsp; ${type} ${new_name} = (${type})${name};\n&nbsp;&nbsp;&nbsp; ${cursor}\n}\n</pre>\nIn this template, the variables (<tt>name,type, ...</tt>) are resolved\nwhen inserted into java source and changing one variable instance will\nalso change the other. ',non-directive
'@param map  the map whose value to look up\n  ',non-directive
'@param value the new default value for the preference\n',non-directive
' The TreeColumnLayout is the {',non-directive
'<h2>\nPackage Specification</h2>\n<tt>IInformationPresenter</tt> defines the concept of an information provider.\n',non-directive
' Gets an iterator that provides an iterator view of the given enumeration\n that will remove elements from the specified collection.\n\n ',non-directive
'@param pmlayout\n ',non-directive
'Three types of reference objects are provided, each weaker than the\nlast: <em>soft</em>, <em>weak</em>, and <em>phantom</em>.  ',non-directive
' Message type constant used to display an info icon with the message.\n \n',non-directive
'@param msg the message\n',non-directive
?,non-directive
?,non-directive
' The label for yes buttons.\n',non-directive
'@see Display#getSystemColor(int)\n',non-directive
'@param map  the map to use\n ',non-directive
' Gets a float from a Map in a null-safe manner,\n using the default value if the the conversion fails.\n <p>\n The float is obtained from the results of {@link #getNumber(Map,Object)}.\n\n @param map  the map to use\n @param key  the key to look up\n @param defaultValue  return if the value is null or if the\n     conversion fails\n @return the value in the Map as a float, <code>defaultValue</code> if null map input\n',non-directive
'{',non-directive
' Returns the resource object with the given key in JFace\'s resource\n bundle. If there isn\'t any value under the given key, the key is\n returned.\n \n @param key\n            the resource name\n @return the string\n',non-directive
'@param range the range to copy\n ',non-directive
?,non-directive
' Pre-order traversal means visit the root first,\n then the children.\n',non-directive
'An information provider presents information for a certain subject in a\nspecific information control. ',non-directive
' Button id for a \"Skip\" button (value 5).\n',non-directive
' Returns the preference mananger used by this preference dialog.\n \n @return the preference mananger\n',non-directive
' Convenience API. ',non-directive
'@throws IllegalArgumentException if either closure is null\n',non-directive
'<h2>Related Documentation</h2>\n\nFor further documentation, please see:\n<ul>\n  ',non-directive
?,non-directive
' Button id for a \"Yes to All\" button (value 4).\n',non-directive
' Changes the rendering mode and triggers redrawing if needed.\n\n @param renderingMode the rendering mode\n @since 3.3\n',non-directive
'@param column\n            the column\n ',non-directive
?,non-directive
?,non-directive
?,non-directive
'@since 3.2\n',non-directive
'@return the node id\n',non-directive
' A content assist subject control can request assistance provided by a\n {@linkplain org.eclipse.jface.contentassist.ISubjectControlContentAssistant subject control content assistant}.\n\n @since 3.0\n',non-directive
' {@inheritDoc}\n \n ',non-directive
'<li><a href=\n    \"{@docRoot}/../technotes/guides/security/crypto/HowToImplAProvider.html\">\n    <b>How to Implement a Provider for the\n    Java<FONT SIZE=-2><SUP>TM</SUP></FONT> Cryptography Architecture\n    </b></a></li>\n</ul>\n\n',non-directive
' Returns this field editor\'s current value as an integer.\n\n @return the value\n @exception NumberFormatException if the <code>String</code> does not\n   contain a parsable integer\n',non-directive
'@since 3.3\n',non-directive
' Returns the wizard that hosts this wizard page.\n\n @return the wizard, or <code>null</code> if this page has not been\n   added to any wizard\n @see #setWizard\n',non-directive
'@return the font\n',non-directive
?,non-directive
?,non-directive
' Removes the subnode of this preference node with the given node id.\n\n @param id the subnode id\n @return the removed subnode, or <code>null</code> if none\n',non-directive
?,non-directive
?,non-directive
?,non-directive
' Converts the given value into an SWT font data object.\n ',non-directive
'@see #swtDefaults\n',non-directive
?,non-directive
'@return the default color to use for displaying active hyperlinks.\n ',non-directive
'</p>\n\n ',non-directive
' Set the layoutData for the title area. In most cases this will be a copy\n of the layoutData used in setMessageLayoutData.\n \n @param layoutData\n            the layoutData for the title\n @see #setMessageLayoutData(Object)\n',non-directive
' Button id for a \"No to All\" button (value 21).\n',non-directive
' Returns the Color described by this descriptor.\n \n',non-directive
' The default-default value for <code>FontData[]</code> preferences.\n',non-directive
'@return <code>true</code> if the given thread is running a modal\n         context, <code>false</code> if not\n',non-directive
'@param data\n            RowData to copy\n ',non-directive
'@param dflt the default value\n ',non-directive
'@return the string representing the given float\n',non-directive
?,non-directive
?,non-directive
'@throws BadLocationException if accessing the document failed\n',non-directive
' Returns the text covered by <code>selection</code>\n \n ',non-directive
'@return the new label\n',non-directive
?,non-directive
' Gets the previous <em>key</em> from the <code>Map</code>.\n\n @return the previous key in the iteration\n @throws NoSuchElementException if the iteration is finished\n',non-directive
'@param minHeight\n            the minimum page height\n ',non-directive
'In this case the main benefit is a more concise syntax and the ability to create more\n than one identical GridLayout from the same factory. ',non-directive
?,non-directive
'</p>\n\n ',non-directive
?,non-directive
'-->\n\n',non-directive
' Fill specifies whether the controls in a row should be all the same\n height for horizontal layouts, or the same width for vertical layouts.\n \n',non-directive
' Gets a Float from a Map in a null-safe manner.\n ',non-directive
' The label for skip buttons.\n',non-directive
'</p>\n',non-directive
' <p>\n Moved into this package from <code>org.eclipse.jface.internal.text.revisions</code>.</p>\n',non-directive
' Returns the current wizard page for this container.\n\n ',non-directive
'@param showDialogMenu\n            A boolean indicating whether a menu for moving and resizing\n            the popup should be provided.\n ',non-directive
?,non-directive
?,non-directive
'@param filename\n            the file name\n ',non-directive
'@param value the new current value of the preference\n',non-directive
?,non-directive
'<li>Unmodifiable - ensures the map cannot be altered\n<!--\n',non-directive
' Creates a ProgressMonitorPart.\n @param parent The SWT parent of the part.\n @param layout The SWT grid bag layout used by the part. A client\n can supply the layout to control how the progress monitor part\n is layed out. If null is passed the part uses its default layout.\n',non-directive
'Multi-page dialogs are made easier through the use of dialog pages (<tt>IDialogPage</tt>,\n<tt>DialogPage</tt>).\n',non-directive
?,non-directive
?,non-directive
'@param name the name of the preference this field editor works on\n ',non-directive
' Runnable that cleans up the manager on disposal of the display.\n',non-directive
'<h2>Package Specification</h2>\n\nThe <code>java.util.jar</code> package is based on the following specifications:\n<ul>\n  ',non-directive
' Create an empty dialog settings which loads and saves its\n content to a file.\n ',non-directive
?,non-directive
' Gets from a Map in a null-safe manner.\n\n @param map  the map to use\n @param key  the key to look up\n @return the value in the Map, <code>null</code> if null map input\n',non-directive
?,non-directive
'@return the value in the Map as a long, <code>defaultValue</code> if null map input\n',non-directive
'@throws NoSuchElementException if the iteration is finished\n',non-directive
'@throws BadLocationException if accessing the document failed\n',non-directive
'<p>This package also contains <tt>WindowManager</tt>, instance of which\nare used for managing a group of windows. ',non-directive
' The symbolic font name for the text font (value\n <code>\"org.eclipse.jface.textfont\"</code>).\n',non-directive
'@param control\n            control whose layout data will be initialised\n',non-directive
' Sets the GridData span. The span controls how many cells\n are filled by the control. \n \n @param hSpan number of columns spanned by the control\n @param vSpan number of rows spanned by the control\n @return this\n',non-directive
' Creates a factory that creates copies of the given layout.\n \n @param layout\n            layout to copy\n @return a new RowLayoutFactory instance that creates copies of the given\n         layout\n',non-directive
'@since 3.0\n',non-directive
'@see #margins(int, int)\n',non-directive
'@param contentAssistSubjectControl the content assist subject control\n ',non-directive
' Returns the image descriptor for this node.\n \n @return the image descriptor\n',non-directive
'@param labelText the label text of the field editor\n ',non-directive
' Sets the current value of the preference with the given name\n in the given preference store.\n\n @param store the preference store\n @param name the name of the preference\n @param value the new current value of the preference\n',non-directive
'<p>\n Standard implementations of common transformers are provided by\n {',non-directive
'<p>\nThe following decorators are provided:\n<ul>\n',non-directive
?,non-directive
'-->\n\n',non-directive
?,non-directive
?,non-directive
'</p>\n \n ',non-directive
'@return the <code>while</code> closure\n ',non-directive
' Creates a new exception.\n',non-directive
'@since 3.5\n',non-directive
?,non-directive
'Content assist supports the user in writing&nbsp; by proposing context\nsensitive completions at a given position. ',non-directive
?,non-directive
'@param labelText\n            the label text of the field editor\n ',non-directive
?,non-directive
'@throws ClassCastException if the arrayClass is invalid\n',non-directive
?,non-directive
'<P>\n<h2>What the JDBC<sup><font size=-2>TM</font></sup> 4.0 API Includes</h2>\nThe JDBC<sup><font size=-2>TM</font></sup> 4.0 API includes both\nthe <code>java.sql</code> package, referred to as the JDBC core API,\nand the <code>javax.sql</code> package, referred to as the JDBC Optional\nPackage API. ',non-directive
' Saves the non-default-valued preferences known to this preference store\n to the file from which they were originally loaded.\n \n',non-directive
' Set the current color value and update the control.\n \n @param rgb\n            The new color.\n',non-directive
?,non-directive
' Returns a text edit describing the text modification that would be executed if the delete key\n was pressed on the given selection.\n \n',non-directive
' Returns a GridDataFactory initialized with heuristicly generated defaults for the given control.\n ',non-directive
?,non-directive
'@return <code>true</code> if the preference has a known default value\n and its current value is the same, and <code>false</code> otherwise\n (including the case where the preference is unknown to this store)\n',non-directive
?,non-directive
'@since 3.4\n',non-directive
' Creates a new boolean field editor\n',non-directive
'@param dialogFont\n            the <code>Font</code> to use.\n ',non-directive
'@return the label text\n',non-directive
?,non-directive
' Creates an empty image registry using the given resource manager to allocate images.\n \n',non-directive
' Height of button bar in dialog units (value 25).\n',non-directive
?,non-directive
'</pre>\n',non-directive
'@link Table}.\n \n',non-directive
?,non-directive
' Returns the title image label.\n \n',non-directive
?,non-directive
' Selects the saved item in the tree of preference pages. ',non-directive
'@since 3.4\n',non-directive
' Sets the window title for the container that hosts this page to the given\n string.\n \n @param newTitle\n            the window title for the container\n',non-directive
'@param revision the revision of the new region\n ',non-directive
?,non-directive
' RowLayoutFactory creates and initializes row layouts. There are two ways to\n use RowLayoutFactory. Normally, it is used as a shorthand for writing\n \"new RowLayout()\" and initializing a bunch of fields. In this case the main\n benefit is a more concise syntax and the ability to create more than one\n identical RowLayout from the same factory. Changing a property of the factory\n will affect future layouts created by the factory, but has no effect on\n layouts that have already been created.\n \n @since 3.5\n',non-directive
' Gets a float from a Map in a null-safe manner.\n ',non-directive
'If the value is a <code>String</code> it is converted using\n {',non-directive
'@since 3.1\n',non-directive
'@param key  the key to look up\n ',non-directive
'<li>fill(false)</li>\n ',non-directive
'@see Dialog#getDialogBoundsStrategy()\n',non-directive
' <p>\n GridLayoutFactory can also generate grid data for all the controls in a layout. ',non-directive
' Creates and returns a new image descriptor from a URL.\n\n ',non-directive
'If the value is a <code>String</code> and it equals \'true\' ignoring case\n then <code>true</code> is returned, otherwise <code>false</code>.\n ',non-directive
'@param name\n            the name of the preference this field editor works on\n ',non-directive
'\n<p>\nThis package contains implementations of the\n{',non-directive
'@return the string-valued preference\n',non-directive
'@param defaultValue  what to return if the value is null or if the\n     conversion fails\n  ',non-directive
'<LI>Ability to retrieve and update the SQL structured type instance that a\n      <code>Ref</code> object references\n  ',non-directive
'@param labelText the label text of the field editor\n ',non-directive
'</p>\n\n ',non-directive
?,non-directive
'<li><a href=\"\">##### REFER TO NON-SPEC DOCUMENTATION HERE #####</a>\n</ul>\n',non-directive
?,non-directive
?,non-directive
'@link SWT} color constants:\n {',non-directive
' Creates a file field editor.\n \n',non-directive
' Sets whether help is available for this wizard.\n ',non-directive
'@param contentAssistSubjectControl the content assist subject control whose\n           document is used to compute the proposals\n ',non-directive
' The label for proceed buttons.\n',non-directive
' Show the receiver as being paused.\n @since 3.4\n',non-directive
' Gets a list iterator over an object or primitive array.\n <p>\n This method will handle primitive arrays as well as object arrays.\n The primitives will be wrapped in the appropriate wrapper class.\n\n @param array  the array over which to iterate\n @return  a list iterator over the array\n @throws IllegalArgumentException if the array is not an array\n @throws NullPointerException if array is null\n',non-directive
'@param b\n            <code>true</code> to enable the cancel button, and\n            <code>false</code> to disable it\n ',non-directive
' Sets the indent of the control within the cell. Moves the position of the control\n by the given number of pixels. Positive values move toward the lower-right, negative\n values move toward the upper-left.\n \n @param indent offset to move the control\n @return this\n',non-directive
' Runnable that cleans up the manager on disposal of the display.\n',non-directive
?,non-directive
'If the agent cannot be started\n(for example, because the agent class cannot be loaded,\nor because the agent class does not have a conformant <code>agentmain</code> method), the JVM will\nnot abort. ',non-directive
' Returns this field editor\'s radio group control.\n ',non-directive
'@param mask\n            a mask as per <code>IStatus.matches</code>\n ',non-directive
?,non-directive
' Returns the label control. \n\n ',non-directive
?,non-directive
' Sets the error message that will be displayed when and if \n an error occurs.\n\n ',non-directive
'<li><a href=\"\">##### REFER TO NON-SPEC DOCUMENTATION HERE #####</a>\n</ul>\n',non-directive
?,non-directive
'@return a FontDescriptor that describes the given font\n',non-directive
' Returns the leading image width.\n\n ',non-directive
' Returns this field editor\'s scale control.\n \n',non-directive
'@return <code>RGB</code>\n',non-directive
'<h4>Classes</h4>\n<ul>\n  ',non-directive
'@return the value in the Map as an int, <code>defaultValue</code> if null map input\n',non-directive
' An empty unmodifiable map.\n This was not provided in JDK1.2.\n',non-directive
?,non-directive
' Resizes the range by <code>delta</code> lines, keeping {@link #start()} constant.\n\n @param delta the number of lines to resize the range\n @throws LineIndexOutOfBoundsException if <code>-delta</code> &gt;= {@link #length()}\n',non-directive
?,non-directive
'@return the font\n',non-directive
'@return boolean\n',non-directive
' Prints the contents of this preference store to the given print writer.\n \n',non-directive
'@return the <code>switch</code> closure\n ',non-directive
' Returns the current value of the rectangle-valued preference with the\n given name in the given preference store.\n Returns the default-default value (<code>RECTANGLE_DEFAULT_DEFAULT</code>) \n if there is no preference with the given name, or if the current value \n cannot be treated as a rectangle.\n\n @param store the preference store\n @param name the name of the preference\n @return the rectangle-valued preference\n',non-directive
' Tells whether this manager\'s information control is currently being replaced.\n\n ',non-directive
'<li>PKCS #1: RSA Encryption Standard, Version 1.5, November 1993 </li>\n  ',non-directive
'@since 1.4\n\n\n',non-directive
'@param newValue the new value\n',non-directive
?,non-directive
?,non-directive
?,non-directive
'  Looks up the given key in the given map, converting the result into\n  a number, using the default value if the the conversion fails.\n\n  ',non-directive
'@throws IllegalArgumentException if the predicate is null\n ',non-directive
'<li><tt>getHyperlinkStateMask()</tt> to specify when hyperlinks are activated</li>\n</ul>\n',non-directive
'@param value the new current value of the preference\n \n ',non-directive
' Gets a byte from a Map in a null-safe manner.\n ',non-directive
' Gets an int from a Map in a null-safe manner.\n <p>\n The int is obtained from the results of {@link #getNumber(Map,Object)}.\n\n @param map  the map to use\n @param key  the key to look up\n @return the value in the Map as an int, <code>0</code> if null map input\n',non-directive
' Gets a Integer from a Map in a null-safe manner.\n ',non-directive
' Indicates whether the mouse cursor is allowed to leave the subject area without closing the hover.\n\n ',non-directive
'Another group of classes\nimplements the RMI Transport protocol and HTTP tunneling.\n\n',non-directive
'\nProvides useful building blocks used throughout JFace,\nincluding property change events, a listener list implementation, and runtime\nchecked assertions.\n<br>&nbsp;\n',non-directive
'@see #open(int, Shell, String, String, int)\n',non-directive
'@return the first line contained in this range\n',non-directive
'@param page the page\n ',non-directive
'-->\n\n',non-directive
'A standard directory\n dialog appears when the user presses the change button.\n',non-directive
' The label for yes to all buttons.\n',non-directive
'@return the new section\n',non-directive
'@return this\n',non-directive
'@linkplain org.eclipse.jface.text.contentassist.ContentAssistant content assistant}\n to a <code>Control</code>.\n\n ',non-directive
'@return the font-valued preference\n',non-directive
'@since 3.3\n',non-directive
'These objects can then be run in any runnable context (<tt>IRunnableContext</tt>),\nincluding such standard JFace UI components as application windows (<tt>ApplicationWindow</tt>),\nwizard dialogs (<tt>WizardDialog</tt>), and progress monitor dialogs (<tt>ProgressMonitorDialog</tt>).\n',non-directive
' Sets the hover later returned by {',non-directive
?,non-directive
?,non-directive
' Creates a local registry that wraps the given global registry. ',non-directive
?,non-directive
'</p>\n\n ',non-directive
'<li><p>The system class loader (\n      {',non-directive
?,non-directive
'@see WizardDialog\n ',non-directive
'@link org.eclipse.jface.text.contentassist.IContentAssistProcessor}\n which provides the context for the\n {',non-directive
'</pre>\n',non-directive
' A mutator for the state of the toggle button. ',non-directive
' Returns this field editor\'s current value.\n \n',non-directive
?,non-directive
'\n\nProvides classes and interfaces for handling text, dates, numbers, and messages\nin a manner independent of natural languages.  This means your main application\nor applet can be written to be language-independent, and it can rely upon\nseparate, dynamically-linked localized resources. This allows the flexibility\nof adding localizations for new localizations at any time.\n<p>\nThese classes are capable of formatting dates, numbers, and messages, parsing;\nsearching and sorting strings; and iterating over characters, words, sentences,\nand line breaks.  This package contains three main groups of classes and\ninterfaces:\n<ul>\n<li>Classes for iteration over text\n<li>Classes for formatting and parsing\n<li>Classes for string collation\n</ul>\n<!--\n<h2>Package Specification</h2>\n\n##### FILL IN ANY SPECS NEEDED BY JAVA COMPATIBILITY KIT #####\n<ul>\n  <li><a href=\"\">##### REFER TO ANY FRAMEMAKER SPECIFICATION HERE #####</a>\n</ul>\n\n<h2>Related Documentation</h2>\n\nFor overviews, tutorials, examples, guides, and tool documentation, please see:\n<ul>\n  <li><a href=\"\">##### REFER TO NON-SPEC DOCUMENTATION HERE #####</a>\n</ul>\n-->\n\n@since JDK1.1\n',non-directive
?,non-directive
'The main implementation\nis {',non-directive
'\nProvides support for detecting and displaying hyperlinks in <tt>ISourceViewer</tt>s.\n<p>\n<tt>SourceViewer</tt> supports hyperlinked text regions inline in the displayed text. It delegates \nthe detection and presentation of hyperlinks to <tt>IHyperlinkDetector</tt> and <tt>IHyperlinkPresenter</tt>, respectively.\n</p>\n<p>\nOverride the following methods in <tt>SourceViewerConfiguration</tt> to customize the hyperlink behavior of a source viewer:\n<ul>\n  <li><tt>getHyperlinkDetectors()</tt> to specify the set of hyperlink detectors used by the viewer</li>\n  <li><tt>getHyperlinkPresenter()</tt> to specify the set of hyperlink presenters used by the viewer</li>\n  <li><tt>getHyperlinkStateMask()</tt> to specify when hyperlinks are activated</li>\n</ul>\n</p>\n\n',non-directive
'The primitives will be wrapped in the appropriate wrapper class.\n\n ',non-directive
' Button id for a \"Next\" button (value 15).\n',non-directive
' Loads this preference store from the file established in the constructor\n <code>PreferenceStore(java.lang.String)</code> (or by\n <code>setFileName</code>). ',non-directive
'</p>\n \n ',non-directive
' Returns the image used to present this node in a preference dialog.\n\n @return the image for this node, or <code>null</code>\n   if there is no image for this node\n',non-directive
'@since 3.3\n',non-directive
?,non-directive
'<h2>\nPackage Specification</h2>\nA dialog is a specialized window, typically consisting of a dialog area\nand a button bar, designed for narrow-focussed communication with the user.\n',non-directive
'@throws IllegalArgumentException if either argument is null\n',non-directive
' Gets a long from a Map in a null-safe manner,\n using the default value if the the conversion fails.\n ',non-directive
'@return the revision that this region belongs to\n',non-directive
' Show the title.\n \n @param titleMessage\n            String for the titke\n @param titleImage\n            Image or <code>null</code>\n',non-directive
'@return the value in the Map as a byte, <code>0</code> if null map input\n',non-directive
'@return the font descriptor for the JFace default font\n ',non-directive
' Returns the font descriptor for the JFace default font.\n \n',non-directive
'@since 3.0\n',non-directive
' Adjusts this change region to a diff hunk. ',non-directive
'@return the value.\n ',non-directive
?,non-directive
?,non-directive
' Returns the wizard page that would to be shown if the user was to\n press the Back button.\n\n @return the previous wizard page, or <code>null</code> if none\n',non-directive
'@since 3.3\n',non-directive
'The formatters\nare accessible through the <code>KeyFormatterFactory</code>.  ',non-directive
'@link Enumeration} instances.\n\n ',non-directive
' A standard implementation of an IProgressMonitor. ',non-directive
' Returns an enumeration of all preferences known to this store which have\n current values other than their default value.\n \n @return an array of preference names\n',non-directive
?,non-directive
' Creates a new wizard dialog for the given wizard.\n \n @param parentShell\n            the parent shell\n @param newWizard\n            the wizard this dialog is working on\n',non-directive
'@param map  the map to use\n ',non-directive
' Tests whether this page\'s UI content has already been created.\n \n',non-directive
' Returns the control of this content assist subject control.\n\n @return the control of this content assist subject control\n',non-directive
'Opens an error dialog to display\n the error. ',non-directive
' Returns <code>true</code> if a revision model has been set, <code>false</code> otherwise.\n\n ',non-directive
'@since Commons Collections 2.1\n ',non-directive
'@param minWidth\n            the minimum page width\n ',non-directive
'A modifier key is one of\nCtrl, Shift, Alt, or Command.  ',non-directive
'@return this\n ',non-directive
'@since 3.0\n',non-directive
'@param s the source string\n ',non-directive
'Because the <code>{',non-directive
'If a size has been stored, it is returned.\n \n',non-directive
' Removes the preference node at the given path.\n \n',non-directive
'@since 3.5\n',non-directive
'Moves the position of the control\n by the given number of pixels. ',non-directive
?,non-directive
' Returns the image descriptor for this node.\n \n',non-directive
'@return an array containing the root nodes\n ',non-directive
'It collaborates with content type specific completion processors (<tt>IContentAssistProcessor</tt>)\nin order to generate completion proposals (<tt>ICompletionProposal</tt>)\nvalid at the current document position. ',non-directive
?,non-directive
'@param parent The parent of the controls in the group.\n  ',non-directive
' Returns the text regions covered by the given selection.\n \n',non-directive
'<LI><code>Blob</code> interface -- mapping for SQL <code>BLOB</code> \n\t ',non-directive
' Returns the text label used to present this node in a preference dialog.\n\n ',non-directive
?,non-directive
' Returns the number of pixels corresponding to the height of the given\n number of characters.\n \n @param chars\n            the number of characters\n @return the number of pixels\n',non-directive
?,non-directive
'@throws NullPointerException if iterators collection is null or contains a null\n ',non-directive
'@param iterator  the iterator to use, not null\n ',non-directive
'@link org.apache.commons.collections.OrderedMap OrderedMap} and\n{',non-directive
' A value that can be used for stored dialog width or height that\n indicates that the default bounds should be used.\n \n',non-directive
' Converts the given value into an SWT point.\n ',non-directive
?,non-directive
' Creates a new range with the given start offset and length.\n\n ',non-directive
'@since 3.5\n',non-directive
' An information control replacer can replace an {',non-directive
'@link GC} to draw onto\n ',non-directive
'\n<p>Provides JFace-specific support for contexts.</p>\n\n<h2>Package Specification</h2>\n<p>\nThis package provides some context identifiers that have special meaning in the\ncontext of JFace.\n</p>\n',non-directive
'@return the value as a point, or the default value\n',non-directive
'</p>\n \n ',non-directive
?,non-directive
' Post-order means visit the children, and then the root.\n',non-directive
' A dialog to display one or more errors to the user, as contained in an\n <code>IStatus</code> object. ',non-directive
'@param key  the key to look up\n ',non-directive
'@since 3.1\n',non-directive
'@param name the name of the preference\n ',non-directive
'<!--\n<h2>Related Documentation</h2>\n\nFor overviews, tutorials, examples, guides, and tool documentation, please see:\n<ul>\n  ',non-directive
?,non-directive
'@throws IllegalArgumentException if any closure in the map is null\n ',non-directive
'@since 3.5\n',non-directive
?,non-directive
' Returns the current value of the font-valued preference with the\n given name in the given preference store.\n ',non-directive
'<LI><code>Connection</code> interface --  provides methods for creating\n             statements and managing connections and their properties\n\t ',non-directive
' Sets the current value of the preference with the given name\n in the given preference store.\n\n @param store the preference store\n @param name the name of the preference\n @param value the new current value of the preference\n',non-directive
' Returns the number of pixels corresponding to the given number of\n vertical dialog units.\n \n @param dlus\n            the number of vertical dialog units\n @return the number of pixels\n',non-directive
'@param map  the map to use\n ',non-directive
' Sets the size of all pages. ',non-directive
' Returns the currentPage.\n ',non-directive
'@param equal true iff the columns should be forced to be equal width\n ',non-directive
' Returns the shell for this wizard container.\n\n ',non-directive
' Recursively enumerates all nodes at or below the given node\n and adds them to the given list in the given order.\n \n @param node the starting node\n @param sequence a read-write list of preference nodes\n  (element type: <code>IPreferenceNode</code>)\n  in the given order\n @param order the traversal order, one of \n\t<code>PRE_ORDER</code> and <code>POST_ORDER</code>\n',non-directive
' Converts the given value into an SWT point.\n ',non-directive
'@param key  the key of the value to look up in that map\n  ',non-directive
' The IInputValidator is the interface for simple validators. \n ',non-directive
' Add a section in the receiver.\n \n @param section\n            the section to be added\n',non-directive
'@link org.eclipse.jface.text.contentassist.IContentAssistant} to\n allow to install a content assistant on the given\n {',non-directive
' The label for ignore buttons.\n',non-directive
'@param oldValue the old value\n ',non-directive
'The value is loaded from the preference store; if modified by the\nend user, the value is validated and eventually stored back to the preference\nstore.\n',non-directive
'@param c\n            the composite\n ',non-directive
' The label for close buttons.\n',non-directive
'@link java.lang.NullPointerException NullPointerException} to be thrown.\n\n',non-directive
'@param left\n            left margin size (pixels)\n ',non-directive
' Returns the style for the message label.\n \n @return the style for the message label\n \n @since 3.0\n',non-directive
'@param value\n            the value to be associated with the <code>key</code>\n',non-directive
'@link Map} as an {',non-directive
?,non-directive
?,non-directive
?,non-directive
'<h2>Package Specification</h2>\n<tt>IRevisionRulerColumn</tt> is the protocol that a team provider can use to display line based revision control information to a document.\n',non-directive
' This class is not normally instantiated.\n',non-directive
?,non-directive
'@param dflt the default value\n ',non-directive
' Sets the layout data on the given control. ',non-directive
' Sets the size of all pages. ',non-directive
?,non-directive
'@return the name of this page\n',non-directive
?,non-directive
'@param contentAssistSubjectControl the one who requests content assist\n',non-directive
'<li>\ncolor registries (<tt>ColorRegistry</tt>) - for hanging on to the SWT color \nobjects needed by an application</li>\n\n',non-directive
' Constant for no image (value 0).\n \n @see #MessageDialog(Shell, String, Image, String, int, String[], int)\n',non-directive
'Each preference has a current value and a\ndefault value use to (re-)initialize it. ',non-directive
'@param arrayClass  the class of array to create\n ',non-directive
'@param selection the selection to replace\n ',non-directive
' Returns the progress monitor to use for operations run in this progress\n dialog.\n \n',non-directive
'@return the previous key in the iteration\n ',non-directive
' Deallocates a resource previously allocated by {',non-directive
'All colors will be allocated using \n it.\n',non-directive
' Returns whether any popups controlled by the receiver have the input focus.\n\n @return <code>true</code> if any of the managed popups have the focus, <code>false</code> otherwise\n',non-directive
' Button id for a \"Finish\" button (value 16).\n',non-directive
' Returns whether any popups controlled by the receiver have the input focus.\n\n ',non-directive
'\n The field editor preference page implementation of a <code>PreferencePage</code>\n method loads all the field editors with their default values.\n',non-directive
'document).\n\n ',non-directive
' Creates a boolean field editor in the given style.\n \n @param name\n            the name of the preference this field editor works on\n @param labelText\n            the label text of the field editor\n @param style\n            the style, either <code>DEFAULT</code> or\n            <code>SEPARATE_LABEL</code>\n @param parent\n            the parent of the field editor\'s control\n @see #DEFAULT\n @see #SEPARATE_LABEL\n',non-directive
'@param item table item\n ',non-directive
'@since 2.0\n',non-directive
?,non-directive
'<li>{',non-directive
'<li>VERTICAL: Position the controls vertically from top to bottom</li>\n </ul>\n ',non-directive
' Hides any open pop-ups.\n',non-directive
'@see SWT#COLOR_WIDGET_BACKGROUND\n ',non-directive
'@param parent The Composite to create the button in if required.\n ',non-directive
?,non-directive
'<LI>Savepoints -- allow a transaction to be rolled back to a designated\n      savepoint\n  ',non-directive
' Returns whether the next page could be displayed.\n\n ',non-directive
'\n<p>\nThis package contains implementations of the\n{',non-directive
'@return the new <code>Control</code>.\n ',non-directive
'@return the value as a float, or the default value\n',non-directive
' Sets the name of the selected item preference.\n \n @param pageId\n            The identifier for the page\n',non-directive
'<P>\n<P>\n<h3>Custom Mapping of UDTs</h3>\nA user-defined type (UDT) defined in SQL can be mapped to a class in the Java\nprogramming language. ',non-directive
'@link java.lang.management.RuntimeMXBean}</tt> </td>\n<td> Runtime system of the Java virtual machine.</td>\n</tr>\n<tr>\n<td> <tt>{',non-directive
'The following decorators are provided in the package:\n<ul>\n',non-directive
?,non-directive
'@param value the float object\n ',non-directive
' Returns the selected range.\n\n ',non-directive
'@see org.apache.commons.collections.functors.WhileClosure\n \n ',non-directive
'<p>\n If the value is a <code>Number</code> it is returned directly.\n ',non-directive
?,non-directive
'@param tray the tray to show in this dialog\n ',non-directive
'@param parentRegistry global registry \n',non-directive
'<h2>\nPackage Specification</h2>\n<tt>RuleBasedScanner</tt> is a document-based scanner controlled by <tt>IRule</tt>\nobjects. ',non-directive
?,non-directive
'@return int\n ',non-directive
'The most important classes are <code>Object</code>,\nwhich is the root of the class hierarchy, and <code>Class</code>, instances of\nwhich represent classes at run time.\n',non-directive
' Sets the window title for the container that hosts this page to the given\n string.\n \n',non-directive
' Creates new layout object.\n \n',non-directive
' Gets an immutable version of an {',non-directive
'@return a new initialized GridLayout.\n ',non-directive
' The label for skip buttons.\n',non-directive
'@since 3.1\n\n ',non-directive
' Create the contents for the receiver.\n \n @param parent\n            the Composite that the children will be created in\n',non-directive
'<p>\n\n<b>Implementations.</b> Classes {',non-directive
?,non-directive
?,non-directive
'@param font font to create\n ',non-directive
'@return a default image that will be returned in the event that the intended\n image is missing.\n',non-directive
'</p>\n \n ',non-directive
?,non-directive
' Creates a multi-value map backed by the given map which returns\n collections created by the specified collection factory.\n\n @param map  the map to decorate\n @param collectionFactory  a factor which creates collection objects\n @return a multi-value map backed by the given map which returns collections\n created by the specified collection factory\n @see MultiValueMap\n @since Commons Collections 3.2\n',non-directive
'@since 3.0\n',non-directive
'@since 3.1\n',non-directive
?,non-directive
?,non-directive
' {@inheritDoc}\n \n ',non-directive
'@since JDK1.1\n',non-directive
'@param iterator2  the first iterators to use, not null\n ',non-directive
'@param page the previous wizard page\n',non-directive
'F. ',non-directive
' Creates a new GridLayout, and initializes it with values from the factory.\n \n',non-directive
' Layout constant (value <code>1</code>) indicating that\n the field editors\' basic controls are put into a grid layout.\n',non-directive
'The main difference\nis that decorated fields reserve space for multiple decorations in particular\nlocations around the control.  ',non-directive
' Initializes all field editors.\n',non-directive
' Creates an instance of a status dialog.\n \n',non-directive
?,non-directive
'@since 3.1\n',non-directive
?,non-directive
'@return the list control\n',non-directive
'@param inputChangeListener the listener to add\n ',non-directive
?,non-directive
'The\n      Java Naming and Directory Interface<sup><font size=-2>TM</font></sup>\n      (JNDI) is used for registering a <code>DataSource</code> object with a \n      naming service and also for  retrieving it.\n  ',non-directive
' Set the layout data of the button to a FormData with appropriate heights\n and widths.\n \n @param button\n',non-directive
'The package\ncontains a default implementation of <tt>IReconciler</tt> (<tt>Reconciler</tt>).\n\n',non-directive
' JFaceColors is the class that stores references\n to all of the colors used by JFace.\n',non-directive
' Converts the given float value to a string.\n Equivalent to <code>String.valueOf(value)</code>.\n\n @param value the float value\n @return the string representing the given float\n',non-directive
'Values other than <code>true</code> are considered <code>false</code>.\n                        ',non-directive
'@link org.eclipse.jface.contentassist.IContentAssistSubjectControl}.\n\n ',non-directive
?,non-directive
'This is accomplished by using the <tt>ContributionTemplateStore</tt> and <tt>ContributionContextTypeRegistry</tt>\nsubclasses of the above types.<br>\n<br>\n',non-directive
'@param key  the key to look up\n ',non-directive
'@see IPageChangedListener#pageChanged\n \n ',non-directive
' Sets the wizard this dialog is currently displaying.\n \n',non-directive
' Returns the text covered by <code>selection</code>\n \n @param selection the selection\n @return the text covered by <code>selection</code>\n @throws BadLocationException if computing the edit failed\n',non-directive
'@return Composite\n',non-directive
?,non-directive
' Disposes all currently allocated resources.\n',non-directive
' Manages SWT resources for a particular device.\n  \n',non-directive
' Returns a copy of the given GridData \n \n @param data GridData to copy\n @return a copy of the argument\n',non-directive
' Sets the range of valid values for this field.\n \n',non-directive
'Preferences are presented to the end\nuser in a <b>preference dialog</b> consisting of <b>preference pages</b>.\n',non-directive
'@return the <code>TreeViewer</code>.\n ',non-directive
'@since 3.0\n',non-directive
'The default closure is set in the map\n using a null key.\n \n',non-directive
'<p>\n<code>Array</code> provides static methods to dynamically create and\naccess arrays.\n',non-directive
' Gets a long from a Map in a null-safe manner.\n <p>\n The long is obtained from the results of {@link #getNumber(Map,Object)}.\n\n @param map  the map to use\n @param key  the key to look up\n @return the value in the Map as a long, <code>0L</code> if null map input\n',non-directive
' Reset the progress bar to it\'s normal style.\n @since 3.4\n',non-directive
'</p>\n ',non-directive
'@return this\n',non-directive
'The package provides a default\nimplementation <tt>ContentAssistant</tt> which completely defines and implements\nthe UI and the control flow for content assist.\n<br>&nbsp;\n',non-directive
' Creates a composite with a highlighted Note entry and a message text.\n ',non-directive
'@param range another line range to compare the receiver to\n ',non-directive
?,non-directive
' Adds a property change listener to this registry.\n \n @param listener a property change listener\n',non-directive
'@param key  the key of the value to look up in that map\n  ',non-directive
'@since JDK1.1\n',non-directive
' A variable {@link org.eclipse.jface.text.source.ILineRange} with the following invariant:\n <ul>\n <li>{@link #start() start} &gt;= 0\n <li>{@link #length() length} &gt; 0, i.e. a range cannot be empty\n </ul>\n <p>\n Attempts to create or modify a <code>Range</code> such that this invariant would be violated\n result in a {@link LineIndexOutOfBoundsException} being\n thrown.\n </p>\n\n @since 3.2\n',non-directive
'</p>\n \n ',non-directive
' Disposes the wizard managed by this node. ',non-directive
'\n<p>\nThis package contains implementations of the \n{',non-directive
' Creates a font field editor without a preview.\n \n @param name the name of the preference this field editor works on\n @param labelText the label text of the field editor\n @param parent the parent of the field editor\'s control\n',non-directive
' The default-default value for color preferences \n (black, <code>RGB(0,0,0)</code>).\n',non-directive
' Converts the line-based information of {',non-directive
'@param key  the key of the value to look up in that map\n  ',non-directive
' The cancel button has been pressed.\n \n @since 3.0\n',non-directive
'@param contentAssistSubjectControl the content assist subject control\n ',non-directive
'@return the int-valued preference\n',non-directive
'@link java.lang.ClassLoader#getSystemClassLoader ClassLoader.getSystemClassLoader}). ',non-directive
'\n<p>\nThis package contains the interfaces and utilities shared across all the subpackages of this component.\n',non-directive
?,non-directive
'<li>GridDataFactory uses vector setters (it accepts Points), making it easy to\n     set X and Y values together</li>\n </ul>\n ',non-directive
?,non-directive
'<li><a href=\"\">##### REFER TO ANY FRAMEMAKER SPECIFICATION HERE #####</a>\n</ul>\n\n',non-directive
'@param labelText the label text of the field editor\n ',non-directive
?,non-directive
' Adds the given preference node as a subnode of this\n preference node.\n\n @param node the node to add\n',non-directive
' Returns the default minimum button size, in pixels\n \n ',non-directive
?,non-directive
'@return the input string\n',non-directive
' Create an area for adding support components as a child of parent.\n ',non-directive
'\n\nProvides classes for reading and writing the JAR (Java ARchive) file\nformat, which is based on the standard ZIP file format with an\noptional manifest file.  ',non-directive
'@return the string representing the given float value\n',non-directive
'@param dirChooserLabelText the label text displayed for the directory chooser\n ',non-directive
?,non-directive
' Creates a new empty wizard.\n',non-directive
' Sets whether this field editor is presenting the default value.\n\n ',non-directive
'</p>\n\n ',non-directive
'@since 3.1 \n\n ',non-directive
' Creates a new range with the same start and length as the passed line range.\n\n @param range the range to copy\n @return a <code>Range</code> with the same start and length as <code>range</code>\n @throws LineIndexOutOfBoundsException if the passed {@link ILineRange} does not adhere to the\n         contract of {@link Range}\n',non-directive
'@return the value in the Map, <code>null</code> if null map input\n',non-directive
'<LI><code>DriverManager</code> class -- makes a connection with a driver\n\t ',non-directive
' Enables showing the revision id.\n\n @param show <code>true</code> to show the revision, <code>false</code> to hide it\n',non-directive
' Gets an iterator that provides an iterator view of the given enumeration.\n\n @param enumeration  the enumeration to use\n @return a new iterator\n',non-directive
'</p>\n',non-directive
' Gets a boolean from a Map in a null-safe manner.\n <p>\n If the value is a <code>Boolean</code> its value is returned.\n If the value is a <code>String</code> and it equals \'true\' ignoring case\n then <code>true</code> is returned, otherwise <code>false</code>.\n If the value is a <code>Number</code> an integer zero value returns\n <code>false</code> and non-zero returns <code>true</code>.\n Otherwise, <code>false</code> is returned.\n\n @param map  the map to use\n @param key  the key to look up\n @return the value in the Map as a Boolean, <code>false</code> if null map input\n',non-directive
'<li>minSize(1,1)</li>\n ',non-directive
'@param event\n            a selection changing event\n \n ',non-directive
'<p>\n This iterator is a valid map iterator object that will iterate\n over nothing.\n\n ',non-directive
'@return The string representation of the font data object.\n ',non-directive
' Creates a GridLayoutFactory that creates GridLayouts with the default SWT\n values.\n \n',non-directive
'@see org.apache.commons.collections.functors.TransformerClosure\n \n ',non-directive
' Converts the given value into an SWT font data object.\n This method fails if the value does not represent font data.\n <p>\n A valid font data representation is a string of the form\n <code><it>fontname</it>-<it>style</it>-<it>height</it></code> where\n <code><it>fontname</it></code> is the name of a font,\n <code><it>style</it></code> is a font style (one of\n <code>\"regular\"</code>, <code>\"bold\"</code>,\n <code>\"italic\"</code>, or <code>\"bold italic\"</code>)\n and <code><it>height</it></code> is an integer representing the\n font height. Example: <code>Times New Roman-bold-36</code>.\n </p>\n\n @param value the value to be converted\n @return the value as font data\n @exception DataFormatException if the given value does not represent\n\tfont data\n',non-directive
' Sets the current value of the preference with the given name\n in the given preference store.\n\n ',non-directive
' Removes the given listener from this <code>ColorSelector</code>. ',non-directive
'<li><tt>Template</tt> a template consists of name, context\ntype identifier, and a pattern.</li>\n  ',non-directive
' Button id for an \"Abort\" button (value 7).\n',non-directive
?,non-directive
'@param map  the map to use\n ',non-directive
'@return the originating page change provider\n',non-directive
?,non-directive
'@param labelText the label text of the field editor\n ',non-directive
'@since 3.0\n',non-directive
'Normally, it is used as a shorthand for writing \"new GridLayout()\" and initializing a bunch \n of fields. ',non-directive
'</p>\n',non-directive
'@link Transformer} is more appropriate.\n ',non-directive
'\n\nProvides the API for accessing and processing data stored in a \ndata source (usually a relational database) using the \nJava<sup><font size=-2>TM</font></sup> programming language. \n',non-directive
' Creates an empty image registry using the given resource manager to allocate images.\n \n @param manager the resource manager used to allocate images\n \n @since 3.1\n',non-directive
'@return the string representing the given rectangle\n',non-directive
'@param toCreate Color to generate a ColorDescriptor from\n ',non-directive
?,non-directive
?,non-directive
' Return whether or not the dialog font is currently the same as the\n default font.\n \n',non-directive
?,non-directive
' Shell style appropriate for a simple hover popup that cannot get focus.\n \n',non-directive
?,non-directive
?,non-directive
' Opens the information control with the given information and the specified\n subject area. ',non-directive
'@param creator the information control creator for the additional information control\n ',non-directive
' A hunk describes a contiguous range of changed, added or deleted lines. <code>Hunk</code>s are separated by\n one or more unchanged lines.\n\n @since 3.3\n',non-directive
'<h2>\nPackage Specification</h2>\n<p> This package provides classes for trim widgets.\n',non-directive
'@see #open(int, Shell, String, String, int)\n',non-directive
'@link UnsupportedOperationException} for\n the {',non-directive
'@see #createButton(Composite, int, String, boolean)\n ',non-directive
' Sets the progress monitor part\'s font.\n',non-directive
' Sets the current value of the preference with the given name back\n to its default value.\n ',non-directive
?,non-directive
'@since 3.1\n',non-directive
'@param informationControlReplacer the information control replacer, whose information control should get the new input\n',non-directive
?,non-directive
'the cancel lister attached to the cancel component ',non-directive
'@param parent\n            the parent <code>Composite</code>.\n ',non-directive
?,non-directive
'@see #swtDefaults\n',non-directive
' Returns the string typed into this input dialog.\n \n @return the input string\n',non-directive
' Creates a multi-value map backed by the given map which returns\n collections created by the specified collection factory.\n\n ',non-directive
?,non-directive
'@return this\n ',non-directive
'@param type\n            One of SWT.HORIZONTAL or SWT.VERTICAL\n ',non-directive
?,non-directive
' Converts the given SWT rectangle object to a string.\n <p>\n The string representation of a rectangle has the form\n <code><it>x</it>,<it>y</it>,<it>width</it>,<it>height</it></code>\n where <code><it>x</it></code>, <code><it>y</it></code>,\n <code><it>width</it></code>, and <code><it>height</it></code>\n are string representations of integers.\n </p>\n\n @param value the rectangle object\n @return the string representing the given rectangle\n',non-directive
'<li>\nimage descriptors (<tt>ImageDescriptor</tt>) - surrogate object for creating\nSWT images</li>\n\n',non-directive
'@param style a bitwise combination of SWT.NORMAL, SWT.ITALIC and SWT.BOLD\n ',non-directive
?,non-directive
'\n<p>The \"split map\" concept is that of an object that implements\nthe {',non-directive
'@return The string representation of the font data object.\n',non-directive
?,non-directive
'@param useGroup whether to use a Group control to contain the radio buttons\n',non-directive
?,non-directive
?,non-directive
'@param labelText the label text of the field editor\n ',non-directive
?,non-directive
' The cursor used in the cancel button;\n',non-directive
'@param wrap\n            the wrap status\n ',non-directive
'@throws IndexOutOfBoundsException if start is less than zero\n ',non-directive
?,non-directive
'@return the string with all whitespace characters removed\n',non-directive
'</p>\n \n ',non-directive
'@param dialogImageType\n            one of the following values:\n            <ul>\n            ',non-directive
'@see org.apache.commons.collections.functors.ForClosure\n \n ',non-directive
'<LI>Since 1.2 -- new in the JDBC 2.0 API and part of the J2SE platform, \n     version 1.2\n ',non-directive
'@param value\n            the value to be associated with the <code>key</code>\n',non-directive
'@param showPersistActions\n            A boolean indicating whether actions allowing the user to\n            control the persisting of the dialog bounds and location\n            should be shown in the dialog menu. ',non-directive
'This dialog has a standard\nlayout: an area at the top containing the wizard\'s title, description,\nand image; the actual wizard page appears in the middle; below it is a\nprogress indicator; and at the bottom is an area with a message line and\na button bar containing Next, Back, Finish, Cancel, and Help buttons.\n',non-directive
' Returns the current error message for this dialog page.\n ',non-directive
'@since 3.2\n ',non-directive
' Returns the default value for the double-valued preference\n with the given name.\n ',non-directive
' Notifies any selection changed listeners that the selected page has\n changed. ',non-directive
'The wrapper classes <code>Boolean</code>,\n<code>Character</code>, <code>Integer</code>, <code>Long</code>, <code>Float</code>, and\n<code>Double</code> serve this purpose. ',non-directive
'Finally,\nthis package provides classes that support signed/guarded objects\nand secure random number generation.\n\n',non-directive
'@param closures  an array of closures to chain\n ',non-directive
'Returns the given default value if the \n value does not represent a font data object.\n\n ',non-directive
' Adds any last-minute pages to this wizard.\n ',non-directive
' @param selection\n            the <code>ISelection</code> to examine.\n @return the first element, or null if empty.\n',non-directive
'<p>\n Example usage:\n <pre>\n\t\tRadioGroupFieldEditor editor= new RadioGroupFieldEditor(\n\t\t\t\"GeneralPage.DoubleClick\", resName, 1,\n\t\t\tnew String[][] {\n\t\t\t\t{\"Open Browser\", \"open\"},\n\t\t\t\t{\"Expand Tree\", \"expand\"}\n\t\t\t},\n          parent);\t\n </pre>\n </p>\n \n ',non-directive
'@param enumeration  the enumeration to use\n ',non-directive
'<li><a href=\"../../../../technotes/guides/security/crypto/CryptoSpec.html\"><b>Cryptography\n   Architecture</b></a>\n  ',non-directive
'@link org.apache.commons.collections.Bag Bag} and \n{',non-directive
'@param value\n            the value to be associated with the <code>key</code>\n',non-directive
'<br>&nbsp;\n<br>&nbsp;\n',non-directive
' Returns the JFace\'s banner font. ',non-directive
'<h2>\nPackage Specification</h2>\nA JFace window is an object that has no visual representation (no widgets)\nuntil it is told to open. ',non-directive
' Create the page for the node.\n @param node\n \n @since 3.1\n',non-directive
'and adjusts the preferred size to 300x400 pixels\n     GridDataFactory.defaultsFor(listBox).hint(300, 400).applyTo(listBox);\n     \n     // Generates GridData equivalent to example 4\n     GridDataFactory.generate(button, 1, 1);\n          \n </pre></code>\n \n ',non-directive
?,non-directive
' Creates a new directory field editor \n',non-directive
' A layout for a container which includes several pages, like a notebook,\n wizard, or preference dialog. ',non-directive
' Returns the current value of the color-valued preference with the\n given name in the given preference store.\n ',non-directive
'@param labelText\n            the label text of the field editor\n ',non-directive
'its left-most offset), <code>false</code> to collapse it to its greatest position\n            (e.g its right-most offset)\n ',non-directive
'</UL>\n',non-directive
' GridLayoutFactory creates and initializes grid layouts. ',non-directive
' Gets a long from a Map in a null-safe manner.\n ',non-directive
'</p>\n ',non-directive
' Returns this content assist subject control\'s document.\n\n ',non-directive
'@link #appendVerifyKeyListener(VerifyKeyListener)}.\n\n ',non-directive
?,non-directive
'@since 3.1\n\n ',non-directive
